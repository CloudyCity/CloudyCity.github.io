<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CloudyCity&#39;s Blog</title>
  
  
  <link href="https://cloudycity.me/atom.xml" rel="self"/>
  
  <link href="https://cloudycity.me/"/>
  <updated>2021-06-21T10:35:56.782Z</updated>
  <id>https://cloudycity.me/</id>
  
  <author>
    <name>CloudyCity</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Laravel使用RequestID的简易方案</title>
    <link href="https://cloudycity.me/post/Laravel%E4%BD%BF%E7%94%A8RequestID%E7%9A%84%E7%AE%80%E6%98%93%E6%96%B9%E6%A1%88.html"/>
    <id>https://cloudycity.me/post/Laravel%E4%BD%BF%E7%94%A8RequestID%E7%9A%84%E7%AE%80%E6%98%93%E6%96%B9%E6%A1%88.html</id>
    <published>2021-06-21T10:22:24.000Z</published>
    <updated>2021-06-21T10:35:56.782Z</updated>
    
    <content type="html"><![CDATA[<p>一些大型Web系统通常会给请求分配一个UUID，便于追踪定位线上的问题。</p><p>这部分的功能可以细分为：</p><ul><li>分配UUID</li><li>存储请求</li><li>检索请求</li></ul><h2 id="分配UUID"><a href="#分配UUID" class="headerlink" title="分配UUID"></a>分配UUID</h2><p>这部分比较简单，写个中间件并注册即可：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Http<span class="token punctuation">\</span>Middleware</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Http<span class="token punctuation">\</span>JsonResponse</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Http<span class="token punctuation">\</span>Request</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Http<span class="token punctuation">\</span>Response</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Laravel<span class="token punctuation">\</span>Telescope<span class="token punctuation">\</span>Watchers<span class="token punctuation">\</span>RequestWatcher</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Ramsey<span class="token punctuation">\</span>Uuid<span class="token punctuation">\</span>Uuid</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">AppendRequestId</span><span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 为请求分配一个ID     *     * @param  \Illuminate\Http\Request  $request     * @param \Closure $next     * @return mixed     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\</span>Closure</span> <span class="token variable">$next</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$uuid</span> <span class="token operator">=</span> <span class="token class-name static-context">Uuid</span><span class="token operator">::</span><span class="token function">uuid6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$request</span><span class="token operator">-></span><span class="token property">headers</span><span class="token operator">-></span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'X-Request-ID'</span><span class="token punctuation">,</span> <span class="token variable">$uuid</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/** @var Response $response */</span>        <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$next</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$response</span><span class="token operator">-></span><span class="token property">headers</span><span class="token operator">-></span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'X-Request-ID'</span><span class="token punctuation">,</span> <span class="token variable">$uuid</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$response</span> <span class="token keyword">instanceof</span> <span class="token class-name">JsonResponse</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$response</span><span class="token operator">-></span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token operator">-></span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$uuid</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$data</span><span class="token operator">-></span><span class="token property">request_id</span> <span class="token operator">=</span> <span class="token variable">$uuid</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$response</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://user-images.githubusercontent.com/17662451/122746335-7d220c00-d2bc-11eb-9e00-0e6830f463f1.png" alt="image"></p><p><img src="https://user-images.githubusercontent.com/17662451/122746428-9460f980-d2bc-11eb-90e2-b6abc87b0ec7.png" alt="image"></p><h2 id="存储请求"><a href="#存储请求" class="headerlink" title="存储请求"></a>存储请求</h2><p>这里推荐 Laravel 官方组件 <a href="https://laravel.com/docs/master/telescope">Telescope</a> , 安装过程见官方文档。</p><div class="custom-quote warning"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 8V13"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 15.99V16.01"></path></svg></span><p class="custom-quote-title">注意</p><p><code>Telescope</code>会对服务器性能有一些影响，不过你可以通过<code>.env</code>管理<code>Watcher</code>，确保线上只开启必要的<code>Watcher</code>，可以减少影响。</p></div><p><code>Telescope</code>使用<code>Tag</code>进行检索，所以我们需要把上面生成的UUID保存到<code>Tag</code>中。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Providers</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Models<span class="token punctuation">\</span>System<span class="token punctuation">\</span>Admin</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Support<span class="token punctuation">\</span>Facades<span class="token punctuation">\</span>Gate</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Laravel<span class="token punctuation">\</span>Telescope<span class="token punctuation">\</span>IncomingEntry</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Laravel<span class="token punctuation">\</span>Telescope<span class="token punctuation">\</span>Telescope</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Laravel<span class="token punctuation">\</span>Telescope<span class="token punctuation">\</span>TelescopeApplicationServiceProvider</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">TelescopeServiceProvider</span> <span class="token keyword">extends</span> <span class="token class-name">TelescopeApplicationServiceProvider</span><span class="token punctuation">&#123;</span>    <span class="token comment">/**     * Register any application services.     *     * @return void     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">// ...</span>        <span class="token class-name static-context">Telescope</span><span class="token operator">::</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">IncomingEntry</span> <span class="token variable">$entry</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$entry</span><span class="token operator">-></span><span class="token property">type</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'request'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$requestId</span> <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token property">headers</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'x-request-id'</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token variable">$requestId</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// ...</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="检索请求"><a href="#检索请求" class="headerlink" title="检索请求"></a>检索请求</h2><p><img src="https://user-images.githubusercontent.com/17662451/122746633-ca05e280-d2bc-11eb-894e-b2b34df5628c.png" alt="image"></p><p><img src="https://user-images.githubusercontent.com/17662451/122747104-3da7ef80-d2bd-11eb-8a65-f15c61a0ee67.png" alt="image"></p><div class="custom-quote tip"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06"></path><path stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M11.99 18H12.01"></path></svg></span><p class="custom-quote-title">提示</p><p>细心的朋友可能会发现<code>Telescope</code>本身有UUID，那直接用这个作为请求ID岂不美哉？可惜的是，这个UUID在发送响应给客户端之后才产生的，没办法利用起来，参考 <a href="https://github.com/laravel/telescope/issues/451">Issue</a>。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一些大型Web系统通常会给请求分配一个UUID，便于追踪定位线上的问题。&lt;/p&gt;
&lt;p&gt;这部分的功能可以细分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分配UUID&lt;/li&gt;
&lt;li&gt;存储请求&lt;/li&gt;
&lt;li&gt;检索请求&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;分配UUID&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="php" scheme="https://cloudycity.me/categories/php/"/>
    
    
    <category term="laravel" scheme="https://cloudycity.me/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>GitLab CI/CD简单实践</title>
    <link href="https://cloudycity.me/post/GitLab-CI-CD%E7%AE%80%E5%8D%95%E5%AE%9E%E8%B7%B5.html"/>
    <id>https://cloudycity.me/post/GitLab-CI-CD%E7%AE%80%E5%8D%95%E5%AE%9E%E8%B7%B5.html</id>
    <published>2021-05-28T03:23:58.000Z</published>
    <updated>2021-06-21T10:35:56.783Z</updated>
    
    <content type="html"><![CDATA[<p>针对一个前端项目仓库，使用简单、低成本的方式进行CI/CD。</p><span id="more"></span><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>GitLab CI/CD通过<a href="https://docs.gitlab.com/runner/">GitLab Runner</a>实现。<br>流程为：由GitLab触发流水线，通知安装在部署机上的Runner，然后Runner配置的Executor执行<code>gitlab-ci.yml</code>中的流程。</p><p><img src="https://user-images.githubusercontent.com/17662451/119918228-a0e28280-bf9a-11eb-9f53-7f929e193272.png" alt="image"></p><p>GitLab推荐用docker作为Executor，但考虑到实际项目情况与需求，我是用shell作为Executor。</p><p>所以，在GitLab的管理界面以外，我们需要做以下三件事：</p><ul><li>在仓库中配置<code>gitlab-ci.yml</code></li><li>在部署机上配置<code>Runner</code></li><li>在部署机上授予<code>gitlab-runner</code>用户在部署目录的写权限</li></ul><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><h3 id="CI-CD配置文件"><a href="#CI-CD配置文件" class="headerlink" title="CI/CD配置文件"></a>CI/CD配置文件</h3><p>首先推荐一个npm包：<a href="https://www.npmjs.com/package/install-changed">install-changed</a>，用于判断依赖是否发生更新，手动部署时既能跳过不必要的<code>npm install</code>，也能保证不漏掉必要的<code>npm install</code>。</p><pre class="line-numbers language-none"><code class="language-none">npm i install-changed<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在<code>package.json</code>添加命令</p><pre class="line-numbers language-none"><code class="language-none">&quot;scripts&quot;: &#123;    &quot;pre-run&quot;: &quot;install-changed&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>考虑紧急情况可能需要手动部署，先写一个部署脚本。</p><p><code>deploy.sh</code></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 变量if [[ -n $1 ]]; then    path&#x3D;$1else    echo &quot;缺少输出目录&quot;    exit 1;fi# 当 未安装依赖 或 依赖列表更新 时安装依赖npm run pre-run || npm ci --no-progress --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org# 编译npm run build# 平滑覆盖cp -r dist&#x2F;* $&#123;path&#125;&#x2F; &amp;&amp; find $&#123;path&#125; -mmin +1 -type f -delete<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>自动构建部署时复用部署脚本</p><p><code>gitlab-ci.yml</code></p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">stages:  - buildbuild:  stage: build  only:    - master  script:    - sh deploy.sh $RELEASE_PATH<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意这里用到一个环境变量<code>RELEASE_PATH</code>，需要在GitLab仓库页的 <strong>设置 - CI/CD - 加密变量</strong> 中配置。</p><p><img src="https://user-images.githubusercontent.com/17662451/119925262-b0b49380-bfa7-11eb-9214-78865de90e95.png" alt="image"></p><p>这个目录就是编译后静态文件要部署的目录，需要给<code>gitlab-runner</code>用户写权限。</p><h3 id="Runner"><a href="#Runner" class="headerlink" title="Runner"></a>Runner</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>GitLab推荐的是Runner版本与GitLab版本保持一致，有些高版本Runner能与低版本GitLab协作，但不能用新特性。<br>我的GitLab版本为10.7.3，Runner版本为13.4.1。</p><p>进入部署机</p><pre class="line-numbers language-none"><code class="language-none">yum install gitlab-runner<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h4><p>首先打开GitLab仓库页中的 <strong>设置 - CI/CD - Runners设置</strong></p><details class="custom-details"><summary>Click to see more</summary><p><img src="https://user-images.githubusercontent.com/17662451/119920409-e30dc300-bf9e-11eb-84f6-2dff55df9512.png" alt="image"></p></details><p>回到部署机</p><pre class="line-numbers language-none"><code class="language-none">sudo gitlab-runner register \  --non-interactive \  --url &quot;填上图中的URL&quot; \  --registration-token &quot;填上图中的注册令牌&quot; \  --executor &quot;shell&quot; \  --description &quot;shell-runner&quot; \  --tag-list &quot;shell&quot; \  --run-untagged&#x3D;&quot;true&quot; \<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后就会像上图一样，【当前项目有效可用的 runner】下方会出现刚刚注册的Runner。</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="手动触发"><a href="#手动触发" class="headerlink" title="手动触发"></a>手动触发</h4><p>在GitLab仓库页面的 <strong>CI/CD - 流水线</strong>中点击<strong>运行流水线</strong>即可。</p><p><img src="https://user-images.githubusercontent.com/17662451/119924563-6a126980-bfa6-11eb-9cdc-cfad19721e6e.png" alt="image"></p><h4 id="自动触发"><a href="#自动触发" class="headerlink" title="自动触发"></a>自动触发</h4><p>首先检查Runner设置的触发条件，如下图配置，每当受保护分支有新的提交推送，便会触发流水线。</p><p><img src="https://user-images.githubusercontent.com/17662451/119924696-a8a82400-bfa6-11eb-9d15-620a9fe82613.png" alt="image"></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>如果其他前端项目也是用这个方式部署，可以取消Runner设置中的【锁定到当前项目】，这样就可以复用这个runner，只需要每个仓库配置不同的环境变量RELEASE_PATH即可。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;针对一个前端项目仓库，使用简单、低成本的方式进行CI/CD。&lt;/p&gt;</summary>
    
    
    
    <category term="前端" scheme="https://cloudycity.me/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="运维" scheme="https://cloudycity.me/categories/%E5%89%8D%E7%AB%AF/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="gitlab" scheme="https://cloudycity.me/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>Laravel-Websockets组件实践</title>
    <link href="https://cloudycity.me/post/Laravel-Websockets%E7%BB%84%E4%BB%B6%E5%AE%9E%E8%B7%B5.html"/>
    <id>https://cloudycity.me/post/Laravel-Websockets%E7%BB%84%E4%BB%B6%E5%AE%9E%E8%B7%B5.html</id>
    <published>2021-04-30T10:11:34.000Z</published>
    <updated>2021-06-21T10:35:56.784Z</updated>
    
    <content type="html"><![CDATA[<p>给Laravel项目搭建Websocket服务时，不想用<code>pusher</code>这种在线服务? 觉得用<code>laravel-echo-server</code>监听事件不方便? 不想用<code>swoole</code>自己实现? 那你可以考虑<a href="https://laravel.com/docs/8.x/broadcasting#pusher-compatible-laravel-websockets">Laravel官方</a>推荐的<code>laravel-websockets</code>组件。</p><span id="more"></span><p>该组件有以下优点:</p><ul><li>免费</li><li>使用Pusher驱动</li><li>方便继承扩展，实现流程控制</li></ul><h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">composer</span> require <span class="token string">"beyondcode/laravel-websockets:^2.0"</span><span class="token function">composer</span> require digitaltolk/multiple-broadcaster<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="custom-quote tip"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06"></path><path stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M11.99 18H12.01"></path></svg></span><p class="custom-quote-title">提示</p><p>1.x版本存在一些问题，扩展的时候有一些麻烦，组件作者也是推荐2.x版本</p></div><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">php artisan vendor:publish --provider<span class="token operator">=</span><span class="token string">"BeyondCode\LaravelWebSockets\WebSocketsServiceProvider"</span> --tag<span class="token operator">=</span><span class="token string">"migrations"</span>php artisan migratephp artisan vendor:publish --provider<span class="token operator">=</span><span class="token string">"BeyondCode\LaravelWebSockets\WebSocketsServiceProvider"</span> --tag<span class="token operator">=</span><span class="token string">"config"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h3><h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><ul><li>后台用户和普通用户的服务互不干扰</li><li>监听普通用户的行为</li></ul><h4 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h4><p>创建几个基础事件。</p><ul><li><code>UserEnterChannel</code>: 用户订阅channel</li><li><code>UserExitChannel</code>: 用户取消订阅channel</li><li><code>UserAppBackground</code>: 用户APP切换至后台</li><li><code>UserAppForeground</code>: 用户APP切换至前台台</li></ul><p>继承<code>BeyondCode\LaravelWebSockets\Server\WebSocketHandler</code>，监听客户端消息，触发<code>UserAppBackground</code>、<code>UserAppForeground</code>事件。</p><div class="custom-quote warning"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 8V13"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 15.99V16.01"></path></svg></span><p class="custom-quote-title">注意</p><p>注意WebSocketHandler@onOpen($connection)中可以获取的信息非常有限，无法识别出用户。组件自带的事件NewConnection和ConnectionClosed也只有appId和socketId。</p></div><details class="custom-details"><summary>Click to see more</summary><p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>WebSockets<span class="token punctuation">\</span>Server</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Events<span class="token punctuation">\</span>UserAppBackground</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Events<span class="token punctuation">\</span>UserAppForeground</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>WebSockets<span class="token punctuation">\</span>ChannelManagers<span class="token punctuation">\</span>LocalChannelManager</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>Server<span class="token punctuation">\</span>WebSocketHandler</span> <span class="token keyword">as</span> BaseWebSocketHandler<span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Ratchet<span class="token punctuation">\</span>ConnectionInterface</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Exception</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Ratchet<span class="token punctuation">\</span>RFC6455<span class="token punctuation">\</span>Messaging<span class="token punctuation">\</span>MessageInterface</span><span class="token punctuation">;</span><span class="token comment">/** * Class Handler * @package App\WebSockets * @link */</span><span class="token keyword">class</span> <span class="token class-name">WebSocketHandler</span> <span class="token keyword">extends</span> <span class="token class-name">BaseWebSocketHandler</span><span class="token punctuation">&#123;</span>    <span class="token comment">/**     * The channel manager.     *     * @var LocalChannelManager     */</span>    <span class="token keyword">protected</span> <span class="token variable">$channelManager</span><span class="token punctuation">;</span>    <span class="token comment">/**     * Handle the socket opening.     *     * @param \Ratchet\ConnectionInterface $connection     * @return void     * @throws \Exception     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">onOpen</span><span class="token punctuation">(</span><span class="token class-name type-declaration">ConnectionInterface</span> <span class="token variable">$connection</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">onOpen</span><span class="token punctuation">(</span><span class="token variable">$connection</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Handle the websocket close.     *     * @param  \Ratchet\ConnectionInterface  $connection     * @return void     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">onClose</span><span class="token punctuation">(</span><span class="token class-name type-declaration">ConnectionInterface</span> <span class="token variable">$connection</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">onClose</span><span class="token punctuation">(</span><span class="token variable">$connection</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Handle the websocket errors.     *     * @param \Ratchet\ConnectionInterface $connection     * @param Exception $exception     * @return void     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name type-declaration">ConnectionInterface</span> <span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">Exception</span> <span class="token variable">$exception</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">onError</span><span class="token punctuation">(</span><span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token variable">$exception</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Handle the incoming message.     *     * @param  \Ratchet\ConnectionInterface  $connection     * @param  \Ratchet\RFC6455\Messaging\MessageInterface  $message     * @return void     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token class-name type-declaration">ConnectionInterface</span> <span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">MessageInterface</span> <span class="token variable">$message</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$payload</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token operator">-></span><span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token operator">-></span><span class="token property">event</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'client-app.background'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token function">getUserByChannel</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token operator">-></span><span class="token property">channel</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name static-context">UserAppBackground</span><span class="token operator">::</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">gid</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token operator">-></span><span class="token property">event</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'client-app.foreground'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token function">getUserByChannel</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token operator">-></span><span class="token property">channel</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name static-context">UserAppForeground</span><span class="token operator">::</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">gid</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></details><h4 id="频道"><a href="#频道" class="headerlink" title="频道"></a>频道</h4><p>主要改写<code>PrivateChanel</code>，触发<code>UserEnterChannel</code>和<code>UserExitChannel</code>事件。</p><details class="custom-details"><summary>Click to see more</summary><p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>WebSockets<span class="token punctuation">\</span>Channels</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Events<span class="token punctuation">\</span>UserEnterChannel</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Events<span class="token punctuation">\</span>UserExitChannel</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>WebSockets<span class="token punctuation">\</span>ChannelManagers<span class="token punctuation">\</span>LocalChannelManager</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>Channels<span class="token punctuation">\</span>PrivateChannel</span> <span class="token keyword">as</span> BasePrivateChannel<span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>DashboardLogger</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>Events<span class="token punctuation">\</span>SubscribedToChannel</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>Events<span class="token punctuation">\</span>UnsubscribedFromChannel</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>Server<span class="token punctuation">\</span>Exceptions<span class="token punctuation">\</span>InvalidSignature</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Ratchet<span class="token punctuation">\</span>ConnectionInterface</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">stdClass</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">PrivateChannel</span> <span class="token keyword">extends</span> <span class="token class-name">BasePrivateChannel</span><span class="token punctuation">&#123;</span>    <span class="token comment">/**     * @var LocalChannelManager     */</span>    <span class="token keyword">protected</span> <span class="token variable">$channelManager</span><span class="token punctuation">;</span>    <span class="token comment">/**     * Subscribe to the channel.     *     * @see    https://pusher.com/docs/pusher_protocol#presence-channel-events     * @param  \Ratchet\ConnectionInterface  $connection     * @param  \stdClass  $payload     * @return bool     * @throws InvalidSignature     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name type-declaration">ConnectionInterface</span> <span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">stdClass</span> <span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">verifySignature</span><span class="token punctuation">(</span><span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 针对特殊频道</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUserChannel</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token operator">-></span><span class="token property">channel</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 识别用户</span>            <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token function">getUserByChannel</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token operator">-></span><span class="token property">channel</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 触发事件</span>            <span class="token class-name static-context">UserEnterChannel</span><span class="token operator">::</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">gid</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 保存在成员数组中</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">channelManager</span>                <span class="token operator">-></span><span class="token function">userJoinedPrivateChannel</span><span class="token punctuation">(</span><span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$payload</span><span class="token punctuation">)</span>                <span class="token operator">-></span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$users</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$connection</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token variable">$connection</span><span class="token operator">-></span><span class="token function">send</span><span class="token punctuation">(</span><span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span>                        <span class="token string single-quoted-string">'event'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'pusher_internal:subscription_succeeded'</span><span class="token punctuation">,</span>                        <span class="token string single-quoted-string">'channel'</span> <span class="token operator">=></span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token string single-quoted-string">'data'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'[]'</span><span class="token punctuation">,</span>                    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token operator">-></span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$payload</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// The `pusher_internal:member_added` event is triggered when a user joins a channel.</span>                    <span class="token comment">// It's quite possible that a user can have multiple connections to the same channel</span>                    <span class="token comment">// (for example by having multiple browser tabs open)</span>                    <span class="token comment">// and in this case the events will only be triggered when the first tab is opened.</span>                    <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">channelManager</span>                        <span class="token operator">-></span><span class="token function">getMemberSockets</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">,</span> <span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token operator">-></span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$sockets</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">,</span> <span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$sockets</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                                <span class="token variable">$memberAddedPayload</span> <span class="token operator">=</span> <span class="token punctuation">[</span>                                    <span class="token string single-quoted-string">'event'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'pusher_internal:member_added'</span><span class="token punctuation">,</span>                                    <span class="token string single-quoted-string">'channel'</span> <span class="token operator">=></span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                    <span class="token string single-quoted-string">'data'</span> <span class="token operator">=></span> <span class="token variable">$payload</span><span class="token operator">-></span><span class="token property">channel_data</span><span class="token punctuation">,</span>                                <span class="token punctuation">]</span><span class="token punctuation">;</span>                                <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">broadcastToEveryoneExcept</span><span class="token punctuation">(</span>                                    <span class="token punctuation">(</span><span class="token keyword type-casting">object</span><span class="token punctuation">)</span> <span class="token variable">$memberAddedPayload</span><span class="token punctuation">,</span>                                    <span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">socketId</span><span class="token punctuation">,</span>                                    <span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token property">id</span>                                <span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token class-name static-context">SubscribedToChannel</span><span class="token operator">::</span><span class="token function">dispatch</span><span class="token punctuation">(</span>                                    <span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">,</span>                                    <span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">socketId</span><span class="token punctuation">,</span>                                    <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                    <span class="token variable">$user</span>                                <span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">&#125;</span>                            <span class="token class-name static-context">DashboardLogger</span><span class="token operator">::</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">,</span> <span class="token class-name static-context">DashboardLogger</span><span class="token operator">::</span><span class="token constant">TYPE_SUBSCRIBED</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>                                <span class="token string single-quoted-string">'socketId'</span> <span class="token operator">=></span> <span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">socketId</span><span class="token punctuation">,</span>                                <span class="token string single-quoted-string">'channel'</span> <span class="token operator">=></span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                <span class="token string single-quoted-string">'duplicate-connection'</span> <span class="token operator">=></span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$sockets</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">,</span>                            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Unsubscribe connection from the channel.     *     * @param  \Ratchet\ConnectionInterface  $connection     * @return bool     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token class-name type-declaration">ConnectionInterface</span> <span class="token variable">$connection</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$truth</span> <span class="token operator">=</span> <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token variable">$connection</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">channelManager</span>            <span class="token operator">-></span><span class="token function">getChannelUser</span><span class="token punctuation">(</span><span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token operator">-></span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$user</span> <span class="token operator">=</span> @<span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// 触发事件</span>                    <span class="token class-name static-context">UserExitChannel</span><span class="token operator">::</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">gid</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">return</span> <span class="token variable">$user</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token operator">-></span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$connection</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">channelManager</span>                    <span class="token operator">-></span><span class="token function">userLeftPrivateChannel</span><span class="token punctuation">(</span><span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token operator">-></span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token comment">// The `pusher_internal:member_removed` is triggered when a user leaves a channel.</span>                        <span class="token comment">// It's quite possible that a user can have multiple connections to the same channel</span>                        <span class="token comment">// (for example by having multiple browser tabs open)</span>                        <span class="token comment">// and in this case the events will only be triggered when the last one is closed.</span>                        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">channelManager</span>                            <span class="token operator">-></span><span class="token function">getMemberSockets</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">,</span> <span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                            <span class="token operator">-></span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$sockets</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$sockets</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                                    <span class="token variable">$memberRemovedPayload</span> <span class="token operator">=</span> <span class="token punctuation">[</span>                                        <span class="token string single-quoted-string">'event'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'pusher_internal:member_removed'</span><span class="token punctuation">,</span>                                        <span class="token string single-quoted-string">'channel'</span> <span class="token operator">=></span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                        <span class="token string single-quoted-string">'data'</span> <span class="token operator">=></span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span>                                            <span class="token string single-quoted-string">'uid'</span> <span class="token operator">=></span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">,</span>                                        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                    <span class="token punctuation">]</span><span class="token punctuation">;</span>                                    <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">broadcastToEveryoneExcept</span><span class="token punctuation">(</span>                                        <span class="token punctuation">(</span><span class="token keyword type-casting">object</span><span class="token punctuation">)</span> <span class="token variable">$memberRemovedPayload</span><span class="token punctuation">,</span>                                        <span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">socketId</span><span class="token punctuation">,</span>                                        <span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token property">id</span>                                    <span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token class-name static-context">UnsubscribedFromChannel</span><span class="token operator">::</span><span class="token function">dispatch</span><span class="token punctuation">(</span>                                        <span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">,</span>                                        <span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">socketId</span><span class="token punctuation">,</span>                                        <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                        <span class="token variable">$user</span>                                    <span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">&#125;</span>                            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$truth</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></details><p>涉及的几个助手函数</p><details class="custom-details"><summary>Click to see more</summary><p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'getUserChannelPrefix'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 获取玩家的频道前缀     *     * @return string     */</span>    <span class="token keyword">function</span> <span class="token function">getUserChannelPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string single-quoted-string">'private-user.'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'isUserChannel'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 判断是否为玩家用户的频道     *     * @param string $channel     * @return bool     */</span>    <span class="token keyword">function</span> <span class="token function">isUserChannel</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$channel</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$userChannelPrefix</span> <span class="token operator">=</span> <span class="token function">getUserChannelPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$isUserChannel</span> <span class="token operator">=</span> <span class="token class-name static-context">Str</span><span class="token operator">::</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token variable">$channel</span><span class="token punctuation">,</span> <span class="token variable">$userChannelPrefix</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$isUserChannel</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'getIdsByChannel'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 根据玩家频道名获取各ID     *     * @param string $channel     * @return stdClass     */</span>    <span class="token keyword">function</span> <span class="token function">getUserByChannel</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$channel</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">stdClass</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$userChannelPrefix</span> <span class="token operator">=</span> <span class="token function">getUserChannelPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$idString</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token variable">$userChannelPrefix</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$channel</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$uid</span><span class="token punctuation">,</span> <span class="token variable">$gid</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'.'</span><span class="token punctuation">,</span> <span class="token variable">$idString</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">stdClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">id</span> <span class="token operator">=</span> <span class="token variable">$uid</span><span class="token punctuation">;</span>        <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">gid</span> <span class="token operator">=</span> <span class="token variable">$gid</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$user</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></details><p>继承<code>BeyondCode\LaravelWebSockets\ChannelManagers\LocalChannelManager</code>，实现<code>userJoinedPrivateChannel</code>、<code>userLeftPrivateChannel</code>、<code>getChannelUser</code>三个方法，在<code>PrivateChannel</code>中使用。</p><details class="custom-details"><summary>Click to see more</summary><p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>WebSockets<span class="token punctuation">\</span>ChannelManagers</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>WebSockets<span class="token punctuation">\</span>Channels<span class="token punctuation">\</span>Channel</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>WebSockets<span class="token punctuation">\</span>Channels<span class="token punctuation">\</span>PresenceChannel</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>WebSockets<span class="token punctuation">\</span>Channels<span class="token punctuation">\</span>PrivateChannel</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>ChannelManagers<span class="token punctuation">\</span>LocalChannelManager</span> <span class="token keyword">as</span> BaseLocalChannelManager<span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>Helpers</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Support<span class="token punctuation">\</span>Str</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Ratchet<span class="token punctuation">\</span>ConnectionInterface</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">stdClass</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">React<span class="token punctuation">\</span>Promise<span class="token punctuation">\</span>PromiseInterface</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">LocalChannelManager</span> <span class="token keyword">extends</span> <span class="token class-name">BaseLocalChannelManager</span><span class="token punctuation">&#123;</span>    <span class="token comment">/**     * The list of users that joined the presence channel or private channel.     *     * private channel: key => UserObject     * presence channel: key => [ socketId => UserObject ]     * @var array     */</span>    <span class="token keyword">protected</span> <span class="token variable">$users</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">/**     * The list of users by socket and their attached id.     *     * @var array     */</span>    <span class="token keyword">protected</span> <span class="token variable">$userSockets</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">/**     * Get the channel class by the channel name.     *     * @param  string  $channelName     * @return string     */</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">getChannelClassName</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$channelName</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name static-context">Str</span><span class="token operator">::</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token variable">$channelName</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'private-'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token class-name static-context">PrivateChannel</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name static-context">Str</span><span class="token operator">::</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token variable">$channelName</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'presence-'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token class-name static-context">PresenceChannel</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token class-name static-context">Channel</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Get a member from a private channel based on connection.     *     * @param  \Ratchet\ConnectionInterface  $connection     * @param  string  $channel     * @return \React\Promise\PromiseInterface     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getChannelUser</span><span class="token punctuation">(</span><span class="token class-name type-declaration">ConnectionInterface</span> <span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$channel</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">PromiseInterface</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">users</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">&#125;</span></span>:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$channel</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token constant">null</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token class-name static-context">Helpers</span><span class="token operator">::</span><span class="token function">createFulfilledPromise</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Handle the user when it joined a private channel.     *     * @param  \Ratchet\ConnectionInterface  $connection     * @param  stdClass  $user     * @param  string  $channel     * @param  stdClass  $payload     * @return PromiseInterface[bool]     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">userJoinedPrivateChannel</span><span class="token punctuation">(</span><span class="token class-name type-declaration">ConnectionInterface</span> <span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">stdClass</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$channel</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">stdClass</span> <span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">PromiseInterface</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">users</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">&#125;</span></span>:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$channel</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">userSockets</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">&#125;</span></span>:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$channel</span><span class="token punctuation">&#125;</span></span>:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">socketId</span><span class="token punctuation">;</span>        <span class="token function">used</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token class-name static-context">Helpers</span><span class="token operator">::</span><span class="token function">createFulfilledPromise</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Handle the user when it left a presence channel.     *     * @param  \Ratchet\ConnectionInterface  $connection     * @param  stdClass  $user     * @param  string  $channel     * @return PromiseInterface[bool]     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">userLeftPrivateChannel</span><span class="token punctuation">(</span><span class="token class-name type-declaration">ConnectionInterface</span> <span class="token variable">$connection</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">stdClass</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$channel</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">PromiseInterface</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">users</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">&#125;</span></span>:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$channel</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$deletableSocketKey</span> <span class="token operator">=</span> <span class="token function">array_search</span><span class="token punctuation">(</span>            <span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">socketId</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">userSockets</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">&#125;</span></span>:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$channel</span><span class="token punctuation">&#125;</span></span>:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">]</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$deletableSocketKey</span> <span class="token operator">!==</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">userSockets</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">&#125;</span></span>:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$channel</span><span class="token punctuation">&#125;</span></span>:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$deletableSocketKey</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">userSockets</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">&#125;</span></span>:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$channel</span><span class="token punctuation">&#125;</span></span>:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">userSockets</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$connection</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">&#125;</span></span>:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$channel</span><span class="token punctuation">&#125;</span></span>:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token class-name static-context">Helpers</span><span class="token operator">::</span><span class="token function">createFulfilledPromise</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></details><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>修改<strong>websockets.php</strong>，使用继承后的类，并配置多app。</p><details class="custom-details"><summary>Click to see more</summary><p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">return</span> <span class="token punctuation">[</span>    <span class="token comment">/*    |--------------------------------------------------------------------------    | Dashboard Settings    |--------------------------------------------------------------------------    |    | You can configure the dashboard settings from here.    |    */</span>    <span class="token string single-quoted-string">'dashboard'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>        <span class="token string single-quoted-string">'port'</span> <span class="token operator">=></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'LARAVEL_WEBSOCKETS_PORT'</span><span class="token punctuation">,</span> <span class="token number">6001</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'domain'</span> <span class="token operator">=></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'LARAVEL_WEBSOCKETS_DOMAIN'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'path'</span> <span class="token operator">=></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'LARAVEL_WEBSOCKETS_PATH'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'websockets'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'middleware'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>            <span class="token string single-quoted-string">'web'</span><span class="token punctuation">,</span>            <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>Dashboard<span class="token punctuation">\</span>Http<span class="token punctuation">\</span>Middleware<span class="token punctuation">\</span>Authorize</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'managers'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>        <span class="token comment">/*        |--------------------------------------------------------------------------        | Application Manager        |--------------------------------------------------------------------------        |        | An Application manager determines how your websocket server allows        | the use of the TCP protocol based on, for example, a list of allowed        | applications.        | By default, it uses the defined array in the config file, but you can        | anytime implement the same interface as the class and add your own        | custom method to retrieve the apps.        |        */</span>        <span class="token string single-quoted-string">'app'</span> <span class="token operator">=></span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>Apps<span class="token punctuation">\</span>ConfigAppManager</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment">/*    |--------------------------------------------------------------------------    | Applications Repository    |--------------------------------------------------------------------------    |    | By default, the only allowed app is the one you define with    | your PUSHER_* variables from .env.    | You can configure to use multiple apps if you need to, or use    | a custom App Manager that will handle the apps from a database, per se.    |    | You can apply multiple settings, like the maximum capacity, enable    | client-to-client messages or statistics.    |    */</span>    <span class="token string single-quoted-string">'apps'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>        <span class="token punctuation">[</span>            <span class="token string single-quoted-string">'id'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'admin-app-id'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'name'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'ADMIN'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'host'</span> <span class="token operator">=></span> <span class="token constant">null</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'key'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'admin-app-key'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'secret'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'admin-app-secret'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'path'</span> <span class="token operator">=></span> <span class="token constant">null</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'capacity'</span> <span class="token operator">=></span> <span class="token constant">null</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'enable_client_messages'</span> <span class="token operator">=></span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'enable_statistics'</span> <span class="token operator">=></span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'allowed_origins'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                <span class="token comment">// env('LARAVEL_WEBSOCKETS_DOMAIN_ADMIN'),</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span>            <span class="token string single-quoted-string">'id'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'api-app-id'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'name'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'API'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'host'</span> <span class="token operator">=></span> <span class="token constant">null</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'key'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'api-app-key'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'secret'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'api-app-secret'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'path'</span> <span class="token operator">=></span> <span class="token constant">null</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'capacity'</span> <span class="token operator">=></span> <span class="token constant">null</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'enable_client_messages'</span> <span class="token operator">=></span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'enable_statistics'</span> <span class="token operator">=></span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'allowed_origins'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                <span class="token comment">// env('LARAVEL_WEBSOCKETS_DOMAIN'),</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment">/*    |--------------------------------------------------------------------------    | Broadcasting Replication PubSub    |--------------------------------------------------------------------------    |    | You can enable replication to publish and subscribe to    | messages across the driver.    |    | By default, it is set to 'local', but you can configure it to use drivers    | like Redis to ensure connection between multiple instances of    | WebSocket servers. Just set the driver to 'redis' to enable the PubSub using Redis.    |    */</span>    <span class="token string single-quoted-string">'replication'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>        <span class="token string single-quoted-string">'mode'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'local'</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'modes'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>            <span class="token comment">/*            |--------------------------------------------------------------------------            | Local Replication            |--------------------------------------------------------------------------            |            | Local replication is actually a null replicator, meaning that it            | is the default behaviour of storing the connections into an array.            |            */</span>            <span class="token string single-quoted-string">'local'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                <span class="token comment">/*                |--------------------------------------------------------------------------                | Channel Manager                |--------------------------------------------------------------------------                |                | The channel manager is responsible for storing, tracking and retrieving                | the channels as long as their members and connections.                |                */</span>                <span class="token string single-quoted-string">'channel_manager'</span> <span class="token operator">=></span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>WebSockets<span class="token punctuation">\</span>ChannelManagers<span class="token punctuation">\</span>LocalChannelManager</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>                <span class="token comment">/*                |--------------------------------------------------------------------------                | Statistics Collector                |--------------------------------------------------------------------------                |                | The Statistics Collector will, by default, handle the incoming statistics,                | storing them until they will become dumped into another database, usually                | a MySQL database or a time-series database.                |                */</span>                <span class="token string single-quoted-string">'collector'</span> <span class="token operator">=></span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>Statistics<span class="token punctuation">\</span>Collectors<span class="token punctuation">\</span>MemoryCollector</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'redis'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                <span class="token string single-quoted-string">'connection'</span> <span class="token operator">=></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'WEBSOCKETS_REDIS_REPLICATION_CONNECTION'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'default'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token comment">/*                |--------------------------------------------------------------------------                | Channel Manager                |--------------------------------------------------------------------------                |                | The channel manager is responsible for storing, tracking and retrieving                | the channels as long as their members and connections.                |                */</span>                <span class="token string single-quoted-string">'channel_manager'</span> <span class="token operator">=></span> <span class="token class-name class-name-fully-qualified static-context">BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>ChannelManagers<span class="token punctuation">\</span>RedisChannelManager</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>                <span class="token comment">/*                |--------------------------------------------------------------------------                | Statistics Collector                |--------------------------------------------------------------------------                |                | The Statistics Collector will, by default, handle the incoming statistics,                | storing them until they will become dumped into another database, usually                | a MySQL database or a time-series database.                |                */</span>                <span class="token string single-quoted-string">'collector'</span> <span class="token operator">=></span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>Statistics<span class="token punctuation">\</span>Collectors<span class="token punctuation">\</span>RedisCollector</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'statistics'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>        <span class="token comment">/*        |--------------------------------------------------------------------------        | Statistics Store        |--------------------------------------------------------------------------        |        | The Statistics Store is the place where all the temporary stats will        | be dumped. This is a much reliable store and will be used to display        | graphs or handle it later on your app.        |        */</span>        <span class="token string single-quoted-string">'store'</span> <span class="token operator">=></span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>Statistics<span class="token punctuation">\</span>Stores<span class="token punctuation">\</span>DatabaseStore</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>        <span class="token comment">/*        |--------------------------------------------------------------------------        | Statistics Interval Period        |--------------------------------------------------------------------------        |        | Here you can specify the interval in seconds at which        | statistics should be logged.        |        */</span>        <span class="token string single-quoted-string">'interval_in_seconds'</span> <span class="token operator">=></span> <span class="token number">60</span><span class="token punctuation">,</span>        <span class="token comment">/*        |--------------------------------------------------------------------------        | Statistics Deletion Period        |--------------------------------------------------------------------------        |        | When the clean-command is executed, all recorded statistics older than        | the number of days specified here will be deleted.        |        */</span>        <span class="token string single-quoted-string">'delete_statistics_older_than_days'</span> <span class="token operator">=></span> <span class="token number">60</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment">/*    |--------------------------------------------------------------------------    | Maximum Request Size    |--------------------------------------------------------------------------    |    | The maximum request size in kilobytes that is allowed for    | an incoming WebSocket request.    |    */</span>    <span class="token string single-quoted-string">'max_request_size_in_kb'</span> <span class="token operator">=></span> <span class="token number">250</span><span class="token punctuation">,</span>    <span class="token comment">/*    |--------------------------------------------------------------------------    | SSL Configuration    |--------------------------------------------------------------------------    |    | By default, the configuration allows only on HTTP. For SSL, you need    | to set up the the certificate, the key, and optionally, the passphrase    | for the private key.    | You will need to restart the server for the settings to take place.    |    */</span>    <span class="token string single-quoted-string">'ssl'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>        <span class="token string single-quoted-string">'local_cert'</span> <span class="token operator">=></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'LARAVEL_WEBSOCKETS_SSL_LOCAL_CERT'</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'capath'</span> <span class="token operator">=></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'LARAVEL_WEBSOCKETS_SSL_CA'</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'local_pk'</span> <span class="token operator">=></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'LARAVEL_WEBSOCKETS_SSL_LOCAL_PK'</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'passphrase'</span> <span class="token operator">=></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'LARAVEL_WEBSOCKETS_SSL_PASSPHRASE'</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'verify_peer'</span> <span class="token operator">=></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'APP_ENV'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'production'</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'allow_self_signed'</span> <span class="token operator">=></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'APP_ENV'</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string single-quoted-string">'production'</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment">/*    |--------------------------------------------------------------------------    | Route Handlers    |--------------------------------------------------------------------------    |    | Here you can specify the route handlers that will take over    | the incoming/outgoing websocket connections. You can extend the    | original class and implement your own logic, alongside    | with the existing logic.    |    */</span>    <span class="token string single-quoted-string">'handlers'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>        <span class="token string single-quoted-string">'websocket'</span> <span class="token operator">=></span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>WebSockets<span class="token punctuation">\</span>Server<span class="token punctuation">\</span>WebSocketHandler</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'health'</span> <span class="token operator">=></span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>Server<span class="token punctuation">\</span>HealthHandler</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'trigger_event'</span> <span class="token operator">=></span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>API<span class="token punctuation">\</span>TriggerEvent</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'fetch_channels'</span> <span class="token operator">=></span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>API<span class="token punctuation">\</span>FetchChannels</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'fetch_channel'</span> <span class="token operator">=></span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>API<span class="token punctuation">\</span>FetchChannel</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'fetch_users'</span> <span class="token operator">=></span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>BeyondCode<span class="token punctuation">\</span>LaravelWebSockets<span class="token punctuation">\</span>API<span class="token punctuation">\</span>FetchUsers</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment">/*    |--------------------------------------------------------------------------    | Promise Resolver    |--------------------------------------------------------------------------    |    | The promise resolver is a class that takes a input value and is    | able to make sure the PHP code runs async by using ->then(). You can    | use your own Promise Resolver. This is usually changed when you want to    | intercept values by the promises throughout the app, like in testing    | to switch from async to sync.    |    */</span>    <span class="token string single-quoted-string">'promise_resolver'</span> <span class="token operator">=></span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>React<span class="token punctuation">\</span>Promise<span class="token punctuation">\</span>FulfilledPromise</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></details><p>修改<strong>broadcasting.php</strong>，以实现同时在两个app中进行广播</p><details class="custom-details"><summary>Click to see more</summary><p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">return</span> <span class="token punctuation">[</span>    <span class="token comment">/*    |--------------------------------------------------------------------------    | Default Broadcaster    |--------------------------------------------------------------------------    |    | This option controls the default broadcaster that will be used by the    | framework when an event needs to be broadcast. You may set this to    | any of the connections defined in the "connections" array below.    |    | Supported: "pusher", "redis", "log", "null"    |    */</span>    <span class="token string single-quoted-string">'default'</span> <span class="token operator">=></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'BROADCAST_DRIVER'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'null'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">/*    |--------------------------------------------------------------------------    | Broadcast Connections    |--------------------------------------------------------------------------    |    | Here you may define all of the broadcast connections that will be used    | to broadcast events to other systems or over websockets. Samples of    | each available type of connection are provided inside this array.    |    */</span>    <span class="token string single-quoted-string">'connections'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>        <span class="token string single-quoted-string">'pusher'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>            <span class="token string single-quoted-string">'driver'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'multiple'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'connections'</span> <span class="token operator">=></span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'pusher-for-admin'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'pusher-for-api'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'options'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                <span class="token string single-quoted-string">'cluster'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'mt1'</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'useTLS'</span> <span class="token operator">=></span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'encrypted'</span> <span class="token operator">=></span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'host'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'127.0.0.1'</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'port'</span> <span class="token operator">=></span> <span class="token number">6001</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'scheme'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'http'</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'pusher-for-admin'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>            <span class="token string single-quoted-string">'driver'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'pusher'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'key'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'admin-app-key'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'secret'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'admin-app-secret'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'app_id'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'admin-app-id'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'options'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                <span class="token string single-quoted-string">'cluster'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'mt1'</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'useTLS'</span> <span class="token operator">=></span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'encrypted'</span> <span class="token operator">=></span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'host'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'127.0.0.1'</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'port'</span> <span class="token operator">=></span> <span class="token number">6001</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'scheme'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'http'</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'pusher-for-api'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>            <span class="token string single-quoted-string">'driver'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'pusher'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'key'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'api-app-key'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'secret'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'api-app-secret'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'app_id'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'api-app-id'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'options'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>                <span class="token string single-quoted-string">'cluster'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'mt1'</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'useTLS'</span> <span class="token operator">=></span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'encrypted'</span> <span class="token operator">=></span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'host'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'127.0.0.1'</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'port'</span> <span class="token operator">=></span> <span class="token number">6001</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'scheme'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'http'</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'redis'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>            <span class="token string single-quoted-string">'driver'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'redis'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'connection'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'default'</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'log'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>            <span class="token string single-quoted-string">'driver'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'log'</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'null'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>            <span class="token string single-quoted-string">'driver'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'null'</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></details><p>最后将ENV文件中的<code>BROADCAST_DRIVER</code>改为pusher即可。</p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><pre class="line-numbers language-none"><code class="language-none">php artisan websockets:serve<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="客户端接入"><a href="#客户端接入" class="headerlink" title="客户端接入"></a>客户端接入</h3><p>后台Nodejs</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> Echo <span class="token keyword">from</span> <span class="token string">'laravel-echo'</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>Pusher <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'pusher-js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>Echo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Echo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  broadcaster<span class="token operator">:</span> <span class="token string">'pusher'</span><span class="token punctuation">,</span>  key<span class="token operator">:</span> <span class="token string">'admin-app-key'</span><span class="token punctuation">,</span>  wsHost<span class="token operator">:</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hostname<span class="token punctuation">,</span>  wsPort<span class="token operator">:</span> <span class="token number">6001</span><span class="token punctuation">,</span>  forceTLS<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  disableStats<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Android 使用 <a href="https://github.com/pusher/pusher-websocket-java">pusher-websocket-java</a> SDK<br>IOS 使用 <a href="https://github.com/pusher/pusher-websocket-swift">pusher-websocket-swift</a> SDK</p><p>连接参数</p><pre class="line-numbers language-none"><code class="language-none">host: &#123;Websocket服务域名&#125; (我这边和laravel项目域名是同一个)port: 6001app_key: api-app-keyauth_url: &#123;laravel项目域名&#125;&#x2F;broadcasting&#x2F;auth<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><div class="custom-quote danger"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M19.76 5.23C15.84 5.23 12 2 12 2C12 2 8.15996 5.23 4.23996 5.23C4.23996 5.23 1.86996 16.99 12 22C22.13 16.99 19.76 5.23 19.76 5.23Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 8V13"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M11.99 16H12"></path></svg></span><p class="custom-quote-title">特别注意</p><p>注意pusher-websocket-swift要使用8.0.0版本，9.x版本有bug无法连接服务</p></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;给Laravel项目搭建Websocket服务时，不想用&lt;code&gt;pusher&lt;/code&gt;这种在线服务? 觉得用&lt;code&gt;laravel-echo-server&lt;/code&gt;监听事件不方便? 不想用&lt;code&gt;swoole&lt;/code&gt;自己实现? 那你可以考虑&lt;a href=&quot;https://laravel.com/docs/8.x/broadcasting#pusher-compatible-laravel-websockets&quot;&gt;Laravel官方&lt;/a&gt;推荐的&lt;code&gt;laravel-websockets&lt;/code&gt;组件。&lt;/p&gt;</summary>
    
    
    
    <category term="php" scheme="https://cloudycity.me/categories/php/"/>
    
    
    <category term="laravel" scheme="https://cloudycity.me/tags/laravel/"/>
    
    <category term="websocket" scheme="https://cloudycity.me/tags/websocket/"/>
    
  </entry>
  
  <entry>
    <title>Laravel优雅地支持多SMS</title>
    <link href="https://cloudycity.me/post/Laravel%E4%BC%98%E9%9B%85%E5%9C%B0%E6%94%AF%E6%8C%81%E5%A4%9ASMS.html"/>
    <id>https://cloudycity.me/post/Laravel%E4%BC%98%E9%9B%85%E5%9C%B0%E6%94%AF%E6%8C%81%E5%A4%9ASMS.html</id>
    <published>2021-01-29T10:23:49.000Z</published>
    <updated>2021-06-21T10:35:56.782Z</updated>
    
    <content type="html"><![CDATA[<p>小公司可能为了节省短信成本，会选择多家短信服务商，但短信本身的模板不会太多。本文介绍下<code>Laravel</code>下如何优雅地实现这种场景。</p><span id="more"></span><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><p>Laravel社区一个很赞的枚举组件</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">composer <span class="token keyword">require</span> bensampo<span class="token operator">/</span>laravel<span class="token operator">-</span>enum<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里以腾讯短信为例</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">composer <span class="token keyword">require</span> tencentcloud<span class="token operator">/</span>tencentcloud<span class="token operator">-</span>sdk<span class="token operator">-</span>php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><p>现在多数短信服务端都是采用模板，发送更快，所以这里接口直接按这种模式设计。<br>如果需要接入未使用模版的服务商，可以自行实现模板（用<code>sprintf()</code>替换字符串），相当于做了使用模板的服务商所做的工作。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Contracts</span><span class="token punctuation">;</span><span class="token keyword">interface</span> <span class="token class-name">Sms</span><span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 发送短信     *     * @param $phone     * @param $templateId     * @param $templateParams     * @return bool     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token variable">$phone</span><span class="token punctuation">,</span> <span class="token variable">$templateId</span><span class="token punctuation">,</span> <span class="token variable">$templateParams</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 批量发送短信     *     * @param array $phones     * @param $templateId     * @param $templateParams     * @return bool     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">batchSend</span><span class="token punctuation">(</span><span class="token variable">$phones</span><span class="token punctuation">,</span> <span class="token variable">$templateId</span><span class="token punctuation">,</span> <span class="token variable">$templateParams</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 返回余额     *     * @return float     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 获取模版     *     * @param string $for 模板用途     * @return int     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getTemplateId</span><span class="token punctuation">(</span><span class="token variable">$for</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h3><p>每当要接入一个服务商，首先增加一个枚举，后面在服务，模型，界面选项都使用该枚举。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Enums</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">BenSampo<span class="token punctuation">\</span>Enum<span class="token punctuation">\</span>Enum</span><span class="token punctuation">;</span><span class="token comment">/** * 短信服务商 * * @method static static TENCENT() */</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">SmsProvider</span> <span class="token keyword">extends</span> <span class="token class-name">Enum</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">const</span> <span class="token constant">TENCENT</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'tencent'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">getDescription</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$value</span> <span class="token operator">===</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">TENCENT</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string single-quoted-string">'腾讯'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">getDescription</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p><code>config/sms.php</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">return</span> <span class="token punctuation">[</span>    <span class="token comment">// 默认服务商</span>    <span class="token string single-quoted-string">'default_provider'</span> <span class="token operator">=></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'SMS_DEFAULT_PROVIDER'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// 各服务商配置</span>    <span class="token string single-quoted-string">'tencent'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>        <span class="token string single-quoted-string">'app_id'</span> <span class="token operator">=></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'SMS_TENCENT_APP_ID'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'secret_id'</span> <span class="token operator">=></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'SMS_TENCENT_SECRET_ID'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'secret_key'</span> <span class="token operator">=></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'SMS_TENCENT_SECRET_KEY'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'template_ids'</span> <span class="token operator">=></span> <span class="token punctuation">[</span>            <span class="token string single-quoted-string">'captcha'</span> <span class="token operator">=></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'SMS_TENCENT_TEMPLATE_IDS_CAPTCHA'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="服务实现"><a href="#服务实现" class="headerlink" title="服务实现"></a>服务实现</h3><p>创建基类，构造时从配置中初始化模板参数。</p><details class="custom-details"><summary>Click to see more</summary><p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>Sms</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Contracts<span class="token punctuation">\</span>Sms</span><span class="token punctuation">;</span><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">BaseSms</span> <span class="token keyword">implements</span> <span class="token class-name">Sms</span><span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 服务商名称     *     * @var string     */</span>    <span class="token keyword">protected</span> <span class="token variable">$name</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 短信模板ID映射     *     * @var array     */</span>    <span class="token keyword">protected</span> <span class="token variable">$templateIds</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 短信模板用途集合     *     * @var array     */</span>    <span class="token keyword">protected</span> <span class="token variable">$templateUses</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'captcha'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">/**     * BaseSms constructor.     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">templateUses</span> <span class="token keyword">as</span> <span class="token variable">$templateUse</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">templateIds</span><span class="token punctuation">[</span><span class="token variable">$templateUse</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"system.sms.<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">name</span><span class="token punctuation">&#125;</span></span>.template_ids.<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$templateUse</span><span class="token punctuation">&#125;</span></span>&#125;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 获取模版     *     * @param $for     * @return int|mixed|null     * @throws \Exception     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getTemplateId</span><span class="token punctuation">(</span><span class="token variable">$for</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">templateIds</span><span class="token punctuation">[</span><span class="token variable">$for</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Exception</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$for</span><span class="token punctuation">&#125;</span></span>短信模板不存在"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">templateIds</span><span class="token punctuation">[</span><span class="token variable">$for</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></details><p>每个服务类只需要在构造函数中做好参数初始化，并实现三个方法即可。</p><details class="custom-details"><summary>Click to see more</summary><p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>Sms</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Enums<span class="token punctuation">\</span>SmsProvider</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">TencentCloud<span class="token punctuation">\</span>Common<span class="token punctuation">\</span>Credential</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">TencentCloud<span class="token punctuation">\</span>Common<span class="token punctuation">\</span>Profile<span class="token punctuation">\</span>ClientProfile</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">TencentCloud<span class="token punctuation">\</span>Common<span class="token punctuation">\</span>Profile<span class="token punctuation">\</span>HttpProfile</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">TencentCloud<span class="token punctuation">\</span>Sms<span class="token punctuation">\</span>V20190711<span class="token punctuation">\</span>Models<span class="token punctuation">\</span>SendSmsRequest</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">TencentCloud<span class="token punctuation">\</span>Sms<span class="token punctuation">\</span>V20190711<span class="token punctuation">\</span>Models<span class="token punctuation">\</span>SmsPackagesStatisticsRequest</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">TencentCloud<span class="token punctuation">\</span>Sms<span class="token punctuation">\</span>V20190711<span class="token punctuation">\</span>SmsClient</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">TencentSms</span> <span class="token keyword">extends</span> <span class="token class-name">BaseSms</span><span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$appId</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$secretId</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$secretKey</span><span class="token punctuation">;</span>    <span class="token comment">/**     * TencentSMS constructor.     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">name</span> <span class="token operator">=</span> <span class="token class-name static-context">SmsProvider</span><span class="token operator">::</span><span class="token constant">TENCENT</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">appId</span> <span class="token operator">=</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'system.sms.tencent.app_id'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">secretId</span> <span class="token operator">=</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'system.sms.tencent.secret_id'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">secretKey</span> <span class="token operator">=</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'system.sms.tencent.secret_key'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 发送短信     *     * @param $phone     * @param $templateId     * @param $templateParams     * @return bool     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token variable">$phone</span><span class="token punctuation">,</span> <span class="token variable">$templateId</span><span class="token punctuation">,</span> <span class="token variable">$templateParams</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">batchSend</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$phone</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$templateId</span><span class="token punctuation">,</span> <span class="token variable">$templateParams</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 批量发送短信     *     * @param array $phones     * @param $templateId     * @param $templateParams     * @return bool     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">batchSend</span><span class="token punctuation">(</span><span class="token variable">$phones</span><span class="token punctuation">,</span> <span class="token variable">$templateId</span><span class="token punctuation">,</span> <span class="token variable">$templateParams</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">// 处理参数</span>        <span class="token variable">$phones</span> <span class="token operator">=</span> <span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$phones</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$phones</span> <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token variable">$phones</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$phones</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'addPhoneAreaCode'</span><span class="token punctuation">,</span> <span class="token variable">$phones</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$templateParams</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'strval'</span><span class="token punctuation">,</span> <span class="token variable">$templateParams</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 实例化一个证书对象，入参需要传入腾讯云账户secretId，secretKey</span>        <span class="token variable">$cred</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Credential</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">secretId</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">secretKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$httpProfile</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpProfile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$httpProfile</span><span class="token operator">-></span><span class="token function">setEndpoint</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"sms.tencentcloudapi.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$clientProfile</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClientProfile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$clientProfile</span><span class="token operator">-></span><span class="token function">setHttpProfile</span><span class="token punctuation">(</span><span class="token variable">$httpProfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 实例化要请求产品(以cvm为例)的client对象</span>        <span class="token variable">$client</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SmsClient</span><span class="token punctuation">(</span><span class="token variable">$cred</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"ap-guangzhou"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 实例化一个请求对象</span>        <span class="token variable">$req</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SendSmsRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$req</span><span class="token operator">-></span><span class="token function">fromJsonString</span><span class="token punctuation">(</span><span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token string single-quoted-string">'PhoneNumberSet'</span> <span class="token operator">=></span> <span class="token variable">$phones</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'TemplateID'</span> <span class="token operator">=></span> <span class="token variable">$templateId</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'Sign'</span> <span class="token operator">=></span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'system.sms.tencent.sign'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'TemplateParamSet'</span> <span class="token operator">=></span> <span class="token variable">$templateParams</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'SmsSdkAppid'</span> <span class="token operator">=></span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">appId</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 通过client对象调用想要访问的接口，需要传入请求对象</span>        <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-></span><span class="token function">SendSms</span><span class="token punctuation">(</span><span class="token variable">$req</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$res</span><span class="token operator">-></span><span class="token property">SendStatusSet</span> <span class="token keyword">as</span> <span class="token variable">$sendStatus</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">/** @var \TencentCloud\Sms\V20190711\Models\SendStatus $sendStatus */</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$sendStatus</span><span class="token operator">-></span><span class="token property">Code</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">'Ok'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 返回余额     *     * @return float     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$cred</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Credential</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">secretId</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">secretKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$httpProfile</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpProfile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$httpProfile</span><span class="token operator">-></span><span class="token function">setEndpoint</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"sms.tencentcloudapi.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$clientProfile</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClientProfile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$clientProfile</span><span class="token operator">-></span><span class="token function">setHttpProfile</span><span class="token punctuation">(</span><span class="token variable">$httpProfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$client</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SmsClient</span><span class="token punctuation">(</span><span class="token variable">$cred</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token variable">$clientProfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$req</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SmsPackagesStatisticsRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$params</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'Limit'</span> <span class="token operator">=></span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'Offset'</span> <span class="token operator">=></span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'SmsSdkAppid'</span> <span class="token operator">=></span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">appId</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$params</span> <span class="token operator">=</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$req</span><span class="token operator">-></span><span class="token function">fromJsonString</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$resp</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-></span><span class="token function">SmsPackagesStatistics</span><span class="token punctuation">(</span><span class="token variable">$req</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$smsPackagesStatisticsSet</span> <span class="token operator">=</span> <span class="token variable">$resp</span><span class="token operator">-></span><span class="token property">SmsPackagesStatisticsSet</span><span class="token punctuation">;</span>        <span class="token variable">$maxSmsPackagesStatistics</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getMaxSmsPackagesStatistics</span><span class="token punctuation">(</span><span class="token variable">$smsPackagesStatisticsSet</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 当前套餐包剩余使用量</span>        <span class="token variable">$remainingNumber</span> <span class="token operator">=</span> <span class="token variable">$maxSmsPackagesStatistics</span><span class="token operator">-></span><span class="token property">AmountOfPackage</span> <span class="token operator">-</span> <span class="token variable">$maxSmsPackagesStatistics</span><span class="token operator">-></span><span class="token property">CurrentUsage</span><span class="token punctuation">;</span>        <span class="token variable">$balance</span> <span class="token operator">=</span> <span class="token variable">$remainingNumber</span> <span class="token operator">*</span> <span class="token number">0.05</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$balance</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 从集合中查找出剩余短信条数最大的套餐包     *     * @param $smsPackagesStatisticsSet     * @return mixed | object     */</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">getMaxSmsPackagesStatistics</span><span class="token punctuation">(</span><span class="token variable">$smsPackagesStatisticsSet</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$smsPackagesStatisticsSet</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$smsPackagesStatisticsSet</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token variable">$smsPackagesStatisticsSet</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$maxRemainingNumber</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 最大套餐包剩余使用量</span>        <span class="token variable">$maxSmsPackagesStatistics</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span> <span class="token comment">// 剩余短信条数最大的套餐包</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$smsPackagesStatisticsSet</span> <span class="token keyword">as</span> <span class="token variable">$smsPackagesStatistics</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 当前套餐包剩余使用量</span>            <span class="token variable">$remainingNumber</span> <span class="token operator">=</span> <span class="token variable">$smsPackagesStatistics</span><span class="token operator">-></span><span class="token property">AmountOfPackage</span> <span class="token operator">-</span> <span class="token variable">$smsPackagesStatistics</span><span class="token operator">-></span><span class="token property">CurrentUsage</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$remainingNumber</span> <span class="token operator">>=</span> <span class="token variable">$maxRemainingNumber</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$maxRemainingNumber</span> <span class="token operator">=</span> <span class="token variable">$remainingNumber</span><span class="token punctuation">;</span>                <span class="token variable">$maxSmsPackagesStatistics</span> <span class="token operator">=</span> <span class="token variable">$smsPackagesStatistics</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$maxSmsPackagesStatistics</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></details><h3 id="服务提供者与发送类"><a href="#服务提供者与发送类" class="headerlink" title="服务提供者与发送类"></a>服务提供者与发送类</h3><p>分为两类场景：调用方始终使用同一个服务商、调用方可能使用不同服务商。</p><h4 id="调用方始终使用同一个服务商"><a href="#调用方始终使用同一个服务商" class="headerlink" title="调用方始终使用同一个服务商"></a>调用方始终使用同一个服务商</h4><h5 id="服务提供者"><a href="#服务提供者" class="headerlink" title="服务提供者"></a>服务提供者</h5><p>扩展绑定<code>Sms</code>接口到实现上，并绑定<code>Sender</code>的单例。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Providers</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Contracts<span class="token punctuation">\</span>Sms</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>Sms<span class="token punctuation">\</span>TencentSms</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Support<span class="token punctuation">\</span>ServiceProvider</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">SmsServiceProvider</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceProvider</span><span class="token punctuation">&#123;</span>    <span class="token comment">/**     * Register any application services.     *     * @return void     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">//</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Bootstrap any application services.     *     * @return void     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token class-name static-context">Sms</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$service</span><span class="token punctuation">,</span> <span class="token variable">$app</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$smsProvider</span> <span class="token operator">=</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'system.sms.provider'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$smsProvider</span> <span class="token operator">===</span> <span class="token class-name static-context">SmsProvider</span><span class="token operator">::</span><span class="token constant">TENCENT</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TencentSMS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TencentSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token function">singleton</span><span class="token punctuation">(</span><span class="token class-name static-context">Sender</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$app</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Sender</span><span class="token punctuation">(</span><span class="token variable">$app</span><span class="token operator">-></span><span class="token function">make</span><span class="token punctuation">(</span><span class="token class-name static-context">Sms</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="发送类"><a href="#发送类" class="headerlink" title="发送类"></a>发送类</h5><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>Sms</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Enums<span class="token punctuation">\</span>SmsProvider</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Support<span class="token punctuation">\</span>Facades<span class="token punctuation">\</span>Redis</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Sender</span><span class="token punctuation">&#123;</span>    <span class="token comment">/**     * @var TencentSms     */</span>    <span class="token keyword">protected</span> <span class="token variable">$sms</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Sms</span> <span class="token variable">$smsProvider</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">smsProvider</span> <span class="token operator">=</span> <span class="token variable">$smsProvider</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 发送验证码     *     * @template 验证码 &#123;1&#125;，15分钟内有效，请勿向任何人泄露。     * @param int|string $phone     * @param int $length 验证码长度, 范围4-6     * @param int $ttl 有效时间(分钟)     * @return bool     * @throws \Exception     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">sendCaptcha</span><span class="token punctuation">(</span><span class="token variable">$phone</span><span class="token punctuation">,</span> <span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token variable">$ttl</span> <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$captcha</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span> <span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$length</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$templateId</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">sms</span><span class="token operator">-></span><span class="token function">getTemplateId</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'captcha'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name static-context">Redis</span><span class="token operator">::</span><span class="token function">setex</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"captcha:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$phone</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">,</span> <span class="token variable">$ttl</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token variable">$captcha</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">sms</span><span class="token operator">-></span><span class="token function">send</span><span class="token punctuation">(</span><span class="token variable">$phone</span><span class="token punctuation">,</span> <span class="token variable">$templateId</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token variable">$captcha</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="调用示例"><a href="#调用示例" class="headerlink" title="调用示例"></a>调用示例</h5><p>自动注入获取单例</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>Sms<span class="token punctuation">\</span>Sender</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">Sender</span> <span class="token variable">$sender</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// do some work and send a message</span>    <span class="token variable">$sender</span><span class="token operator">-></span><span class="token function">sendCaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接解析获取单例</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>Sms<span class="token punctuation">\</span>Sender</span><span class="token punctuation">;</span><span class="token variable">$sender</span> <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token class-name static-context">Sender</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sender</span><span class="token operator">-></span><span class="token function">sendCaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="调用方可能使用不同服务商"><a href="#调用方可能使用不同服务商" class="headerlink" title="调用方可能使用不同服务商"></a>调用方可能使用不同服务商</h4><h5 id="服务提供者-1"><a href="#服务提供者-1" class="headerlink" title="服务提供者"></a>服务提供者</h5><p>每个服务使用单例，采用延迟加载。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Providers</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>Sms<span class="token punctuation">\</span>TencentSms</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Contracts<span class="token punctuation">\</span>Support<span class="token punctuation">\</span>DeferrableProvider</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Support<span class="token punctuation">\</span>ServiceProvider</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">SmsServiceProvider</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceProvider</span> <span class="token keyword">implements</span> <span class="token class-name">DeferrableProvider</span><span class="token punctuation">&#123;</span>    <span class="token comment">/**     * Register any application services.     *     * @return void     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">app</span><span class="token operator">-></span><span class="token function">singleton</span><span class="token punctuation">(</span><span class="token class-name static-context">TencentSms</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TencentSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Bootstrap any application services.     *     * @return void     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">//</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Get the services provided by the provider.     *     * @return array     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">provides</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token class-name static-context">TencentSms</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="发送类-1"><a href="#发送类-1" class="headerlink" title="发送类"></a>发送类</h5><p>调用方传入服务商的枚举值。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>Sms</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Enums<span class="token punctuation">\</span>SmsProvider</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Support<span class="token punctuation">\</span>Facades<span class="token punctuation">\</span>Redis</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Sender</span><span class="token punctuation">&#123;</span>    <span class="token comment">/**     * @var TencentSms     */</span>    <span class="token keyword">protected</span> <span class="token variable">$sms</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$smsProvider</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$smsProvider</span> <span class="token operator">=</span> <span class="token variable">$smsProvider</span> <span class="token operator">?</span><span class="token punctuation">:</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'system.sms.default_provider'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$smsProvider</span> <span class="token operator">===</span> <span class="token class-name static-context">SmsProvider</span><span class="token operator">::</span><span class="token constant">TENCENT</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">sms</span> <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token class-name static-context">TencentSms</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取单例</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 发送验证码     *     * @template 验证码 &#123;1&#125;，15分钟内有效，请勿向任何人泄露。     * @param int|string $phone     * @param int $length 验证码长度, 范围4-6     * @param int $ttl 有效时间(分钟)     * @return bool     * @throws \Exception     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">sendCaptcha</span><span class="token punctuation">(</span><span class="token variable">$phone</span><span class="token punctuation">,</span> <span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token variable">$ttl</span> <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$captcha</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span> <span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$length</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$templateId</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">sms</span><span class="token operator">-></span><span class="token function">getTemplateId</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'captcha'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name static-context">Redis</span><span class="token operator">::</span><span class="token function">setex</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"captcha:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$phone</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">,</span> <span class="token variable">$ttl</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token variable">$captcha</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">sms</span><span class="token operator">-></span><span class="token function">send</span><span class="token punctuation">(</span><span class="token variable">$phone</span><span class="token punctuation">,</span> <span class="token variable">$templateId</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token variable">$captcha</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="调用示例-1"><a href="#调用示例-1" class="headerlink" title="调用示例"></a>调用示例</h5><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Enums<span class="token punctuation">\</span>SmsProvider</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>Sms<span class="token punctuation">\</span>Sender</span><span class="token punctuation">;</span><span class="token variable">$sender</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sender</span><span class="token punctuation">(</span><span class="token class-name static-context">SmsProvider</span><span class="token operator">::</span><span class="token constant">TENCENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sender</span><span class="token operator">-></span><span class="token function">sendCaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;小公司可能为了节省短信成本，会选择多家短信服务商，但短信本身的模板不会太多。本文介绍下&lt;code&gt;Laravel&lt;/code&gt;下如何优雅地实现这种场景。&lt;/p&gt;</summary>
    
    
    
    <category term="php" scheme="https://cloudycity.me/categories/php/"/>
    
    
    <category term="laravel" scheme="https://cloudycity.me/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>PHP强制规范检查的最佳实践</title>
    <link href="https://cloudycity.me/post/PHP%E5%BC%BA%E5%88%B6%E8%A7%84%E8%8C%83%E6%A3%80%E6%9F%A5%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html"/>
    <id>https://cloudycity.me/post/PHP%E5%BC%BA%E5%88%B6%E8%A7%84%E8%8C%83%E6%A3%80%E6%9F%A5%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html</id>
    <published>2021-01-29T08:25:35.000Z</published>
    <updated>2021-06-21T10:35:56.782Z</updated>
    
    <content type="html"><![CDATA[<p>规范是团队中最重要的部分之一，多数团队是靠自觉+review维护规范，而强制检查是最有效的方案。<br>本文就<del>水一下</del>介绍下<a href="https://github.com/squizlabs/PHP_CodeSniffer">PHP_CodeSniffer</a>在项目中强制执行的最佳实践。</p><span id="more"></span><p>规范检查和表单检验一样，服务端是必须要检查的，客户端检查主要是优化使用体验。</p><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><h4 id="引入组件"><a href="#引入组件" class="headerlink" title="引入组件"></a>引入组件</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php">$ composer <span class="token keyword">require</span> <span class="token string single-quoted-string">'squizlabs/php_codesniffer'</span> <span class="token operator">--</span>dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="自定义规范"><a href="#自定义规范" class="headerlink" title="自定义规范"></a>自定义规范</h4><p>如果你的项目用的是<code>Laravel</code>框架，会发现它并没有完全遵守PSR2规范，这时候就需要使用自定义规范。<br>在项目根目录创建<code>phpcs.xml</code>作为自定义规范，这里放出我的项目的例子。</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ruleset</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MyStandard<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>基于PSR2，去掉部分规则<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab-width<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PSR2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 不限制行的长度 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Generic.Files.LineLength<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment">&lt;!-- 跳过的目录 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude-pattern</span><span class="token punctuation">></span></span>bootstrap/cache/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude-pattern</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude-pattern</span><span class="token punctuation">></span></span>node_modules/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude-pattern</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude-pattern</span><span class="token punctuation">></span></span>public/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude-pattern</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude-pattern</span><span class="token punctuation">></span></span>resources/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude-pattern</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude-pattern</span><span class="token punctuation">></span></span>storage/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude-pattern</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude-pattern</span><span class="token punctuation">></span></span>vendor/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- Laravel Migration &amp; Seeder 没有命名空间 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PSR1.Classes.ClassDeclaration<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude-pattern</span><span class="token punctuation">></span></span>database/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ruleset</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="配置命令"><a href="#配置命令" class="headerlink" title="配置命令"></a>配置命令</h4><p>我的使用场景只检查php，为了加快执行速度，跳过了部分目录。<br>加上这些参数之后命令会比较长，先加入到composer.json的脚本中，方便执行。</p><p><code>composer.json</code></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"phpcs"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token string">"./vendor/bin/phpcs --extensions='php' --standard='./phpcs.xml' --ignore='*/bootstrap/*,*/docker/*,*/node_modules/*,*/public/*,*/resources/*,*/storage/*,*/vendor/*,_ide_helper*,*.blade.php' -p"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"phpcbf"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token string">"./vendor/bin/phpcbf --extensions='php' --standard='./phpcs.xml' --ignore='*/bootstrap/*,*/docker/*,*/node_modules/*,*/public/*,*/resources/*,*/storage/*,*/vendor/*,_ide_helper*,*.blade.php' -p"</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="手动执行"><a href="#手动执行" class="headerlink" title="手动执行"></a>手动执行</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php">$ composer phpcs <span class="token operator">.</span><span class="token operator">/</span>$ composer phpcbf <span class="token operator">.</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://user-images.githubusercontent.com/17662451/106257261-4426c380-6257-11eb-9efd-886c2ebb77e5.png" alt="image"></p><h4 id="自动执行"><a href="#自动执行" class="headerlink" title="自动执行"></a>自动执行</h4><p>通过<code>pre-commit</code>钩子，在提交时自动执行<code>phpcs</code>进行检查，如果未通过检查将阻止提交。</p><p>在项目根目录创建<code>git-pre-commit-hook</code>:</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/sh</span><span class="token assign-left variable">PROJECT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span>php -r <span class="token string">"echo dirname(dirname(dirname(realpath('<span class="token variable">$0</span>'))));"</span><span class="token variable">`</span></span><span class="token assign-left variable">STAGED_FILES_CMD</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">git</span> <span class="token function">diff</span> --cached --name-only --diff-filter<span class="token operator">=</span>ACMR HEAD <span class="token operator">|</span> <span class="token function">grep</span> <span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token punctuation">\</span>.php<span class="token variable">`</span></span><span class="token comment"># Determine if a file list is passed</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$#</span>"</span> -eq <span class="token number">1</span> <span class="token punctuation">]</span><span class="token keyword">then</span>    <span class="token assign-left variable">oIFS</span><span class="token operator">=</span><span class="token environment constant">$IFS</span>    <span class="token assign-left variable"><span class="token environment constant">IFS</span></span><span class="token operator">=</span><span class="token string">'    '</span>    <span class="token assign-left variable">SFILES</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$1</span>"</span>    <span class="token assign-left variable"><span class="token environment constant">IFS</span></span><span class="token operator">=</span><span class="token variable">$oIFS</span><span class="token keyword">fi</span><span class="token assign-left variable">SFILES</span><span class="token operator">=</span><span class="token variable">$&#123;SFILES<span class="token operator">:-</span>$STAGED_FILES_CMD&#125;</span><span class="token builtin class-name">echo</span> <span class="token string">"Checking PHP Lint..."</span><span class="token keyword">for</span> <span class="token for-or-select variable">FILE</span> <span class="token keyword">in</span> <span class="token variable">$SFILES</span><span class="token keyword">do</span>    php -l -d <span class="token assign-left variable">display_errors</span><span class="token operator">=</span><span class="token number">0</span> <span class="token variable">$PROJECT</span>/<span class="token variable">$FILE</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">]</span>    <span class="token keyword">then</span>        <span class="token builtin class-name">echo</span> <span class="token string">"Fix the error before commit."</span>        <span class="token builtin class-name">exit</span> <span class="token number">1</span>    <span class="token keyword">fi</span>    <span class="token assign-left variable">FILES</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$FILES</span> <span class="token variable">$PROJECT</span>/<span class="token variable">$FILE</span>"</span><span class="token keyword">done</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$FILES</span>"</span> <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">]</span><span class="token keyword">then</span>    <span class="token builtin class-name">echo</span> <span class="token string">"Running Code Sniffer. Code standard PSR2."</span>    <span class="token function">composer</span> phpcs -- <span class="token variable">$FILES</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">]</span>    <span class="token keyword">then</span>        <span class="token builtin class-name">echo</span> <span class="token string">"Fix the error before commit!"</span>        <span class="token builtin class-name">echo</span> <span class="token string">"Run"</span>        <span class="token builtin class-name">echo</span> <span class="token string">"  composer phpcbf -- <span class="token variable">$FILES</span>"</span>        <span class="token builtin class-name">echo</span> <span class="token string">"for automatic fix or fix it manually."</span>        <span class="token builtin class-name">exit</span> <span class="token number">1</span>    <span class="token keyword">fi</span><span class="token keyword">fi</span><span class="token builtin class-name">exit</span> <span class="token variable">$?</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同样是在项目根目录创建<code>git-hook-setup.sh</code>，用于安装钩子:</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/sh</span><span class="token keyword">if</span> <span class="token punctuation">[</span> -e .git/hooks/pre-commit <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>    <span class="token assign-left variable">PRE_COMMIT_EXISTS</span><span class="token operator">=</span><span class="token number">1</span><span class="token keyword">else</span>    <span class="token assign-left variable">PRE_COMMIT_EXISTS</span><span class="token operator">=</span><span class="token number">0</span><span class="token keyword">fi</span><span class="token function">cp</span> ./git-pre-commit-hook .git/hooks/pre-commit<span class="token function">chmod</span> +x .git/hooks/pre-commit<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$PRE_COMMIT_EXISTS</span>"</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>    <span class="token builtin class-name">echo</span> <span class="token string">"Pre-commit git hook is installed!"</span><span class="token keyword">else</span>    <span class="token builtin class-name">echo</span> <span class="token string">"Pre-commit git hook is updated!"</span><span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>composer.json</code>的钩子中加入git钩子的安装脚本 <del>禁止套娃</del></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"install-hooks"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token string">"sh ./git-hook-setup.sh"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"post-install-cmd"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token string">"@install-hooks"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每一位开发者在克隆项目后都会执行<code>composer install</code>，安装完依赖就会自动安装git钩子，从而实现自动检查。</p><p><img src="https://user-images.githubusercontent.com/17662451/106257419-77695280-6257-11eb-87e2-0fea0e1aa18b.png" alt="image"></p><p>使用命令行提交被拒:</p><p><img src="https://user-images.githubusercontent.com/17662451/106256931-e1352c80-6256-11eb-9cf7-87d60fff98b0.png" alt="image"></p><p>正常安装钩子后，使用PHPStorm提交时将出现<code>Run Git hooks</code>选项并且默认勾选，如果没有，就重启大法。</p><p><img src="https://user-images.githubusercontent.com/17662451/106256694-93202900-6256-11eb-9496-0120aa2c30a8.png" alt="image"></p><p>使用PHPStorm提交被拒:</p><p><img src="https://user-images.githubusercontent.com/17662451/106257783-fb233f00-6257-11eb-84f3-517c2e256861.png" alt="image"></p><div class="custom-quote tip"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06"></path><path stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M11.99 18H12.01"></path></svg></span><p class="custom-quote-title">提示</p><p>虽然客户端有办法跳过自动检查，不过后面服务端也会进行检查，不必担心。客户端检查主要是提高用户体验，也可以杜绝不规范的提交。</p></div><h4 id="PHPStorm协同"><a href="#PHPStorm协同" class="headerlink" title="PHPStorm协同"></a>PHPStorm协同</h4><p>正常来说，在引入PHPCS组件后，PHPStorm会自动发现配置。如果没有自动配置，需要在 <strong>Languages &amp; Frameworks &gt; PHP &gt; Quality Tools &gt; Code Sniffer</strong> 中配置。</p><p><img src="https://user-images.githubusercontent.com/17662451/106248641-3b7cc000-624c-11eb-8ed4-5731ed61c234.png" alt="image"></p><p>不过这时候默认是使用PSR2规范，需要手动选择一下自定义的规范。<br>在 <strong>Editor &gt; Inspections &gt; PHP &gt; Quality tools &gt; PHP Code Sniffer validation</strong> 中，将<code>Coding standard</code>改为了<code>Custom</code>，并点击冒号图标，选中项目根目录的<code>phpcs.xml</code>。</p><p><img src="https://user-images.githubusercontent.com/17662451/106248118-80542700-624b-11eb-9f61-35c53195b272.png" alt="image"></p><p>保存后重启PHPStorm以生效。</p><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><p>精力有限，这里只介绍我们团队用的GitLab的方案。其他的托管仓库只要支持Hook都能实现。</p><h4 id="GitLab"><a href="#GitLab" class="headerlink" title="GitLab"></a>GitLab</h4><p>首先进入GitLab所在终端，找到存放所有仓库的目录。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ <span class="token function">cat</span> /etc/gitlab/gitlab.rb <span class="token operator">|</span><span class="token function">grep</span> git_data_dirs -A <span class="token number">4</span>git_data_dirs<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>   <span class="token string">"default"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>     <span class="token string">"path"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"/data/gitlab"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后进入项目所在仓库目录，创建<code>custom_hooks</code>目录，并在该目录中创建<code>pre-receive</code>:</p><details class="custom-details"><summary>Click to see more</summary><p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/usr/bin/env bash</span> <span class="token comment"># 创建临时目录</span><span class="token assign-left variable">TMP_DIR</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mktemp -d<span class="token variable">)</span></span><span class="token comment"># 删除临时目录(脚本退出时)</span><span class="token builtin class-name">trap</span> <span class="token string">'rm -rf "<span class="token variable">$TMP_DIR</span>"'</span> <span class="token builtin class-name">exit</span> <span class="token comment"># 警告数</span><span class="token assign-left variable">warnings_count</span><span class="token operator">=</span><span class="token number">0</span><span class="token comment"># 错误数</span><span class="token assign-left variable">errors_count</span><span class="token operator">=</span><span class="token number">0</span><span class="token comment"># 自定义规范</span><span class="token assign-left variable">custom_standard</span><span class="token operator">=</span><span class="token string">'phpcs.xml'</span> <span class="token comment"># 空hash</span><span class="token assign-left variable">EMPTY_REF</span><span class="token operator">=</span><span class="token string">'0000000000000000000000000000000000000000'</span> <span class="token comment"># Colors</span><span class="token assign-left variable">PURPLE</span><span class="token operator">=</span><span class="token string">'<span class="token entity" title="\033">\033</span>[35m'</span><span class="token assign-left variable">RED</span><span class="token operator">=</span><span class="token string">'<span class="token entity" title="\033">\033</span>[31m'</span><span class="token assign-left variable">RED_BOLD</span><span class="token operator">=</span><span class="token string">'<span class="token entity" title="\033">\033</span>[1;31m'</span><span class="token assign-left variable">YELLOW</span><span class="token operator">=</span><span class="token string">'<span class="token entity" title="\033">\033</span>[33m'</span><span class="token assign-left variable">YELLOW_BOLD</span><span class="token operator">=</span><span class="token string">'<span class="token entity" title="\033">\033</span>[1;33m'</span><span class="token assign-left variable">GREEN</span><span class="token operator">=</span><span class="token string">'<span class="token entity" title="\033">\033</span>[32m'</span><span class="token assign-left variable">GREEN_BOLD</span><span class="token operator">=</span><span class="token string">'<span class="token entity" title="\033">\033</span>[1;32m'</span><span class="token assign-left variable">BLUE</span><span class="token operator">=</span><span class="token string">'<span class="token entity" title="\033">\033</span>[34m'</span><span class="token assign-left variable">BLUE_BOLD</span><span class="token operator">=</span><span class="token string">'<span class="token entity" title="\033">\033</span>[1;34m'</span><span class="token assign-left variable">COLOR_END</span><span class="token operator">=</span><span class="token string">'<span class="token entity" title="\033">\033</span>[0m'</span> <span class="token keyword">while</span> <span class="token builtin class-name">read</span> oldrev newrev ref<span class="token keyword">do</span>    <span class="token comment"># 当push新分支的时候oldrev会不存在，删除时newrev就不存在</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$oldrev</span> <span class="token operator">!=</span> <span class="token variable">$EMPTY_REF</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$newrev</span> <span class="token operator">!=</span> <span class="token variable">$EMPTY_REF</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>        <span class="token builtin class-name">echo</span> -e <span class="token string">"<span class="token entity" title="\n">\n</span><span class="token variable">$&#123;PURPLE&#125;</span>CodeSniffer check result:<span class="token variable">$&#123;COLOR_END&#125;</span>"</span>        <span class="token comment"># 取最新版本的自定义规则，不存在则使用PSR2</span>        <span class="token function">git</span> show <span class="token variable">$newrev</span><span class="token builtin class-name">:</span><span class="token variable">$custom_standard</span> <span class="token operator">></span> <span class="token variable">$TMP_DIR</span>/<span class="token variable">$custom_standard</span>        <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>            <span class="token assign-left variable">standard</span><span class="token operator">=</span><span class="token string">'PSR2'</span>        <span class="token keyword">else</span>            <span class="token assign-left variable">standard</span><span class="token operator">=</span><span class="token variable">$TMP_DIR</span>/<span class="token variable">$custom_standard</span>        <span class="token keyword">fi</span>        <span class="token comment"># 被检查了的文件数</span>        <span class="token assign-left variable">checked_file_count</span><span class="token operator">=</span><span class="token number">0</span>        <span class="token comment"># 找出哪些文件被更新了</span>        <span class="token keyword">for</span> <span class="token for-or-select variable">line</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">git</span> diff-tree -r $oldrev<span class="token punctuation">..</span>$newrev <span class="token operator">|</span> <span class="token function">grep</span> -oP <span class="token string">'.*\.(php)'</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print <span class="token variable">$5</span><span class="token variable">$6</span>&#125;'</span><span class="token variable">)</span></span>        <span class="token keyword">do</span>            <span class="token comment"># 文件状态</span>            <span class="token comment"># D: deleted</span>            <span class="token comment"># A: added</span>            <span class="token comment"># M: modified</span>            <span class="token assign-left variable">status</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $line <span class="token operator">|</span> <span class="token function">grep</span> -o <span class="token string">'^.'</span><span class="token variable">)</span></span>             <span class="token comment"># 不检查被删除的文件</span>            <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$status</span> <span class="token operator">==</span> <span class="token string">'D'</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>                <span class="token builtin class-name">continue</span>            <span class="token keyword">fi</span>             <span class="token comment"># 文件名</span>            <span class="token assign-left variable">file</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $line <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/^.//'</span><span class="token variable">)</span></span>             <span class="token comment"># 为文件创建目录</span>            <span class="token function">mkdir</span> -p <span class="token variable"><span class="token variable">$(</span><span class="token function">dirname</span> $TMP_DIR/$file<span class="token variable">)</span></span>            <span class="token comment"># 保存文件内容</span>            <span class="token function">git</span> show <span class="token variable">$newrev</span><span class="token builtin class-name">:</span><span class="token variable">$file</span> <span class="token operator">></span> <span class="token variable">$TMP_DIR</span>/<span class="token variable">$file</span>             <span class="token assign-left variable">output</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>phpcs --standard<span class="token operator">=</span>$standard --colors --encoding<span class="token operator">=</span>utf-8 -n -p  $TMP_DIR/$file<span class="token variable">)</span></span>             <span class="token assign-left variable">warning</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $output <span class="token operator">|</span> <span class="token function">grep</span> -oP <span class="token string">'([0-9]+) WARNING'</span> <span class="token operator">|</span> <span class="token function">grep</span> -oP <span class="token string">'[0-9]+'</span><span class="token variable">)</span></span>            <span class="token assign-left variable">error</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $output <span class="token operator">|</span> <span class="token function">grep</span> -oP <span class="token string">'([0-9]+) ERROR'</span> <span class="token operator">|</span> <span class="token function">grep</span> -oP <span class="token string">'[0-9]+'</span><span class="token variable">)</span></span>             <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$warning</span> <span class="token operator">||</span> <span class="token variable">$error</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>                 <span class="token assign-left variable">msg</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$&#123;file&#125;</span>: "</span>                 <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$warning</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>                    <span class="token assign-left variable">msg</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$msg</span><span class="token variable">$&#123;YELLOW_BOLD&#125;</span><span class="token variable">$&#123;warning&#125;</span><span class="token variable">$&#123;COLOR_END&#125;</span> <span class="token variable">$&#123;YELLOW&#125;</span>warnings<span class="token variable">$&#123;COLOR_END&#125;</span> "</span>                     <span class="token builtin class-name">let</span> <span class="token string">"warnings_count = warnings_count + 1"</span>                <span class="token keyword">fi</span>                <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$error</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>                    <span class="token assign-left variable">msg</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$msg</span><span class="token variable">$&#123;RED_BOLD&#125;</span><span class="token variable">$&#123;error&#125;</span><span class="token variable">$&#123;COLOR_END&#125;</span> <span class="token variable">$&#123;RED&#125;</span>errors<span class="token variable">$&#123;COLOR_END&#125;</span>"</span>                     <span class="token builtin class-name">let</span> <span class="token string">"errors_count = errors_count + 1"</span>                <span class="token keyword">fi</span>                 <span class="token builtin class-name">echo</span> -e <span class="token string">"    <span class="token variable">$msg</span>"</span>            <span class="token keyword">fi</span>             <span class="token builtin class-name">let</span> <span class="token string">"checked_file_count = checked_file_count + 1"</span><span class="token punctuation">;</span>         <span class="token keyword">done</span>         <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$checked_file_count</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>            <span class="token builtin class-name">echo</span> -e <span class="token string">"    <span class="token variable">$&#123;BLUE_BOLD&#125;</span>No file was checked.<span class="token variable">$&#123;COLOR_END&#125;</span>"</span>        <span class="token keyword">elif</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$warnings_count</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$errors_count</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>            <span class="token builtin class-name">echo</span> -e <span class="token string">"<span class="token variable">$&#123;GREEN_BOLD&#125;</span><span class="token variable"><span class="token variable">$(</span>cowsay <span class="token string">'Congratulations!!!'</span><span class="token variable">)</span></span><span class="token variable">$&#123;COLOR_END&#125;</span>"</span>        <span class="token keyword">elif</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$errors_count</span>  <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>            <span class="token builtin class-name">echo</span> -e <span class="token string">"    <span class="token variable">$&#123;BLUE&#125;</span>Good job, no errors were found!!!<span class="token variable">$&#123;COLOR_END&#125;</span>"</span>        <span class="token keyword">fi</span>             <span class="token keyword">fi</span><span class="token keyword">done</span> <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$warnings_count</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token variable">$errors_count</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token builtin class-name">echo</span> -e <span class="token string">"<span class="token variable">$&#123;RED&#125;</span><span class="token variable"><span class="token variable">$(</span>cowsay -f dragon <span class="token string">'PHPCS Check Error!!!'</span><span class="token variable">)</span></span><span class="token variable">$&#123;COLOR_END&#125;</span>"</span>    <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token keyword">fi</span> <span class="token builtin class-name">exit</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></details><p>之后客户端推送提交时，便会执行这个钩子进行检查。</p><p>推送通过:</p><p><img src="https://user-images.githubusercontent.com/17662451/106252564-5e5da300-6251-11eb-999b-c069638a7c82.png" alt="image"></p><p>推送被拒:</p><p><img src="https://user-images.githubusercontent.com/17662451/106252728-864d0680-6251-11eb-97c6-8b4372e0353b.png" alt="image"></p><p>如果使用PHPStorm的UI进行推送，被拒是不提示原因的，不过相信大家心里一般都有b数的。</p><p><img src="https://user-images.githubusercontent.com/17662451/106257905-2443cf80-6258-11eb-9826-8e8aca02452a.png" alt="image"></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"> _____________________________ <span class="token operator">&lt;</span> 你心里没点b数吗？ <span class="token operator">></span> -----------------------------         <span class="token punctuation">\</span>   ^__^         <span class="token punctuation">\</span>  <span class="token punctuation">(</span>oo<span class="token punctuation">)</span><span class="token punctuation">\</span>_______            <span class="token punctuation">(</span>__<span class="token punctuation">)</span><span class="token punctuation">\</span>       <span class="token punctuation">)</span><span class="token punctuation">\</span>/<span class="token punctuation">\</span>                <span class="token operator">||</span>----w <span class="token operator">|</span>                <span class="token operator">||</span>     <span class="token operator">||</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="额外规则"><a href="#额外规则" class="headerlink" title="额外规则"></a>额外规则</h3><p><code>phpcs</code>自带的规则集比较少，这里推荐一组规则集<a href="https://github.com/slevomat/coding-standard">slevomat/coding-standard</a>，最新版本使用了做了自动安装，使用体验非常丝滑。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">composer</span> require slevomat/coding-standard --dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果你的项目中有使用ORM、数据库的字段有使用下划线、并且希望变量名强制使用小驼峰，那目前截至v3.5的<code>phpcs</code>自带规则<code>Squiz.NamingConventions.ValidVariableName.NotCamelCaps</code>将无法实现你的需求，会把<code>$user-&gt;created_at</code>误判为不规范，参照<a href="https://github.com/squizlabs/PHP_CodeSniffer/issues/1773">Issue#1773</a></p><p>等<code>phpcs</code>发布v4.0可能会修复，我写了个组件<a href="https://github.com/CloudyCity/coding-standard">cloudycity/coding-standard</a>，可以暂时解决这个问题。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">composer</span> require cloudycity/coding-standard --dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="最终的规则集"><a href="#最终的规则集" class="headerlink" title="最终的规则集"></a>最终的规则集</h4><details class="custom-details"><summary>Click to see more</summary><p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ruleset</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MyStandard<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 新版本不需要手动安装第三方规则 --></span>    <span class="token comment">&lt;!-- &lt;config name="installed_paths" value="vendor/slevomat/coding-standard"/> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>基于PSR2与slevomat的规则<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab-width<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PSR2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 不限制行的长度 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Generic.Files.LineLength<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment">&lt;!-- 跳过的目录 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude-pattern</span><span class="token punctuation">></span></span>bootstrap/cache/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude-pattern</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude-pattern</span><span class="token punctuation">></span></span>node_modules/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude-pattern</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude-pattern</span><span class="token punctuation">></span></span>public/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude-pattern</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude-pattern</span><span class="token punctuation">></span></span>resources/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude-pattern</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude-pattern</span><span class="token punctuation">></span></span>storage/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude-pattern</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude-pattern</span><span class="token punctuation">></span></span>vendor/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- Laravel Migration &amp; Seeder 没有命名空间 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PSR1.Classes.ClassDeclaration<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude-pattern</span><span class="token punctuation">></span></span>database/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 变量名采用驼峰 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CloudyCityCodingStandard.NamingConventions.ValidVariableName.NotCamelCaps<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment">&lt;!-- 字符串连接符前后空格 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Squiz.Strings.ConcatenationSpacing<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spacing<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 确保函数前后空行，首个/最后函数除外 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Squiz.WhiteSpace.FunctionSpacing<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spacing<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spacingBeforeFirst<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spacingAfterLast<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 操作符前后空格 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Squiz.WhiteSpace.OperatorSpacing<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ignoreNewlines<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ignoreSpacingBeforeAssignments<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 单行数组空格 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SlevomatCodingStandard.Arrays.SingleLineArrayWhitespace<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment">&lt;!-- 多行数组元素强制以逗号结尾 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SlevomatCodingStandard.Arrays.TrailingArrayComma<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment">&lt;!-- 禁止数组隐式创建 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment">&lt;!-- 禁止自动生成的注释 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SlevomatCodingStandard.Commenting.ForbiddenComments<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span>                <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>forbiddenCommentPatterns<span class="token punctuation">"</span></span>                <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>array<span class="token punctuation">"</span></span>                <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>~^Created by \S+\.\z~i,<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ruleset</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></details><h4 id="GitLab的兼容"><a href="#GitLab的兼容" class="headerlink" title="GitLab的兼容"></a>GitLab的兼容</h4><p>只要在gitlab的机器上也用composer引入<a href="https://github.com/slevomat/coding-standard">slevomat/coding-standard</a>即可。</p><p>在哪里引入都可以，这边选择和钩子同一个目录。<br><img src="https://user-images.githubusercontent.com/17662451/111274021-748fb900-866f-11eb-9bdf-8c9d3eefc801.png" alt="image"></p><p>授予执行权限</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">chmod</span> a+x vendor/squizlabs/php_codesniffer/bin/phpcs<span class="token function">chmod</span> a+x vendor/squizlabs/php_codesniffer/bin/phpcbf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>修改<code>pre-receive</code>中的执行命令</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token assign-left variable">output</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>/usr/local/bin/php7 /data/gitlab/repositories/php/demo.git/custom_hooks/vendor/squizlabs/php_codesniffer/bin/phpcs --standard<span class="token operator">=</span>$standard --colors --encoding<span class="token operator">=</span>utf-8 -n -p  $TMP_DIR/$file<span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>上面提到的主要是针对单个仓库的强制规范检查策略，主要是我目前团队的各个项目的规范都有不同。<br>如果你的各项目都有相同的规范，可以将规范提取为一个组件，服务端也可以使用全局Hook，不必为每一个仓库加Hook。</p><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><p><a href="https://github.com/squizlabs/PHP_CodeSniffer">PHP_CodeSniffer</a><br><a href="https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks">Git Hooks</a><br><a href="https://docs.gitlab.com/ee/administration/server_hooks.html#create-a-server-hook-for-a-repository">GitLab Server Hooks</a><br><a href="https://github.com/smgladkovskiy/phpcs-git-pre-commit">客户端Hook自动安装脚本</a><br><a href="https://bbs.csdn.net/topics/392558612?list=lz">服务端Hook脚本</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;规范是团队中最重要的部分之一，多数团队是靠自觉+review维护规范，而强制检查是最有效的方案。&lt;br&gt;本文就&lt;del&gt;水一下&lt;/del&gt;介绍下&lt;a href=&quot;https://github.com/squizlabs/PHP_CodeSniffer&quot;&gt;PHP_CodeSniffer&lt;/a&gt;在项目中强制执行的最佳实践。&lt;/p&gt;</summary>
    
    
    
    <category term="php" scheme="https://cloudycity.me/categories/php/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP项目在MySQL使用顺序的UUID</title>
    <link href="https://cloudycity.me/post/PHP%E9%A1%B9%E7%9B%AE%E5%9C%A8MySQL%E4%BD%BF%E7%94%A8%E9%A1%BA%E5%BA%8F%E7%9A%84UUID.html"/>
    <id>https://cloudycity.me/post/PHP%E9%A1%B9%E7%9B%AE%E5%9C%A8MySQL%E4%BD%BF%E7%94%A8%E9%A1%BA%E5%BA%8F%E7%9A%84UUID.html</id>
    <published>2021-01-20T09:38:35.000Z</published>
    <updated>2021-06-21T10:35:56.782Z</updated>
    
    <content type="html"><![CDATA[<p>分布式系统的数据库都离不开UUID。在<a href="https://tools.ietf.org/html/rfc412">RFC 4122</a>标准中各版本的UUID都有存在一些缺点，简单概括就是长而乱序。其中乱序则是通过<strong>顺序的UUID</strong>来减少影响。</p><p>本文介绍什么是顺序的UUID，以及如何在PHP中生成。</p><span id="more"></span><h3 id="标准UUID的缺点"><a href="#标准UUID的缺点" class="headerlink" title="标准UUID的缺点"></a>标准UUID的缺点</h3><h4 id="长度为36位"><a href="#长度为36位" class="headerlink" title="长度为36位"></a>长度为36位</h4><p>太长基本是无解的。虽然转换成字节型，可以将长度从36位减少为16位，但是不具备可读性，查询出来后需要再转换为字符串才可读。不过我们可以去掉4个无意义的短横线，将长度减少为32位。</p><h4 id="乱序"><a href="#乱序" class="headerlink" title="乱序"></a>乱序</h4><p>所有UUID都不是单调递增的。<br>在InnoDB中，如果将UUID作为主键插入，数据会散列在硬盘中。对比自增主键，数据库会更大、查询会更慢。另外，InnoDB所有的次要键都会包括主键，长度为36位(或16位)的UUID也仍将被包含在每一个次要键中，将大幅增加索引大小，意味着增加内存占用。<br>所以，<strong>UUID不适合作为InnoDB表的主键</strong>，建议只是将UUID作为作为次要键，使用唯一约束。</p><p>不过乱序则是通过<strong>顺序的UUID</strong>来减少影响。</p><h3 id="什么是顺序的UUID"><a href="#什么是顺序的UUID" class="headerlink" title="什么是顺序的UUID"></a>什么是顺序的UUID</h3><p>顺序的UUID，AKA<strong>按时间排序的UUID</strong>、<strong>单调递增的UUID</strong>，是<a href="https://tools.ietf.org/html/rfc4122#section-4.2">RFC 4122 Version 1 UUID</a>的变种，在<a href="https://tools.ietf.org/html/draft-peabody-dispatch-new-uuid-format-00">RFC 4122 Version 6草稿</a>被提出。需注意的是该草稿并未通过，所以不能直接将其称为<code>Version 6</code>，并且在获取社区支持上可能不如官方标准。</p><p>顺序的UUID相对于<code>Version 1</code>加上了一个特性：新生成的值总是大于已生成的值。<br>这个特性可以减少插入UUID和重新编排索引的IO开销。</p><div class="custom-quote warning"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 8V13"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 15.99V16.01"></path></svg></span><p class="custom-quote-title">注意</p><p>即便如此，顺序UUID的长度并未变化，意味着它仍不适合作为InnoDB表的主键。</p></div><h3 id="如何生成顺序的UUID"><a href="#如何生成顺序的UUID" class="headerlink" title="如何生成顺序的UUID"></a>如何生成顺序的UUID</h3><p>这里推荐使用10k star的组件<a href="https://github.com/ramsey/uuid">ramsey/uuid</a>, 里面已实现了<strong>按时间排序的UUID</strong>。</p><h4 id="引入组件"><a href="#引入组件" class="headerlink" title="引入组件"></a>引入组件</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php">composer <span class="token keyword">require</span> ramsey<span class="token operator">/</span>uuid<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="快速生成"><a href="#快速生成" class="headerlink" title="快速生成"></a>快速生成</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">use</span> <span class="token package">Ramsey<span class="token punctuation">\</span>Uuid<span class="token punctuation">\</span>Uuid</span><span class="token punctuation">;</span><span class="token variable">$uuid</span> <span class="token operator">=</span> <span class="token class-name static-context">Uuid</span><span class="token operator">::</span><span class="token function">uuid6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$uuid</span><span class="token operator">-></span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 36位字符串</span><span class="token variable">$uuid</span><span class="token operator">-></span><span class="token function">getByte</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 16位字节型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="custom-quote warning"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 8V13"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 15.99V16.01"></path></svg></span><p class="custom-quote-title">注意</p><p>虽然组件文档很严谨将<strong>按时间排序的UUID</strong>归为非官方标准，但组件中还是沿用了草稿的<code>version 6</code>命名，所以本文具有时效性，如果RFC标准发生更新了，请以组件文档为主。</p></div><h4 id="生成流程解析"><a href="#生成流程解析" class="headerlink" title="生成流程解析"></a>生成流程解析</h4><p>这里以<code>4.0.1</code>版本为例(为便于阅读进行了重排版)作简单的解析。<br>组件遵循<code>RFC 4122</code>以及草稿的规范，<code>uuid6()</code>也是<code>uuid()</code>的变种，也是接收节点<code>$node</code>与时钟序列<code>$clockSeq</code>两个参数。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">uuid6</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token class-name type-declaration">Hexadecimal</span> <span class="token variable">$node</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token keyword type-hint">int</span> <span class="token variable">$clockSeq</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">UuidInterface</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token function">getFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">uuid6</span><span class="token punctuation">(</span><span class="token variable">$node</span><span class="token punctuation">,</span> <span class="token variable">$clockSeq</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这两个参数最后在<code>vendor/ramsey/uuid/src/Generator/DefaultTimeGenerator.php</code>中使用</p><details class="custom-details"><summary>Click to see more</summary><p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token variable">$node</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token keyword type-hint">int</span> <span class="token variable">$clockSeq</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$node</span> <span class="token keyword">instanceof</span> <span class="token class-name">Hexadecimal</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$node</span> <span class="token operator">=</span> <span class="token variable">$node</span><span class="token operator">-></span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$node</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getValidNode</span><span class="token punctuation">(</span><span class="token variable">$node</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$clockSeq</span> <span class="token operator">===</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// This does not use "stable storage"; see RFC 4122, Section 4.2.1.1.</span>            <span class="token variable">$clockSeq</span> <span class="token operator">=</span> <span class="token function">random_int</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0x3fff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> <span class="token variable">$exception</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RandomSourceException</span><span class="token punctuation">(</span>                <span class="token variable">$exception</span><span class="token operator">-></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$exception</span><span class="token operator">-></span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token variable">$exception</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$time</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">timeProvider</span><span class="token operator">-></span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$uuidTime</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">timeConverter</span><span class="token operator">-></span><span class="token function">calculateTime</span><span class="token punctuation">(</span>        <span class="token variable">$time</span><span class="token operator">-></span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token variable">$time</span><span class="token operator">-></span><span class="token function">getMicroseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$timeHex</span> <span class="token operator">=</span> <span class="token function">str_pad</span><span class="token punctuation">(</span><span class="token variable">$uuidTime</span><span class="token operator">-></span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'0'</span><span class="token punctuation">,</span> <span class="token constant">STR_PAD_LEFT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$timeHex</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TimeSourceException</span><span class="token punctuation">(</span><span class="token function">sprintf</span><span class="token punctuation">(</span>            <span class="token string single-quoted-string">'The generated time of \'%s\' is larger than expected'</span><span class="token punctuation">,</span>            <span class="token variable">$timeHex</span>        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$timeBytes</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token function">hex2bin</span><span class="token punctuation">(</span><span class="token variable">$timeHex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$timeBytes</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token variable">$timeBytes</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token variable">$timeBytes</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token variable">$timeBytes</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>        <span class="token operator">.</span> <span class="token variable">$timeBytes</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token variable">$timeBytes</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>        <span class="token operator">.</span> <span class="token variable">$timeBytes</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token variable">$timeBytes</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token operator">.</span> <span class="token function">pack</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'n*'</span><span class="token punctuation">,</span> <span class="token variable">$clockSeq</span><span class="token punctuation">)</span>        <span class="token operator">.</span> <span class="token variable">$node</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * Uses the node provider given when constructing this instance to get * the node ID (usually a MAC address) * * @param string|int|null $node A node value that may be used to override the node provider * * @return string 6-byte binary string representation of the node * * @throws InvalidArgumentException */</span><span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">getValidNode</span><span class="token punctuation">(</span><span class="token variable">$node</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$node</span> <span class="token operator">===</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$node</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">nodeProvider</span><span class="token operator">-></span><span class="token function">getNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// Convert the node to hex, if it is still an integer.</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_int</span><span class="token punctuation">(</span><span class="token variable">$node</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$node</span> <span class="token operator">=</span> <span class="token function">dechex</span><span class="token punctuation">(</span><span class="token variable">$node</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">ctype_xdigit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$node</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">strlen</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$node</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidArgumentException</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Invalid node value'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token function">hex2bin</span><span class="token punctuation">(</span><span class="token function">str_pad</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$node</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'0'</span><span class="token punctuation">,</span> <span class="token constant">STR_PAD_LEFT</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></details><p>如果<code>$clockSeq</code>为null，则默认使用一个0~16383范围内的随机数。</p><div class="custom-quote warning"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 8V13"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 15.99V16.01"></path></svg></span><p class="custom-quote-title">注意</p><p>对于默认的时钟序列，组件未遵循RFC标准的稳定存储，因为这部分需要额外的数据存储。如果你的节点在每微秒都有很高的生成频率，就需要自行维护。目前组件支持相同节点在每微秒生成16384个不重复的UUID，目前地球上应该还没出现这个频率以上的场景。</p></div><p>如果<code>$node</code>为null，将调用默认的<code>nodeProvider</code>获取。<br>而<code>vendor/ramsey/uuid/src/FeatureSet.php</code>中定义了所有默认特性，默认的<code>nodeProvider</code>为<code>FallbackNodeProvider</code>, 其实是一个集合，将按顺序尝试获取。其中集合中的<code>SystemNodeProvider</code>是获取系统的MAC地址，<code>RandomNodeProvider</code>是使用随机数。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">/** * Returns a node provider configured for this environment */</span><span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">buildNodeProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">NodeProviderInterface</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">ignoreSystemNode</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RandomNodeProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FallbackNodeProvider</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">NodeProviderCollection</span><span class="token punctuation">(</span><span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">SystemNodeProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">RandomNodeProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="custom-quote warning"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 8V13"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 15.99V16.01"></path></svg></span><p class="custom-quote-title">注意</p><p>如果你的分布式项目运行在Docker容器中，要注意：如果没有启动参数，按照Docker的默认分配机制，会导致每个PHP容器的MAC地址一致，而此组件默认使用MAC地址，所以最终导致节点一致，提高UUID的重复几率。</p></div><h3 id="Refrences"><a href="#Refrences" class="headerlink" title="Refrences"></a>Refrences</h3><p>[0] <a href="https://tools.ietf.org/html/rfc412">RFC 4122</a><br>[1] <a href="https://www.percona.com/blog/2014/12/19/store-uuid-optimized-way">Storing UUID Values in MySQL</a><br>[2] <a href="https://uuid.ramsey.dev/en/4.0.1/index.html">ramsey/uuid doc</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;分布式系统的数据库都离不开UUID。在&lt;a href=&quot;https://tools.ietf.org/html/rfc412&quot;&gt;RFC 4122&lt;/a&gt;标准中各版本的UUID都有存在一些缺点，简单概括就是长而乱序。其中乱序则是通过&lt;strong&gt;顺序的UUID&lt;/strong&gt;来减少影响。&lt;/p&gt;
&lt;p&gt;本文介绍什么是顺序的UUID，以及如何在PHP中生成。&lt;/p&gt;</summary>
    
    
    
    <category term="php" scheme="https://cloudycity.me/categories/php/"/>
    
    
    <category term="mysql" scheme="https://cloudycity.me/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>ElementUI Tree组件实现完美的联动选择</title>
    <link href="https://cloudycity.me/post/ElementUI-Tree%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%AE%8C%E7%BE%8E%E7%9A%84%E8%81%94%E5%8A%A8%E9%80%89%E6%8B%A9.html"/>
    <id>https://cloudycity.me/post/ElementUI-Tree%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%AE%8C%E7%BE%8E%E7%9A%84%E8%81%94%E5%8A%A8%E9%80%89%E6%8B%A9.html</id>
    <published>2021-01-07T06:24:56.000Z</published>
    <updated>2021-06-21T10:35:56.783Z</updated>
    
    <content type="html"><![CDATA[<p>Element Tree组件默认支持【联动选择】，但是无法【只选中父项，不选任何子项】，这里介绍如何实现完美的联动选择。</p><span id="more"></span><h4 id="关闭自带的【联动选择-】特性"><a href="#关闭自带的【联动选择-】特性" class="headerlink" title="关闭自带的【联动选择 】特性"></a>关闭自带的【联动选择 】特性</h4><p>ElTree的<code>check-strictly</code>属性默认为<code>false</code>，至少一个子项被勾选时，父项会进入半选中/选中状态。<br><a href="https://imgchr.com/i/semMqO"><img src="https://s3.ax1x.com/2021/01/07/semMqO.gif" alt="semMqO.gif" border="0" /></a></p><p>改为<code>true</code>即可实现【只选中父项，不选任何子项】，后面自行实现联动。<br><a href="https://imgchr.com/i/semCrT"><img src="https://s3.ax1x.com/2021/01/07/semCrT.gif" alt="semCrT.gif" border="0" /></a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>授权<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tree</span>    <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>permissionTree<span class="token punctuation">"</span></span>    <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>permissionTree<span class="token punctuation">"</span></span>    <span class="token attr-name">:props</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treeProps<span class="token punctuation">"</span></span>    <span class="token attr-name">:default-checked-keys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkedIds<span class="token punctuation">"</span></span>    <span class="token attr-name">node-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span>    <span class="token attr-name">:expand-on-click-node</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>    <span class="token attr-name">default-expand-all</span>    <span class="token attr-name">check-on-click-node</span>    <span class="token attr-name">check-strictly</span>    <span class="token attr-name">show-checkbox</span>  <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="监听check事件实现【联动选择】"><a href="#监听check事件实现【联动选择】" class="headerlink" title="监听check事件实现【联动选择】"></a>监听check事件实现【联动选择】</h4><p><a href="https://imgchr.com/i/semBdg"><img src="https://s3.ax1x.com/2021/01/07/semBdg.gif" alt="semBdg.gif" border="0" /></a></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>授权<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tree</span>    <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>permissionTree<span class="token punctuation">"</span></span>    <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>permissionTree<span class="token punctuation">"</span></span>    <span class="token attr-name">:props</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treeProps<span class="token punctuation">"</span></span>    <span class="token attr-name">:default-checked-keys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkedIds<span class="token punctuation">"</span></span>    <span class="token attr-name">node-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span>    <span class="token attr-name">:expand-on-click-node</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>    <span class="token attr-name">default-expand-all</span>    <span class="token attr-name">check-on-click-node</span>    <span class="token attr-name">check-strictly</span>    <span class="token attr-name">show-checkbox</span>    <span class="token attr-name">@check</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleCheckNode<span class="token punctuation">"</span></span>  <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">handleCheckNode</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>permissionTree<span class="token punctuation">.</span><span class="token function">getCheckedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkParentNode</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 勾选父项</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkChildrenNode</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 全选子项</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkChildrenNode</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 所有子项反选</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">checkChildrenNode</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> isChecked</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>permissionTree<span class="token punctuation">.</span><span class="token function">setChecked</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>id<span class="token punctuation">,</span> isChecked<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> obj<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkChildrenNode</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> isChecked<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">checkParentNode</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> node <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>permissionTree<span class="token punctuation">.</span><span class="token function">getNode</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>key <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>permissionTree<span class="token punctuation">.</span><span class="token function">setChecked</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>parent<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkParentNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="自由选择和关联选择共存"><a href="#自由选择和关联选择共存" class="headerlink" title="自由选择和关联选择共存"></a>自由选择和关联选择共存</h4><p>以权限树为例，在某些授权场景，用户希望只选中父项。经过第2步的处理已经能实现，但是体验较差(需要选择反选子项)。<br>这时候没有联动选择反而效率更高，所以【自由选择】和【关联选择】两个特性如果能共存，就能应对更多场景。</p><p>实现很简单，只需要将监听的事件改成<code>node-check</code>即可。点击节点是关联选择，点击勾选框是自由选择(即最原始的勾选框)。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>授权<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tree</span>    <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>permissionTree<span class="token punctuation">"</span></span>    <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>permissionTree<span class="token punctuation">"</span></span>    <span class="token attr-name">:props</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treeProps<span class="token punctuation">"</span></span>    <span class="token attr-name">:default-checked-keys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkedIds<span class="token punctuation">"</span></span>    <span class="token attr-name">node-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span>    <span class="token attr-name">:expand-on-click-node</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>    <span class="token attr-name">default-expand-all</span>    <span class="token attr-name">check-on-click-node</span>    <span class="token attr-name">check-strictly</span>    <span class="token attr-name">show-checkbox</span>    <span class="token attr-name">@node-check</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleCheckNode<span class="token punctuation">"</span></span>  <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://imgchr.com/i/seKkdS"><img src="https://s3.ax1x.com/2021/01/07/seKkdS.gif" alt="seKkdS.gif" border="0" /></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Element Tree组件默认支持【联动选择】，但是无法【只选中父项，不选任何子项】，这里介绍如何实现完美的联动选择。&lt;/p&gt;</summary>
    
    
    
    <category term="前端" scheme="https://cloudycity.me/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://cloudycity.me/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Laravel8 实现消息通知</title>
    <link href="https://cloudycity.me/post/Laravel8-%E5%AE%9E%E7%8E%B0%E6%B6%88%E6%81%AF%E9%80%9A%E7%9F%A5.html"/>
    <id>https://cloudycity.me/post/Laravel8-%E5%AE%9E%E7%8E%B0%E6%B6%88%E6%81%AF%E9%80%9A%E7%9F%A5.html</id>
    <published>2020-11-04T03:29:16.000Z</published>
    <updated>2021-06-21T10:35:56.783Z</updated>
    
    <content type="html"><![CDATA[<p>Laravel从5.3起，提供了<strong>广播</strong>、<strong>通知</strong>两个模块，可以很方便的实现消息通知。这里以<strong>评论回复通知</strong>为例进行介绍。</p><span id="more"></span><p>简单介绍下概念</p><ul><li>广播的对象是Socket客户端，通知的对象是根据渠道而定。可选的通知渠道有广播、短信、邮件、数据库或自定义渠道。</li><li>广播可以直接由事件触发或由通知触发，这里采用的是后者。</li></ul><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p><img src="https://user-images.githubusercontent.com/17662451/98322805-447e3c80-2023-11eb-9f98-997594111ba6.png" alt="image"></p><h3 id="Laravel部分"><a href="#Laravel部分" class="headerlink" title="Laravel部分"></a>Laravel部分</h3><h4 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Models<span class="token punctuation">\</span>Sys</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Models<span class="token punctuation">\</span>Model</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Notifications<span class="token punctuation">\</span>Notifiable</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span><span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">Notifiable</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'user'</span><span class="token punctuation">;</span>        <span class="token comment">/**     * 用户接收广播通知的通道.     *     * @return mixed     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">receivesBroadcastNotificationsOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string single-quoted-string">'user.'</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Models<span class="token punctuation">\</span>Common</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Models<span class="token punctuation">\</span>Model</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Models<span class="token punctuation">\</span>Sys<span class="token punctuation">\</span>User</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Database<span class="token punctuation">\</span>Eloquent<span class="token punctuation">\</span>Relations<span class="token punctuation">\</span>BelongsTo</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Database<span class="token punctuation">\</span>Eloquent<span class="token punctuation">\</span>Relations<span class="token punctuation">\</span>MorphTo</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Comment</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span><span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'comment'</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$fillable</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string single-quoted-string">'content'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'uid'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'commentable_id'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'commentable_type'</span>    <span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$with</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string single-quoted-string">'user'</span>    <span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">BelongsTo</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">belongsTo</span><span class="token punctuation">(</span><span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'uid'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">commentable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">MorphTo</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">morphTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="观察者"><a href="#观察者" class="headerlink" title="观察者"></a>观察者</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Observers</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Models<span class="token punctuation">\</span>Common<span class="token punctuation">\</span>Comment</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Notifications<span class="token punctuation">\</span>CommentCreated</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">CommentObserver</span> <span class="token keyword">extends</span> <span class="token class-name">Observer</span><span class="token punctuation">&#123;</span>    <span class="token comment">/**     * Handle the User "created" event.     *     * @param Comment $comment     * @return void     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">created</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Comment</span> <span class="token variable">$comment</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">event</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CommentCreated</span><span class="token punctuation">(</span><span class="token variable">$comment</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="注册观察者"><a href="#注册观察者" class="headerlink" title="注册观察者"></a>注册观察者</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Providers</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Models<span class="token punctuation">\</span>Common<span class="token punctuation">\</span>Comment</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Observers<span class="token punctuation">\</span>CommentObserver</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Support<span class="token punctuation">\</span>ServiceProvider</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">AppServiceProvider</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceProvider</span><span class="token punctuation">&#123;</span>    <span class="token comment">/**     * Register any application services.     *     * @return void     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">//</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Bootstrap any application services.     *     * @return void     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token class-name static-context">Comment</span><span class="token operator">::</span><span class="token function">observe</span><span class="token punctuation">(</span><span class="token class-name static-context">CommentObserver</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Events</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Models<span class="token punctuation">\</span>Common<span class="token punctuation">\</span>Comment</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Foundation<span class="token punctuation">\</span>Events<span class="token punctuation">\</span>Dispatchable</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Queue<span class="token punctuation">\</span>SerializesModels</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">CommentCreated</span><span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">Dispatchable</span><span class="token punctuation">,</span> SerializesModels<span class="token punctuation">;</span>    <span class="token comment">/**     * @var Comment     */</span>    <span class="token keyword">public</span> <span class="token variable">$comment</span><span class="token punctuation">;</span>    <span class="token comment">/**     * Create a new event instance.     *     * @param $comment     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$comment</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">comment</span> <span class="token operator">=</span> <span class="token variable">$comment</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="监听器"><a href="#监听器" class="headerlink" title="监听器"></a>监听器</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Listeners</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Events<span class="token punctuation">\</span>CommentCreated</span> <span class="token keyword">as</span> CommentCreatedEvent<span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Models<span class="token punctuation">\</span>Gs<span class="token punctuation">\</span>IssueLog</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Models<span class="token punctuation">\</span>Sys<span class="token punctuation">\</span>User</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Notifications<span class="token punctuation">\</span>CommentCreated</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">NotifyComment</span> <span class="token keyword">extends</span> <span class="token class-name">Listener</span><span class="token punctuation">&#123;</span>    <span class="token comment">/**     * Handle the notification.     *     * @param CommentCreatedEvent $event     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name type-declaration">CommentCreatedEvent</span> <span class="token variable">$event</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">// 相关用户</span>        <span class="token variable">$users</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$event</span><span class="token operator">-></span><span class="token property">comment</span><span class="token operator">-></span><span class="token property">commentable</span> <span class="token keyword">instanceof</span> <span class="token class-name">IssueLog</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 工单跟进者</span>            <span class="token variable">$user</span><span class="token punctuation">[</span><span class="token variable">$event</span><span class="token operator">-></span><span class="token property">comment</span><span class="token operator">-></span><span class="token property">commentable</span><span class="token operator">-></span><span class="token property">user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$event</span><span class="token operator">-></span><span class="token property">comment</span><span class="token operator">-></span><span class="token property">commentable</span><span class="token operator">-></span><span class="token property">user</span><span class="token punctuation">;</span>            <span class="token comment">// 工单创建者</span>            <span class="token variable">$user</span><span class="token punctuation">[</span><span class="token variable">$event</span><span class="token operator">-></span><span class="token property">comment</span><span class="token operator">-></span><span class="token property">commentable</span><span class="token operator">-></span><span class="token property">creator</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$event</span><span class="token operator">-></span><span class="token property">comment</span><span class="token operator">-></span><span class="token property">commentable</span><span class="token operator">-></span><span class="token property">creator</span><span class="token punctuation">;</span>            <span class="token comment">// 工单报表评论者</span>            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$event</span><span class="token operator">-></span><span class="token property">comment</span><span class="token operator">-></span><span class="token property">commentable</span><span class="token operator">-></span><span class="token property">comments</span> <span class="token keyword">as</span> <span class="token variable">$cmt</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$users</span><span class="token punctuation">[</span><span class="token variable">$cmt</span><span class="token operator">-></span><span class="token property">user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$users</span><span class="token punctuation">[</span><span class="token variable">$cmt</span><span class="token operator">-></span><span class="token property">user</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token variable">$cmt</span><span class="token operator">-></span><span class="token property">user</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 发送通知</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$users</span> <span class="token keyword">as</span> <span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">/** @var User $user */</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-></span><span class="token property">id</span> <span class="token operator">!=</span> <span class="token variable">$event</span><span class="token operator">-></span><span class="token property">comment</span><span class="token operator">-></span><span class="token property">uid</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$user</span><span class="token operator">-></span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CommentCreated</span><span class="token punctuation">(</span><span class="token variable">$event</span><span class="token operator">-></span><span class="token property">comment</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="custom-quote tip"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06"></path><path stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M11.99 18H12.01"></path></svg></span><p class="custom-quote-title">提示</p><p>Laravel从5.8.9开始支持事件发现，无需手动注册事件及对应监听器。</p></div><h4 id="通知"><a href="#通知" class="headerlink" title="通知"></a>通知</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Notifications</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Bus<span class="token punctuation">\</span>Queueable</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Contracts<span class="token punctuation">\</span>Queue<span class="token punctuation">\</span>ShouldQueue</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Models<span class="token punctuation">\</span>Common<span class="token punctuation">\</span>Comment</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package"><span class="token punctuation">\</span>Illuminate<span class="token punctuation">\</span>Notifications<span class="token punctuation">\</span>Notification</span><span class="token keyword">class</span> <span class="token class-name">CommentCreated</span> <span class="token keyword">extends</span> <span class="token class-name">BaseNotification</span> <span class="token keyword">implements</span> <span class="token class-name">ShouldQueue</span><span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">Queueable</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$comment</span><span class="token punctuation">;</span>    <span class="token comment">/**     * Get the notification's delivery channels.     *     * @return array     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">via</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'broadcast'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'database'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Create a new notification instance.     *     * @param Comment $comment     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Comment</span> <span class="token variable">$comment</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">comment</span> <span class="token operator">=</span> <span class="token variable">$comment</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Get the array representation of the notification.     *     * @return array     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">[</span>            <span class="token string single-quoted-string">'commentable'</span> <span class="token operator">=></span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">comment</span><span class="token operator">-></span><span class="token property">commentable</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'commentable_type'</span> <span class="token operator">=></span> <span class="token function">get_class</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">comment</span><span class="token operator">-></span><span class="token property">commentable</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'comment'</span> <span class="token operator">=></span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">comment</span>        <span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="NodeJS部分"><a href="#NodeJS部分" class="headerlink" title="NodeJS部分"></a>NodeJS部分</h3><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><pre class="line-numbers language-none"><code class="language-none">npm i laravel-echo laravel-echo-server pm2 socket.io-client<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="启动Larvel-Echo-Server"><a href="#启动Larvel-Echo-Server" class="headerlink" title="启动Larvel Echo Server"></a>启动Larvel Echo Server</h4><h5 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h5><p>queue-listen.sh</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/usr/bin/env bash</span>php artisan queue:listen --tries<span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>socket.sh</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/usr/bin/env bash</span>node_modules/laravel-echo-server/bin/server.js  start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="使用PM2调度"><a href="#使用PM2调度" class="headerlink" title="使用PM2调度"></a>使用PM2调度</h4><pre class="line-numbers language-none"><code class="language-none">node_modules&#x2F;pm2&#x2F;bin&#x2F;pm2 start queue-listen.shnode_modules&#x2F;pm2&#x2F;bin&#x2F;pm2 start socket.shnode_modules&#x2F;pm2&#x2F;bin&#x2F;pm2 monit # 监控进程输出，便于开发调试# 后续调度可使用stop&#x2F;start&#x2F;restart all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><div class="custom-quote tip"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06"></path><path stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M11.99 18H12.01"></path></svg></span><p class="custom-quote-title">提示</p><p>你可以使用Supervisor代替PM2。</p></div><div class="custom-quote warning"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 8V13"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 15.99V16.01"></path></svg></span><p class="custom-quote-title">注意</p><p>PM2启动的进程与用户关联，使用同一个户进行操作，避免重复启动</p></div><h4 id="Laravel-Echo监听通知"><a href="#Laravel-Echo监听通知" class="headerlink" title="Laravel Echo监听通知"></a>Laravel Echo监听通知</h4><h5 id="全局变量声明"><a href="#全局变量声明" class="headerlink" title="全局变量声明"></a>全局变量声明</h5><p>resources/js/bootstrap.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * Echo exposes an expressive API for subscribing to channels and listening * for events that are broadcast by Laravel. Echo and event broadcasting * allows your team to easily build robust real-time web applications. */</span><span class="token keyword">import</span> Echo <span class="token keyword">from</span> <span class="token string">'laravel-echo'</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>io <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'socket.io-client'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>Echo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Echo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    broadcaster<span class="token operator">:</span> <span class="token string">'socket.io'</span><span class="token punctuation">,</span>    host<span class="token operator">:</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hostname <span class="token operator">+</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MIX_APP_ENV</span> <span class="token operator">===</span> <span class="token string">'local'</span> <span class="token operator">?</span> <span class="token string">':6001'</span> <span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    auth<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="启动监听"><a href="#启动监听" class="headerlink" title="启动监听"></a>启动监听</h4><p>主视图</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>    Echo<span class="token punctuation">.</span><span class="token function">private</span><span class="token punctuation">(</span><span class="token string">'user.'</span> <span class="token operator">+</span> uid<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">notification</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token comment">// do something</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;Laravel从5.3起，提供了&lt;strong&gt;广播&lt;/strong&gt;、&lt;strong&gt;通知&lt;/strong&gt;两个模块，可以很方便的实现消息通知。这里以&lt;strong&gt;评论回复通知&lt;/strong&gt;为例进行介绍。&lt;/p&gt;</summary>
    
    
    
    <category term="php" scheme="https://cloudycity.me/categories/php/"/>
    
    
    <category term="laravel" scheme="https://cloudycity.me/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>使用Laravel-Mix构建Asset</title>
    <link href="https://cloudycity.me/post/%E4%BD%BF%E7%94%A8Laravel-Mix%E6%9E%84%E5%BB%BAAsset.html"/>
    <id>https://cloudycity.me/post/%E4%BD%BF%E7%94%A8Laravel-Mix%E6%9E%84%E5%BB%BAAsset.html</id>
    <published>2020-11-03T10:31:58.000Z</published>
    <updated>2021-06-21T10:35:56.784Z</updated>
    
    <content type="html"><![CDATA[<p>公司几个后台老项目的asset都没有构建方案，直接放到版本控制仓库里，臃肿凌乱，加载速度也堪忧。<br>最近开发一个新后台，决定改用<a href="https://laravel-mix.com/">laravel-mix</a>构建asset。</p><span id="more"></span><h3 id="改造前的文件结构-Git"><a href="#改造前的文件结构-Git" class="headerlink" title="改造前的文件结构(Git)"></a>改造前的文件结构(Git)</h3><details class="custom-details"><summary>Click to see more</summary><p><pre class="line-numbers language-none"><code class="language-none">├── public│   ├── asset│   │   ├── adminlte│   │   │   ├── css│   │   │   │   ├── adminlte.min.css│   │   │   │   ├── adminlte.min.css.map│   │   │   │   └── alt│   │   │   │       ├── adminlte.components.min.css│   │   │   │       ├── adminlte.components.min.css.map│   │   │   │       ├── adminlte.core.min.css│   │   │   │       ├── adminlte.core.min.css.map│   │   │   │       ├── adminlte.extra-components.min.css│   │   │   │       ├── adminlte.extra-components.min.css.map│   │   │   │       ├── adminlte.pages.min.css│   │   │   │       ├── adminlte.pages.min.css.map│   │   │   │       ├── adminlte.plugins.min.css│   │   │   │       └── adminlte.plugins.min.css.map│   │   │   ├── img│   │   │   │   └── AdminLTELogo.png│   │   │   ├── js│   │   │   │   ├── adminlte.min.js│   │   │   │   ├── adminlte.min.js.map│   │   │   │   └── customize.js│   │   │   └── plugins│   │   │       ├── bootstrap│   │   │       │   ├── css│   │   │       │   │   ├── bootstrap.min.css│   │   │       │   │   └── bootstrap.min.css.map│   │   │       │   └── js│   │   │       │       ├── bootstrap.bundle.min.js│   │   │       │       ├── bootstrap.bundle.min.js.map│   │   │       │       ├── bootstrap.min.js│   │   │       │       └── bootstrap.min.js.map│   │   │       ├── bootstrap-iconpicker│   │   │       │   ├── css│   │   │       │   │   └── bootstrap-iconpicker.min.css│   │   │       │   └── js│   │   │       │       └── bootstrap-iconpicker.bundle.min.js│   │   │       ├── bootstrap-treeview│   │   │       │   ├── css│   │   │       │   │   └── bootstrap-treeview.min.css│   │   │       │   └── js│   │   │       │       └── bootstrap-treeview.min.js│   │   │       ├── datatables│   │   │       │   ├── css│   │   │       │   │   ├── dataTables.bootstrap4.min.css│   │   │       │   │   └── select.bootstrap.min.css│   │   │       │   ├── extensions│   │   │       │   │   ├── datatables-fixedcolumns│   │   │       │   │   │   ├── css│   │   │       │   │   │   │   └── fixedColumns.bootstrap4.min.css│   │   │       │   │   │   └── js│   │   │       │   │   │       ├── dataTables.fixedColumns.min.js│   │   │       │   │   │       └── fixedColumns.bootstrap4.min.js│   │   │       │   │   ├── datatables-fixedheader│   │   │       │   │   │   ├── css│   │   │       │   │   │   │   └── fixedHeader.bootstrap4.min.css│   │   │       │   │   │   └── js│   │   │       │   │   │       ├── dataTables.fixedHeader.min.js│   │   │       │   │   │       └── fixedHeader.bootstrap4.min.js│   │   │       │   │   └── datatables-responsive│   │   │       │   │       ├── css│   │   │       │   │       │   └── responsive.bootstrap4.min.css│   │   │       │   │       └── js│   │   │       │   │           ├── dataTables.responsive.min.js│   │   │       │   │           └── responsive.bootstrap4.min.js│   │   │       │   └── js│   │   │       │       ├── dataTables.bootstrap4.min.js│   │   │       │       └── jquery.dataTables.min.js│   │   │       ├── daterangepicker│   │   │       │   ├── css│   │   │       │   │   └── daterangepicker.min.css│   │   │       │   └── js│   │   │       │       └── daterangepicker.min.js│   │   │       ├── datetimepicker│   │   │       │   ├── css│   │   │       │   │   └── bootstrap-datetimepicker.min.css│   │   │       │   └── js│   │   │       │       └── bootstrap-datetimepicker.min.js│   │   │       ├── distpicker│   │   │       │   └── distpicker.min.js│   │   │       ├── echarts│   │   │       │   └── echarts.min.js│   │   │       ├── fontawesome-free│   │   │       │   ├── css│   │   │       │   │   └── all.min.css│   │   │       │   ├── js│   │   │       │   │   └── all.min.js│   │   │       │   ├── sprites│   │   │       │   │   ├── brands.svg│   │   │       │   │   ├── regular.svg│   │   │       │   │   └── solid.svg│   │   │       │   └── webfonts│   │   │       │       ├── fa-brands-400.eot│   │   │       │       ├── fa-brands-400.svg│   │   │       │       ├── fa-brands-400.ttf│   │   │       │       ├── fa-brands-400.woff│   │   │       │       ├── fa-brands-400.woff2│   │   │       │       ├── fa-regular-400.eot│   │   │       │       ├── fa-regular-400.svg│   │   │       │       ├── fa-regular-400.ttf│   │   │       │       ├── fa-regular-400.woff│   │   │       │       ├── fa-regular-400.woff2│   │   │       │       ├── fa-solid-900.eot│   │   │       │       ├── fa-solid-900.svg│   │   │       │       ├── fa-solid-900.ttf│   │   │       │       ├── fa-solid-900.woff│   │   │       │       └── fa-solid-900.woff2│   │   │       ├── icheck│   │   │       │   ├── css│   │   │       │   │   ├── all.css│   │   │       │   │   ├── flat│   │   │       │   │   │   ├── _all.css│   │   │       │   │   │   ├── aero.css│   │   │       │   │   │   ├── aero.png│   │   │       │   │   │   ├── aero@2x.png│   │   │       │   │   │   ├── blue.css│   │   │       │   │   │   ├── blue.png│   │   │       │   │   │   ├── blue@2x.png│   │   │       │   │   │   ├── flat.css│   │   │       │   │   │   ├── flat.png│   │   │       │   │   │   ├── flat@2x.png│   │   │       │   │   │   ├── green.css│   │   │       │   │   │   ├── green.png│   │   │       │   │   │   ├── green@2x.png│   │   │       │   │   │   ├── grey.css│   │   │       │   │   │   ├── grey.png│   │   │       │   │   │   ├── grey@2x.png│   │   │       │   │   │   ├── orange.css│   │   │       │   │   │   ├── orange.png│   │   │       │   │   │   ├── orange@2x.png│   │   │       │   │   │   ├── pink.css│   │   │       │   │   │   ├── pink.png│   │   │       │   │   │   ├── pink@2x.png│   │   │       │   │   │   ├── purple.css│   │   │       │   │   │   ├── purple.png│   │   │       │   │   │   ├── purple@2x.png│   │   │       │   │   │   ├── red.css│   │   │       │   │   │   ├── red.png│   │   │       │   │   │   ├── red@2x.png│   │   │       │   │   │   ├── yellow.css│   │   │       │   │   │   ├── yellow.png│   │   │       │   │   │   └── yellow@2x.png│   │   │       │   │   ├── futurico│   │   │       │   │   │   ├── futurico.css│   │   │       │   │   │   ├── futurico.png│   │   │       │   │   │   └── futurico@2x.png│   │   │       │   │   ├── line│   │   │       │   │   │   ├── _all.css│   │   │       │   │   │   ├── aero.css│   │   │       │   │   │   ├── blue.css│   │   │       │   │   │   ├── green.css│   │   │       │   │   │   ├── grey.css│   │   │       │   │   │   ├── line.css│   │   │       │   │   │   ├── line.png│   │   │       │   │   │   ├── line@2x.png│   │   │       │   │   │   ├── orange.css│   │   │       │   │   │   ├── pink.css│   │   │       │   │   │   ├── purple.css│   │   │       │   │   │   ├── red.css│   │   │       │   │   │   └── yellow.css│   │   │       │   │   ├── minimal│   │   │       │   │   │   ├── _all.css│   │   │       │   │   │   ├── aero.css│   │   │       │   │   │   ├── aero.png│   │   │       │   │   │   ├── aero@2x.png│   │   │       │   │   │   ├── blue.css│   │   │       │   │   │   ├── blue.png│   │   │       │   │   │   ├── blue@2x.png│   │   │       │   │   │   ├── green.css│   │   │       │   │   │   ├── green.png│   │   │       │   │   │   ├── green@2x.png│   │   │       │   │   │   ├── grey.css│   │   │       │   │   │   ├── grey.png│   │   │       │   │   │   ├── grey@2x.png│   │   │       │   │   │   ├── minimal.css│   │   │       │   │   │   ├── minimal.png│   │   │       │   │   │   ├── minimal@2x.png│   │   │       │   │   │   ├── orange.css│   │   │       │   │   │   ├── orange.png│   │   │       │   │   │   ├── orange@2x.png│   │   │       │   │   │   ├── pink.css│   │   │       │   │   │   ├── pink.png│   │   │       │   │   │   ├── pink@2x.png│   │   │       │   │   │   ├── purple.css│   │   │       │   │   │   ├── purple.png│   │   │       │   │   │   ├── purple@2x.png│   │   │       │   │   │   ├── red.css│   │   │       │   │   │   ├── red.png│   │   │       │   │   │   ├── red@2x.png│   │   │       │   │   │   ├── yellow.css│   │   │       │   │   │   ├── yellow.png│   │   │       │   │   │   └── yellow@2x.png│   │   │       │   │   ├── polaris│   │   │       │   │   │   ├── polaris.css│   │   │       │   │   │   ├── polaris.png│   │   │       │   │   │   └── polaris@2x.png│   │   │       │   │   └── square│   │   │       │   │       ├── _all.css│   │   │       │   │       ├── aero.css│   │   │       │   │       ├── aero.png│   │   │       │   │       ├── aero@2x.png│   │   │       │   │       ├── blue.css│   │   │       │   │       ├── blue.png│   │   │       │   │       ├── blue@2x.png│   │   │       │   │       ├── green.css│   │   │       │   │       ├── green.png│   │   │       │   │       ├── green@2x.png│   │   │       │   │       ├── grey.css│   │   │       │   │       ├── grey.png│   │   │       │   │       ├── grey@2x.png│   │   │       │   │       ├── orange.css│   │   │       │   │       ├── orange.png│   │   │       │   │       ├── orange@2x.png│   │   │       │   │       ├── pink.css│   │   │       │   │       ├── pink.png│   │   │       │   │       ├── pink@2x.png│   │   │       │   │       ├── purple.css│   │   │       │   │       ├── purple.png│   │   │       │   │       ├── purple@2x.png│   │   │       │   │       ├── red.css│   │   │       │   │       ├── red.png│   │   │       │   │       ├── red@2x.png│   │   │       │   │       ├── square.css│   │   │       │   │       ├── square.png│   │   │       │   │       ├── square@2x.png│   │   │       │   │       ├── yellow.css│   │   │       │   │       ├── yellow.png│   │   │       │   │       └── yellow@2x.png│   │   │       │   └── js│   │   │       │       └── icheck.min.js│   │   │       ├── ionicons│   │   │       │   └── icon.min.css│   │   │       ├── jquery│   │   │       │   └── jquery.min.js│   │   │       ├── jquery-validation│   │   │       │   ├── additional-methods.min.js│   │   │       │   ├── jquery.validate.min.js│   │   │       │   └── locazation│   │   │       │       └── messages_zh.min.js│   │   │       ├── jsonview│   │   │       │   ├── css│   │   │       │   │   └── jquery.jsonview.min.css│   │   │       │   └── js│   │   │       │       └── jquery.jsonview.min.js│   │   │       ├── layer│   │   │       │   ├── layer.js│   │   │       │   ├── mobile│   │   │       │   │   ├── layer.js│   │   │       │   │   └── need│   │   │       │   │       └── layer.css│   │   │       │   └── theme│   │   │       │       └── default│   │   │       │           ├── icon-ext.png│   │   │       │           ├── icon.png│   │   │       │           ├── layer.css│   │   │       │           ├── loading-0.gif│   │   │       │           ├── loading-1.gif│   │   │       │           └── loading-2.gif│   │   │       ├── layui│   │   │       │   ├── css│   │   │       │   │   ├── layui.css│   │   │       │   │   ├── layui.mobile.css│   │   │       │   │   └── modules│   │   │       │   │       ├── code.css│   │   │       │   │       ├── laydate│   │   │       │   │       │   └── default│   │   │       │   │       │       └── laydate.css│   │   │       │   │       └── layer│   │   │       │   │           └── default│   │   │       │   │               ├── icon-ext.png│   │   │       │   │               ├── icon.png│   │   │       │   │               ├── layer.css│   │   │       │   │               ├── loading-0.gif│   │   │       │   │               ├── loading-1.gif│   │   │       │   │               └── loading-2.gif│   │   │       │   ├── font│   │   │       │   │   ├── iconfont.eot│   │   │       │   │   ├── iconfont.svg│   │   │       │   │   ├── iconfont.ttf│   │   │       │   │   ├── iconfont.woff│   │   │       │   │   └── iconfont.woff2│   │   │       │   ├── lay│   │   │       │   │   └── modules│   │   │       │   │       ├── carousel.js│   │   │       │   │       ├── code.js│   │   │       │   │       ├── colorpicker.js│   │   │       │   │       ├── element.js│   │   │       │   │       ├── flow.js│   │   │       │   │       ├── form.js│   │   │       │   │       ├── jquery.js│   │   │       │   │       ├── laydate.js│   │   │       │   │       ├── layedit.js│   │   │       │   │       ├── layer.js│   │   │       │   │       ├── laypage.js│   │   │       │   │       ├── laytpl.js│   │   │       │   │       ├── mobile.js│   │   │       │   │       ├── rate.js│   │   │       │   │       ├── slider.js│   │   │       │   │       ├── table.js│   │   │       │   │       ├── transfer.js│   │   │       │   │       ├── tree.js│   │   │       │   │       ├── upload.js│   │   │       │   │       └── util.js│   │   │       │   ├── layui.all.js│   │   │       │   └── layui.js│   │   │       ├── moment│   │   │       │   ├── moment-with-locales.min.js│   │   │       │   └── moment.min.js│   │   │       ├── overlayScrollbars│   │   │       │   ├── css│   │   │       │   │   └── OverlayScrollbars.min.css│   │   │       │   └── js│   │   │       │       └── OverlayScrollbars.min.js│   │   │       ├── paste│   │   │       │   └── paste.min.js│   │   │       ├── select2│   │   │       │   ├── css│   │   │       │   │   ├── select2-bootstrap4.min.css│   │   │       │   │   └── select2.min.css│   │   │       │   └── js│   │   │       │       ├── i18n│   │   │       │       │   ├── build.txt│   │   │       │       │   ├── en.js│   │   │       │       │   ├── zh-CN.js│   │   │       │       │   └── zh-TW.js│   │   │       │       ├── select2.full.min.js│   │   │       │       └── select2.min.js│   │   │       ├── summernote│   │   │       │   ├── css│   │   │       │   │   └── summernote-bs4.min.css│   │   │       │   ├── font│   │   │       │   │   ├── summernote.eot│   │   │       │   │   ├── summernote.ttf│   │   │       │   │   ├── summernote.woff│   │   │       │   │   └── summernote.woff2│   │   │       │   ├── js│   │   │       │   │   └── summernote-bs4.min.js│   │   │       │   └── lang│   │   │       │       └── summernote-zh-CN.min.js│   │   │       └── tempusdominus-bootstrap-4│   │   │           ├── css│   │   │           │   └── tempusdominus-bootstrap-4.min.css│   │   │           └── js│   │   │               └── tempusdominus-bootstrap-4.min.js│   │   └── common│   │       ├── css│   │       │   └── base.css│   │       ├── images│   │       │   ├── 401.gif│   │       │   ├── 404.png│   │       │   ├── 404_cloud.png│   │       │   ├── addpic.jpg│   │       │   ├── admineap.png│   │       │   ├── avatar.jpg│   │       │   └── btnclose.png│   │       └── js│   │           ├── base-form.js│   │           ├── base-modal.js│   │           ├── base-render.js│   │           ├── base.js│   │           └── dataTables.js│   ├── favicon.ico│   ├── index.php│   ├── robots.txt│   ├── storage -&gt; &#x2F;Users&#x2F;lyc&#x2F;Sites&#x2F;gsadmin.ggxx&#x2F;storage&#x2F;app&#x2F;public│   ├── vendor│   │   ├── horizon│   │   │   ├── app-dark.css│   │   │   ├── app.css│   │   │   ├── app.js│   │   │   ├── img│   │   │   │   ├── favicon.png│   │   │   │   ├── horizon.svg│   │   │   │   └── sprite.svg│   │   │   └── mix-manifest.json│   │   └── telescope│   │       ├── app-dark.css│   │       ├── app.css│   │       ├── app.js│   │       ├── favicon.ico│   │       └── mix-manifest.json│   └── web.config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></details><h3 id="改造后的文件结构-Git"><a href="#改造后的文件结构-Git" class="headerlink" title="改造后的文件结构(Git)"></a>改造后的文件结构(Git)</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">├──  public│   ├──  .htaccess│   ├──  favicon.ico│   ├──  favicon.ico│   ├──  index.php│   ├──  robots.txt│   ├──  web.config├── resources│   ├── js│   │   ├── app.js│   │   ├── bootstrap.js│   │   └── util.js│   ├── sass│   │   └── app.scss│   └── views├── package.json├── package-lock.json└── webpack.mix.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="改造过程"><a href="#改造过程" class="headerlink" title="改造过程"></a>改造过程</h3><h4 id="移除asset"><a href="#移除asset" class="headerlink" title="移除asset"></a>移除asset</h4><p>将public目录下的asset全部移出版本控制库，并在<code>.gitignore</code>中添加忽略。</p><h4 id="使用npm引入依赖"><a href="#使用npm引入依赖" class="headerlink" title="使用npm引入依赖"></a>使用npm引入依赖</h4><p>在<a href="https://www.npmjs.com/">npm仓库</a>中找到之前用到的所有组件，例如<code>admin-lte</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i admin-lte -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>整理后的package.json</p><details class="custom-details"><summary>Click to see more</summary><p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"private"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"dev"</span><span class="token operator">:</span> <span class="token string">"npm run development"</span><span class="token punctuation">,</span>        <span class="token property">"development"</span><span class="token operator">:</span> <span class="token string">"cross-env NODE_ENV=development node_modules/webpack/bin/webpack.js --progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js"</span><span class="token punctuation">,</span>        <span class="token property">"watch"</span><span class="token operator">:</span> <span class="token string">"npm run development -- --watch"</span><span class="token punctuation">,</span>        <span class="token property">"watch-poll"</span><span class="token operator">:</span> <span class="token string">"npm run watch -- --watch-poll"</span><span class="token punctuation">,</span>        <span class="token property">"hot"</span><span class="token operator">:</span> <span class="token string">"cross-env NODE_ENV=development node_modules/webpack-dev-server/bin/webpack-dev-server.js --inline --hot --disable-host-check --config=node_modules/laravel-mix/setup/webpack.config.js"</span><span class="token punctuation">,</span>        <span class="token property">"prod"</span><span class="token operator">:</span> <span class="token string">"npm run production"</span><span class="token punctuation">,</span>        <span class="token property">"production"</span><span class="token operator">:</span> <span class="token string">"cross-env NODE_ENV=production node_modules/webpack/bin/webpack.js --no-progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"@fortawesome/fontawesome-free"</span><span class="token operator">:</span> <span class="token string">"^5.15.1"</span><span class="token punctuation">,</span>        <span class="token property">"@ttskch/select2-bootstrap4-theme"</span><span class="token operator">:</span> <span class="token string">"^1.3.4"</span><span class="token punctuation">,</span>        <span class="token property">"admin-lte"</span><span class="token operator">:</span> <span class="token string">"^3.0.5"</span><span class="token punctuation">,</span>        <span class="token property">"axios"</span><span class="token operator">:</span> <span class="token string">"^0.19"</span><span class="token punctuation">,</span>        <span class="token property">"bootstrap"</span><span class="token operator">:</span> <span class="token string">"^4.5.3"</span><span class="token punctuation">,</span>        <span class="token property">"bootstrap-iconpicker-latest"</span><span class="token operator">:</span> <span class="token string">"^1.12.0"</span><span class="token punctuation">,</span>        <span class="token property">"bower"</span><span class="token operator">:</span> <span class="token string">"^1.8.8"</span><span class="token punctuation">,</span>        <span class="token property">"browser-sync"</span><span class="token operator">:</span> <span class="token string">"^2.26.12"</span><span class="token punctuation">,</span>        <span class="token property">"browser-sync-webpack-plugin"</span><span class="token operator">:</span> <span class="token string">"^2.0.1"</span><span class="token punctuation">,</span>        <span class="token property">"cross-env"</span><span class="token operator">:</span> <span class="token string">"^7.0"</span><span class="token punctuation">,</span>        <span class="token property">"datatables.net"</span><span class="token operator">:</span> <span class="token string">"^1.10.22"</span><span class="token punctuation">,</span>        <span class="token property">"datatables.net-bs4"</span><span class="token operator">:</span> <span class="token string">"^1.10.22"</span><span class="token punctuation">,</span>        <span class="token property">"datatables.net-buttons"</span><span class="token operator">:</span> <span class="token string">"^1.6.5"</span><span class="token punctuation">,</span>        <span class="token property">"datatables.net-buttons-bs4"</span><span class="token operator">:</span> <span class="token string">"^1.6.5"</span><span class="token punctuation">,</span>        <span class="token property">"datatables.net-fixedcolumns"</span><span class="token operator">:</span> <span class="token string">"^3.3.2"</span><span class="token punctuation">,</span>        <span class="token property">"datatables.net-fixedcolumns-bs4"</span><span class="token operator">:</span> <span class="token string">"^3.3.2"</span><span class="token punctuation">,</span>        <span class="token property">"datatables.net-fixedheader"</span><span class="token operator">:</span> <span class="token string">"^3.1.7"</span><span class="token punctuation">,</span>        <span class="token property">"datatables.net-fixedheader-bs4"</span><span class="token operator">:</span> <span class="token string">"^3.1.7"</span><span class="token punctuation">,</span>        <span class="token property">"datatables.net-responsive"</span><span class="token operator">:</span> <span class="token string">"^2.2.6"</span><span class="token punctuation">,</span>        <span class="token property">"datatables.net-responsive-bs4"</span><span class="token operator">:</span> <span class="token string">"^2.2.6"</span><span class="token punctuation">,</span>        <span class="token property">"datatables.net-select-bs4"</span><span class="token operator">:</span> <span class="token string">"^1.3.1"</span><span class="token punctuation">,</span>        <span class="token property">"daterangepicker"</span><span class="token operator">:</span> <span class="token string">"^3.1.0"</span><span class="token punctuation">,</span>        <span class="token property">"distpicker"</span><span class="token operator">:</span> <span class="token string">"^2.0.6"</span><span class="token punctuation">,</span>        <span class="token property">"echarts"</span><span class="token operator">:</span> <span class="token string">"^4.9.0"</span><span class="token punctuation">,</span>        <span class="token property">"icheck"</span><span class="token operator">:</span> <span class="token string">"^1.0.2"</span><span class="token punctuation">,</span>        <span class="token property">"ionicons"</span><span class="token operator">:</span> <span class="token string">"^2.0.1"</span><span class="token punctuation">,</span>        <span class="token property">"jquery"</span><span class="token operator">:</span> <span class="token string">"^3.5.1"</span><span class="token punctuation">,</span>        <span class="token property">"jquery-datatables-checkboxes"</span><span class="token operator">:</span> <span class="token string">"^1.2.12"</span><span class="token punctuation">,</span>        <span class="token property">"jquery-jsonview"</span><span class="token operator">:</span> <span class="token string">"^1.2.3"</span><span class="token punctuation">,</span>        <span class="token property">"jquery-validation"</span><span class="token operator">:</span> <span class="token string">"^1.19.2"</span><span class="token punctuation">,</span>        <span class="token property">"jszip"</span><span class="token operator">:</span> <span class="token string">"^3.5.0"</span><span class="token punctuation">,</span>        <span class="token property">"laravel-mix"</span><span class="token operator">:</span> <span class="token string">"^5.0.7"</span><span class="token punctuation">,</span>        <span class="token property">"layui-src"</span><span class="token operator">:</span> <span class="token string">"^2.5.5"</span><span class="token punctuation">,</span>        <span class="token property">"lodash"</span><span class="token operator">:</span> <span class="token string">"^4.17.19"</span><span class="token punctuation">,</span>        <span class="token property">"moment"</span><span class="token operator">:</span> <span class="token string">"^2.29.1"</span><span class="token punctuation">,</span>        <span class="token property">"overlayscrollbars"</span><span class="token operator">:</span> <span class="token string">"^1.13.0"</span><span class="token punctuation">,</span>        <span class="token property">"paste.js"</span><span class="token operator">:</span> <span class="token string">"0.0.21"</span><span class="token punctuation">,</span>        <span class="token property">"pc-bootstrap4-datetimepicker"</span><span class="token operator">:</span> <span class="token string">"^4.17.51"</span><span class="token punctuation">,</span>        <span class="token property">"resolve-url-loader"</span><span class="token operator">:</span> <span class="token string">"^3.1.0"</span><span class="token punctuation">,</span>        <span class="token property">"sass"</span><span class="token operator">:</span> <span class="token string">"^1.15.2"</span><span class="token punctuation">,</span>        <span class="token property">"sass-loader"</span><span class="token operator">:</span> <span class="token string">"^8.0.0"</span><span class="token punctuation">,</span>        <span class="token property">"sc-bootstrap-treeview"</span><span class="token operator">:</span> <span class="token string">"^1.2.4"</span><span class="token punctuation">,</span>        <span class="token property">"select2"</span><span class="token operator">:</span> <span class="token string">"^4.0.13"</span><span class="token punctuation">,</span>        <span class="token property">"summernote"</span><span class="token operator">:</span> <span class="token string">"^0.8.18"</span><span class="token punctuation">,</span>        <span class="token property">"toastr"</span><span class="token operator">:</span> <span class="token string">"^2.1.4"</span><span class="token punctuation">,</span>        <span class="token property">"vue-template-compiler"</span><span class="token operator">:</span> <span class="token string">"^2.6.12"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></details><h4 id="维护asset主文件"><a href="#维护asset主文件" class="headerlink" title="维护asset主文件"></a>维护asset主文件</h4><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>建议使用IDE编辑，路径会有跳转提示，不容易出错。</p></blockquote><p>bootstrap.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">window<span class="token punctuation">.</span>_ <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'lodash'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/** * We'll load jQuery and the Bootstrap jQuery plugin which provides support * for JavaScript based Bootstrap features such as modals and tabs. This * code may be modified to fit the specific needs of your application. */</span>window<span class="token punctuation">.</span>$ <span class="token operator">=</span> window<span class="token punctuation">.</span>jQuery <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'jquery'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>moment <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'moment'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>echarts <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'echarts'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>toastr <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'toastr'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>JSZip <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'jszip'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'bootstrap/dist/js/bootstrap.bundle'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'admin-lte'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'datatables.net'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'datatables.net-bs4'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'datatables.net-responsive'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'datatables.net-responsive-bs4'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'datatables.net-fixedheader'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'datatables.net-fixedheader-bs4'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'datatables.net-fixedcolumns'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'datatables.net-fixedcolumns-bs4'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'datatables.net-buttons'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'datatables.net-buttons/js/buttons.colVis.min'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'datatables.net-buttons/js/buttons.flash.min'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'datatables.net-buttons/js/buttons.html5.min'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'datatables.net-buttons-bs4'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@fortawesome/fontawesome-free/js/all'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'select2/dist/js/select2.full'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'jquery-validation'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'jquery-validation/dist/localization/messages_zh'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'jquery-jsonview'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'jquery-datatables-checkboxes'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'bootstrap-iconpicker-latest/dist/js/bootstrap-iconpicker.bundle.min'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'pc-bootstrap4-datetimepicker'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'daterangepicker'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'distpicker'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'sc-bootstrap-treeview/dist/bootstrap-treeview.min'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'icheck'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'summernote'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'paste.js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'overlayscrollbars'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/** * We'll load the axios HTTP library which allows us to easily issue requests * to our Laravel back-end. This library automatically handles sending the * CSRF token as a header based on the value of the "XSRF" token cookie. */</span>window<span class="token punctuation">.</span>axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'axios'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>common<span class="token punctuation">[</span><span class="token string">'X-Requested-With'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'XMLHttpRequest'</span><span class="token punctuation">;</span><span class="token keyword">let</span> token <span class="token operator">=</span> document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'meta[name="csrf-token"]'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span>axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>common<span class="token punctuation">[</span><span class="token string">'X-CSRF-TOKEN'</span><span class="token punctuation">]</span> <span class="token operator">=</span> token<span class="token punctuation">.</span>content<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>app.scss</p><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token keyword">@import</span> <span class="token string">"~admin-lte/build/scss/AdminLTE"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~datatables.net-bs4/css/dataTables.bootstrap4.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~datatables.net-select-bs4/css/select.bootstrap4.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~datatables.net-responsive-bs4/css/responsive.bootstrap4.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~datatables.net-fixedheader-bs4/css/fixedHeader.bootstrap4.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~datatables.net-fixedcolumns-bs4/css/fixedColumns.bootstrap4.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~datatables.net-buttons-bs4/css/buttons.bootstrap4.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~select2/dist/css/select2.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~@ttskch/select2-bootstrap4-theme/dist/select2-bootstrap4.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~pc-bootstrap4-datetimepicker/build/css/bootstrap-datetimepicker.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~bootstrap-iconpicker-latest/dist/css/bootstrap-iconpicker.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~sc-bootstrap-treeview/dist/bootstrap-treeview.min.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~jquery-jsonview/dist/jquery.jsonview.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~daterangepicker/daterangepicker.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~icheck/skins/all.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~summernote/dist/summernote-bs4.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~layui-src/dist/css/layui.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~ionicons/css/ionicons.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~overlayscrollbars/css/OverlayScrollbars.css"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"~toastr/build/toastr.css"</span><span class="token punctuation">;</span><span class="token comment">// 以下是自定义的样式</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="custom-quote warning"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 8V13"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 15.99V16.01"></path></svg></span><p class="custom-quote-title">注意</p><p>正常来说，这里时不需要编译adminlte的scss，可以直接引入css，加快编译速度。但是不这样做的话，我后续做自动化构建会遇到问题)</p></div><h4 id="维护构建配置"><a href="#维护构建配置" class="headerlink" title="维护构建配置"></a>维护构建配置</h4><p>我这里将两个composer组件<code>horizon</code>、<code>telescope</code>的asset做了复制目录动作，也就不需要用版本控制维护。如果做自动构建，要记得先安装composer组件再执行构建。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> mix <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'laravel-mix'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* |-------------------------------------------------------------------------- | Mix Asset Management |-------------------------------------------------------------------------- | | Mix provides a clean, fluent API for defining some Webpack build steps | for your Laravel application. By default, we are compiling the Sass | file for the application as well as bundling up all the JS files. | */</span>mix<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token string">'node_modules/admin-lte/dist/img/AdminLTELogo.png'</span><span class="token punctuation">,</span> <span class="token string">'public/images/vendor/admin-lte/AdminLTELogo.png'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">copyDirectory</span><span class="token punctuation">(</span><span class="token string">'vendor/laravel/horizon/public'</span><span class="token punctuation">,</span> <span class="token string">'public/vendor/horizon'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">copyDirectory</span><span class="token punctuation">(</span><span class="token string">'vendor/laravel/telescope/public'</span><span class="token punctuation">,</span> <span class="token string">'public/vendor/telescope'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">copyDirectory</span><span class="token punctuation">(</span><span class="token string">'node_modules/layui-src/dist'</span><span class="token punctuation">,</span> <span class="token string">'public/vendor/layui'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mix<span class="token punctuation">.</span><span class="token function">js</span><span class="token punctuation">(</span><span class="token string">'resources/js/app.js'</span><span class="token punctuation">,</span> <span class="token string">'public/js'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">scripts</span><span class="token punctuation">(</span><span class="token punctuation">[</span>        <span class="token string">'resources/js/util.js'</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'public/js/util.js'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">sass</span><span class="token punctuation">(</span><span class="token string">'resources/sass/app.scss'</span><span class="token punctuation">,</span> <span class="token string">'public/css'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>mix<span class="token punctuation">.</span><span class="token function">inProduction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    mix<span class="token punctuation">.</span><span class="token function">disableNotifications</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="custom-quote warning"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 8V13"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 15.99V16.01"></path></svg></span><p class="custom-quote-title">注意</p><p>截至发文时间，layui的结构还不能很好的支持webpack打包<a href="https://github.com/sentsin/layui/issues/268">[issue]</a>，所以这里直接复制了目录，视图中单独引入。</p></div><h4 id="执行构建"><a href="#执行构建" class="headerlink" title="执行构建"></a>执行构建</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i<span class="token function">npm</span> run prod<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="引入构建后的文件"><a href="#引入构建后的文件" class="headerlink" title="引入构建后的文件"></a>引入构建后的文件</h4><p>index.blade.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string double-quoted-string">"shortcut icon"</span> type<span class="token operator">=</span><span class="token string double-quoted-string">"image/x-icon"</span> href<span class="token operator">=</span><span class="token string double-quoted-string">"&#123;&#123;asset('images/vendor/admin-lte/AdminLTELogo.png')&#125;&#125;"</span>          media<span class="token operator">=</span><span class="token string double-quoted-string">"screen"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string double-quoted-string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string double-quoted-string">"&#123;&#123;mix('css/app.css')&#125;&#125;"</span><span class="token operator">></span><span class="token operator">...</span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string double-quoted-string">"&#123;&#123;mix('/js/manifest.js')&#125;&#125;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string double-quoted-string">"&#123;&#123;mix('/js/vendor.js')&#125;&#125;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string double-quoted-string">"&#123;&#123;mix('js/app.js')&#125;&#125;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> LayUI 注意是LayUI的结构不规范导致需要单独引入 其他组件请使用Laravel<span class="token operator">-</span>mix维护 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string double-quoted-string">"&#123;&#123;asset('vendor/layui/layui.all.js')&#125;&#125;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> common 工具类组件单独引入方便调用 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string double-quoted-string">"&#123;&#123;asset('js/util.js')&#125;&#125;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;公司几个后台老项目的asset都没有构建方案，直接放到版本控制仓库里，臃肿凌乱，加载速度也堪忧。&lt;br&gt;最近开发一个新后台，决定改用&lt;a href=&quot;https://laravel-mix.com/&quot;&gt;laravel-mix&lt;/a&gt;构建asset。&lt;/p&gt;</summary>
    
    
    
    <category term="前端" scheme="https://cloudycity.me/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="webpack" scheme="https://cloudycity.me/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>Eloquent自动维护int类型的时间</title>
    <link href="https://cloudycity.me/post/Eloquent%E8%87%AA%E5%8A%A8%E7%BB%B4%E6%8A%A4int%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%97%B6%E9%97%B4.html"/>
    <id>https://cloudycity.me/post/Eloquent%E8%87%AA%E5%8A%A8%E7%BB%B4%E6%8A%A4int%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%97%B6%E9%97%B4.html</id>
    <published>2020-08-12T03:20:16.000Z</published>
    <updated>2021-06-21T10:35:56.782Z</updated>
    
    <content type="html"><![CDATA[<p>火星救援，刻不容缓！</p><span id="more"></span><p>Laravel Eloquent提供了自动维护<code>created_at</code>、<code>updated_at</code>的功能，时间的默认类型为格式化的字符串(<code>Carbon\Carbon::toString()的返回值</code>)。<br>如果表设计是存储Unix时间戳，可以通过一个trait支持。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Models</span><span class="token punctuation">;</span><span class="token keyword">trait</span> <span class="token class-name">UseUnixTimestamp</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">freshTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">fromDateTime</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getDateFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string single-quoted-string">'U'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Models</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">UseUnixTimestamp</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyModel</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span><span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">UseUnixTimestamp</span><span class="token punctuation">;</span>        <span class="token comment">//</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;火星救援，刻不容缓！&lt;/p&gt;</summary>
    
    
    
    <category term="php" scheme="https://cloudycity.me/categories/php/"/>
    
    
    <category term="laravel" scheme="https://cloudycity.me/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>如何引用同一级查询的列别名作为新列</title>
    <link href="https://cloudycity.me/post/%E5%A6%82%E4%BD%95%E5%BC%95%E7%94%A8%E5%90%8C%E4%B8%80%E7%BA%A7%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%88%97%E5%88%AB%E5%90%8D%E4%BD%9C%E4%B8%BA%E6%96%B0%E5%88%97.html"/>
    <id>https://cloudycity.me/post/%E5%A6%82%E4%BD%95%E5%BC%95%E7%94%A8%E5%90%8C%E4%B8%80%E7%BA%A7%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%88%97%E5%88%AB%E5%90%8D%E4%BD%9C%E4%B8%BA%E6%96%B0%E5%88%97.html</id>
    <published>2019-08-03T15:46:21.000Z</published>
    <updated>2021-06-21T10:35:56.782Z</updated>
    
    <content type="html"><![CDATA[<p>火星救援，刻不容缓！</p><span id="more"></span><p>示例表：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql<span class="token operator">></span> SELECT * FROM core<span class="token punctuation">;</span>+--------+--------+--------+<span class="token operator">|</span> field1 <span class="token operator">|</span> field2 <span class="token operator">|</span> field3 <span class="token operator">|</span>+--------+--------+--------+<span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>      <span class="token number">2</span> <span class="token operator">|</span>      <span class="token number">3</span> <span class="token operator">|</span><span class="token operator">|</span>      <span class="token number">4</span> <span class="token operator">|</span>      <span class="token number">5</span> <span class="token operator">|</span>      <span class="token number">6</span> <span class="token operator">|</span>+--------+--------+--------+<span class="token number">2</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>MySQL</code>中无法直接执行以下查询：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql<span class="token operator">></span> SELECT    -<span class="token operator">></span>     field1 + field2 AS col1,    -<span class="token operator">></span>     col1 + field3 AS col2    -<span class="token operator">></span> FROM    -<span class="token operator">></span>     core<span class="token punctuation">;</span>ERROR <span class="token number">1054</span> <span class="token punctuation">(</span>42S22<span class="token punctuation">)</span>: Unknown <span class="token function">column</span> <span class="token string">'col1'</span> <span class="token keyword">in</span> <span class="token string">'field list'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但有三种方案实现这个效果。</p><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql<span class="token operator">></span> SELECT    -<span class="token operator">></span>     col1,    -<span class="token operator">></span>     col1 + field3 AS col2    -<span class="token operator">></span> FROM    -<span class="token operator">></span>     <span class="token punctuation">(</span> SELECT field1 + field2 AS col1, field3 FROM core <span class="token punctuation">)</span> AS subQuery<span class="token punctuation">;</span>+------+------+<span class="token operator">|</span> col1 <span class="token operator">|</span> col2 <span class="token operator">|</span>+------+------+<span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span>    <span class="token number">6</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">9</span> <span class="token operator">|</span>   <span class="token number">15</span> <span class="token operator">|</span>+------+------+<span class="token number">2</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="用户变量"><a href="#用户变量" class="headerlink" title="用户变量"></a>用户变量</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql<span class="token operator">></span> SELECT    -<span class="token operator">></span>     @col1 :<span class="token operator">=</span> <span class="token punctuation">(</span> field1 + field2 <span class="token punctuation">)</span> AS col1,    -<span class="token operator">></span>     @col1 + field3 AS col2    -<span class="token operator">></span> FROM    -<span class="token operator">></span>     core<span class="token punctuation">;</span>+------+------+<span class="token operator">|</span> col1 <span class="token operator">|</span> col2 <span class="token operator">|</span>+------+------+<span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span>    <span class="token number">6</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">9</span> <span class="token operator">|</span>   <span class="token number">15</span> <span class="token operator">|</span>+------+------+<span class="token number">2</span> rows <span class="token keyword">in</span> set, <span class="token number">1</span> warning <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note warning"><p>这里结果显示了一个warning: SELECT里的表达式在被发送到mysql客户端时才会被执行，所以[用户变量](https://dev.mysql.com/doc/refman/5.6/en/user-variables.html)在`HAVING`、`GROUP BY`、`ORDER BY`中无法使用。</p></div><h3 id="引用别名"><a href="#引用别名" class="headerlink" title="引用别名"></a>引用别名</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql<span class="token operator">></span> SELECT    -<span class="token operator">></span>     field1 + field2 AS col1,    -<span class="token operator">></span>     <span class="token punctuation">(</span> SELECT col1 <span class="token punctuation">)</span> + field3 AS col2    -<span class="token operator">></span> FROM    -<span class="token operator">></span>     core<span class="token punctuation">;</span>+------+------+<span class="token operator">|</span> col1 <span class="token operator">|</span> col2 <span class="token operator">|</span>+------+------+<span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span>    <span class="token number">6</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">9</span> <span class="token operator">|</span>   <span class="token number">15</span> <span class="token operator">|</span>+------+------+<span class="token number">2</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note warning"><p>与`用户变量`类似，在`GROUP BY`中无法使用。</p></div><p>在<code>GROUP BY</code>里中使用引用:</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql<span class="token operator">></span> SELECT    -<span class="token operator">></span>     MAX<span class="token punctuation">(</span> field1 <span class="token punctuation">)</span> AS col1,    -<span class="token operator">></span>     <span class="token punctuation">(</span> SELECT col1 <span class="token punctuation">)</span> AS col2    -<span class="token operator">></span> FROM    -<span class="token operator">></span>     core    -<span class="token operator">></span> GROUP BY    -<span class="token operator">></span>     field1<span class="token punctuation">;</span>ERROR <span class="token number">1247</span> <span class="token punctuation">(</span>42S22<span class="token punctuation">)</span>: Reference <span class="token string">'col1'</span> not supported <span class="token punctuation">(</span>reference to group <span class="token keyword">function</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><p><a href="https://stackoverflow.com/questions/6081436/how-to-alias-a-field-or-column-in-mysql#">https://stackoverflow.com/questions/6081436/how-to-alias-a-field-or-column-in-mysql#</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;火星救援，刻不容缓！&lt;/p&gt;</summary>
    
    
    
    <category term="db" scheme="https://cloudycity.me/categories/db/"/>
    
    
    <category term="mysql" scheme="https://cloudycity.me/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>用Docker搭建LNMP环境</title>
    <link href="https://cloudycity.me/post/%E7%94%A8Docker%E6%90%AD%E5%BB%BALNMP%E7%8E%AF%E5%A2%83.html"/>
    <id>https://cloudycity.me/post/%E7%94%A8Docker%E6%90%AD%E5%BB%BALNMP%E7%8E%AF%E5%A2%83.html</id>
    <published>2019-07-19T09:57:13.000Z</published>
    <updated>2021-06-21T10:35:56.782Z</updated>
    
    <content type="html"><![CDATA[<p>人类的本质是复读机。</p><span id="more"></span><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><h4 id="查看内核版本"><a href="#查看内核版本" class="headerlink" title="查看内核版本"></a>查看内核版本</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">uname</span> -r<span class="token number">3.10</span>.0-957.el7.x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="更新yum包"><a href="#更新yum包" class="headerlink" title="更新yum包"></a>更新yum包</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ yum update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="添加包源"><a href="#添加包源" class="headerlink" title="添加包源"></a>添加包源</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repoLoaded plugins: fastestmirror, langpacksadding repo from: https://download.docker.com/linux/centos/docker-ce.repograbbing <span class="token function">file</span> https://download.docker.com/linux/centos/docker-ce.repo to /etc/yum.repos.d/docker-ce.reporepo saved to /etc/yum.repos.d/docker-ce.repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ yum list docker-ce --showduplicates <span class="token operator">|</span> <span class="token function">sort</span> -rLoading mirror speeds from cached hostfileLoaded plugins: fastestmirror, langpacksdocker-ce.x86_64            <span class="token number">3</span>:18.09.8-3.el7                     docker-ce-stabledocker-ce.x86_64            <span class="token number">3</span>:18.09.7-3.el7                     docker-ce-stabledocker-ce.x86_64            <span class="token number">3</span>:18.09.6-3.el7                     docker-ce-stabledocker-ce.x86_64            <span class="token number">3</span>:18.09.5-3.el7                     docker-ce-stabledocker-ce.x86_64            <span class="token number">3</span>:18.09.4-3.el7                     docker-ce-stabledocker-ce.x86_64            <span class="token number">3</span>:18.09.3-3.el7                     docker-ce-stabledocker-ce.x86_64            <span class="token number">3</span>:18.09.2-3.el7                     docker-ce-stabledocker-ce.x86_64            <span class="token number">3</span>:18.09.1-3.el7                     docker-ce-stabledocker-ce.x86_64            <span class="token number">3</span>:18.09.0-3.el7                     docker-ce-stabledocker-ce.x86_64            <span class="token number">18.06</span>.3.ce-3.el7                    docker-ce-stabledocker-ce.x86_64            <span class="token number">18.06</span>.2.ce-3.el7                    docker-ce-stabledocker-ce.x86_64            <span class="token number">18.06</span>.1.ce-3.el7                    docker-ce-stabledocker-ce.x86_64            <span class="token number">18.06</span>.0.ce-3.el7                    docker-ce-stabledocker-ce.x86_64            <span class="token number">18.03</span>.1.ce-1.el7.centos             docker-ce-stabledocker-ce.x86_64            <span class="token number">18.03</span>.0.ce-1.el7.centos             docker-ce-stabledocker-ce.x86_64            <span class="token number">17.12</span>.1.ce-1.el7.centos             docker-ce-stabledocker-ce.x86_64            <span class="token number">17.12</span>.0.ce-1.el7.centos             docker-ce-stabledocker-ce.x86_64            <span class="token number">17.09</span>.1.ce-1.el7.centos             docker-ce-stabledocker-ce.x86_64            <span class="token number">17.09</span>.0.ce-1.el7.centos             docker-ce-stabledocker-ce.x86_64            <span class="token number">17.06</span>.2.ce-1.el7.centos             docker-ce-stabledocker-ce.x86_64            <span class="token number">17.06</span>.1.ce-1.el7.centos             docker-ce-stabledocker-ce.x86_64            <span class="token number">17.06</span>.0.ce-1.el7.centos             docker-ce-stabledocker-ce.x86_64            <span class="token number">17.03</span>.3.ce-1.el7                    docker-ce-stabledocker-ce.x86_64            <span class="token number">17.03</span>.2.ce-1.el7.centos             docker-ce-stabledocker-ce.x86_64            <span class="token number">17.03</span>.1.ce-1.el7.centos             docker-ce-stabledocker-ce.x86_64            <span class="token number">17.03</span>.0.ce-1.el7.centos             docker-ce-stableAvailable Packages<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ yum <span class="token function">install</span> docker-ce-18.03.1.ce<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ systemctl start docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="设置开机启动-可选"><a href="#设置开机启动-可选" class="headerlink" title="设置开机启动 (可选)"></a>设置开机启动 (可选)</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ systemctl <span class="token builtin class-name">enable</span> dockerCreated symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ docker versionClient: Version:      <span class="token number">18.03</span>.1-ce API version:  <span class="token number">1.37</span> Go version:   go1.9.5 Git commit:   9ee9f40 Built:        Thu Apr <span class="token number">26</span> 07:20:16 <span class="token number">2018</span> OS/Arch:      linux/amd64 Experimental: <span class="token boolean">false</span> Orchestrator: swarmServer: Engine:  Version:      <span class="token number">18.03</span>.1-ce  API version:  <span class="token number">1.37</span> <span class="token punctuation">(</span>minimum version <span class="token number">1.12</span><span class="token punctuation">)</span>  Go version:   go1.9.5  Git commit:   9ee9f40  Built:        Thu Apr <span class="token number">26</span> 07:23:58 <span class="token number">2018</span>  OS/Arch:      linux/amd64  Experimental: <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h3><h4 id="从github安装"><a href="#从github安装" class="headerlink" title="从github安装"></a>从github安装</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">curl</span> -L <span class="token string">"https://github.com/docker/compose/releases/download/1.24.1/docker-compose-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -s<span class="token variable">)</span></span>-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -m<span class="token variable">)</span></span>"</span> -o /usr/local/bin/docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="给予执行权限"><a href="#给予执行权限" class="headerlink" title="给予执行权限"></a>给予执行权限</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">chmod</span> +x /usr/local/bin/docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="查看-1"><a href="#查看-1" class="headerlink" title="查看"></a>查看</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ docker-compose --versiondocker-compose version <span class="token number">1.24</span>.1, build 4667896b<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="搭建LNMP"><a href="#搭建LNMP" class="headerlink" title="搭建LNMP"></a>搭建LNMP</h3><p>这里直接用<a href="https://github.com/yeszao/dnmp">yeszao/dnmp</a>的配置。</p><h4 id="选取目录"><a href="#选取目录" class="headerlink" title="选取目录"></a>选取目录</h4><p>选择一个存放容器配置的目录(只是配置文件位置，镜像与容器在<code>/var/lib/docker</code>目录中)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token builtin class-name">cd</span> ~ <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> dnmp <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> dnmp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="拉取配置"><a href="#拉取配置" class="headerlink" title="拉取配置"></a>拉取配置</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> clone git@github.com:yeszao/dnmp.git <span class="token comment"># 这里用的是v2.0.4的tag</span>$ <span class="token function">cp</span> env.sample .env <span class="token operator">&amp;&amp;</span> <span class="token function">cp</span> docker-compose.sample.yml docker-compose.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h4><p>这里<code>docker-compose.yml</code> 只开启了<code>nginx</code>、<code>php</code>、<code>mysql8</code>和<code>redis</code>，<code>.env</code> 给php加了一些扩展。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># .env</span><span class="token assign-left variable">PHP_VERSION</span><span class="token operator">=</span><span class="token number">7.2</span>.19<span class="token assign-left variable">PHP_PHP_CONF_FILE</span><span class="token operator">=</span>./conf/php.ini<span class="token assign-left variable">PHP_FPM_CONF_FILE</span><span class="token operator">=</span>./conf/php-fpm.conf<span class="token assign-left variable">PHP_LOG_DIR</span><span class="token operator">=</span>./log/php<span class="token assign-left variable">PHP_EXTENSIONS</span><span class="token operator">=</span>pdo_mysql,mysqli,mbstring,gd,curl,opcache,redis,imap,swoole,xhprof,acpu<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所有配置文件都在<code>~/dnmp/services/</code>目录中，所有日志都在<code>~/dnmp/log</code>中，具体见<a href="https://github.com/yeszao/dnmp">yeszao/dnmp</a>。</p><h4 id="执行构建"><a href="#执行构建" class="headerlink" title="执行构建"></a>执行构建</h4><p>在配置文件处执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ docker-compose up -dCreating network <span class="token string">"dnmp_default"</span> with the default driverCreating redis <span class="token punctuation">..</span>. <span class="token keyword">done</span>Creating mysql <span class="token punctuation">..</span>. <span class="token keyword">done</span>Creating php   <span class="token punctuation">..</span>. <span class="token keyword">done</span>Creating nginx <span class="token punctuation">..</span>. <span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>初始构建需要一定时间，如果构建时无法下载组件，需要给容器指定dns服务器。</p><ol><li>查看宿主机<code>nameserver</code><pre class="line-numbers language-none"><code class="language-none">$ cat &#x2F;etc&#x2F;resolv.conf# Your system has been configured with &#39;manage-resolv-conf&#39; set to true.# As a result, cloud-init has written this file with configuration data# that it has been provided. Cloud-init, by default, will write this file# a single time (PER_ONCE).#nameserver 183.60.83.19nameserver 183.60.82.98<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>新建或修改<code>/etc/default/docker</code><pre class="line-numbers language-none"><code class="language-none">DOCKER_OPTS&#x3D;&quot;--dns 183.60.83.19&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>重启<code>docker</code><pre class="line-numbers language-none"><code class="language-none">systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h4 id="查看容器"><a href="#查看容器" class="headerlink" title="查看容器"></a>查看容器</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ docker-compose <span class="token function">ps</span>Name               Command              State                    Ports----------------------------------------------------------------------------------------mysql   docker-entrypoint.sh mysqld     Up      <span class="token number">0.0</span>.0.0:3306-<span class="token operator">></span><span class="token number">3306</span>/tcp, <span class="token number">33060</span>/tcpnginx   nginx -g daemon off<span class="token punctuation">;</span>            Up      <span class="token number">0.0</span>.0.0:443-<span class="token operator">></span><span class="token number">443</span>/tcp, <span class="token number">0.0</span>.0.0:80-<span class="token operator">></span><span class="token number">80</span>/tcpphp     docker-php-entrypoint php-fpm   Up      <span class="token number">9000</span>/tcp, <span class="token number">9501</span>/tcpredis   redis-server /etc/redis.conf    Up      <span class="token number">0.0</span>.0.0:6379-<span class="token operator">></span><span class="token number">6379</span>/tcp           <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="配置命令别名"><a href="#配置命令别名" class="headerlink" title="配置命令别名"></a>配置命令别名</h4><p>从<code>bash.alias.sample</code>提取需要的别名到<code>~/.bashrc</code>或<code>~/.zshrc</code>中，然后重新<code>source</code>生效</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">dnginx</span><span class="token operator">=</span><span class="token string">'docker exec -it nginx /bin/sh'</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">dphp</span><span class="token operator">=</span><span class="token string">'docker exec -it php /bin/sh'</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">dmysql</span><span class="token operator">=</span><span class="token string">'docker exec -it mysql /bin/bash'</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">dredis</span><span class="token operator">=</span><span class="token string">'docker exec -it redis /bin/sh'</span><span class="token function-name function">php</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token assign-left variable">tty</span><span class="token operator">=</span><span class="token function">tty</span> -s <span class="token operator">&amp;&amp;</span> <span class="token assign-left variable">tty</span><span class="token operator">=</span>--ttydocker run <span class="token punctuation">\</span><span class="token variable">$tty</span> <span class="token punctuation">\</span>--interactive <span class="token punctuation">\</span>--rm <span class="token punctuation">\</span>--volume <span class="token environment constant">$PWD</span>:/www:rw <span class="token punctuation">\</span>--workdir /www <span class="token punctuation">\</span>dnmp_php php <span class="token string">"<span class="token variable">$@</span>"</span><span class="token punctuation">&#125;</span><span class="token function-name function">composer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token assign-left variable">tty</span><span class="token operator">=</span><span class="token function">tty</span> -s <span class="token operator">&amp;&amp;</span> <span class="token assign-left variable">tty</span><span class="token operator">=</span>--ttydocker run <span class="token punctuation">\</span><span class="token variable">$tty</span> <span class="token punctuation">\</span>--interactive <span class="token punctuation">\</span>--rm <span class="token punctuation">\</span>--user www-data:www-data <span class="token punctuation">\</span>--volume ~/dnmp/data/composer:/tmp/composer <span class="token punctuation">\</span>--volume <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>:/app <span class="token punctuation">\</span>--workdir /app <span class="token punctuation">\</span>dnmp_php <span class="token function">composer</span> <span class="token string">"<span class="token variable">$@</span>"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><p><a href="https://docs.docker.com/install/linux/docker-ce/centos/">Get Docker CE for CentOS</a><br><a href="https://docs.docker.com/compose/install/">Install Docker Compose</a><br><a href="https://github.com/yeszao/dnmp">yeszao/dnmp</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;人类的本质是复读机。&lt;/p&gt;</summary>
    
    
    
    <category term="运维" scheme="https://cloudycity.me/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="docker" scheme="https://cloudycity.me/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>使用Webpack开发JS Sdk</title>
    <link href="https://cloudycity.me/post/%E4%BD%BF%E7%94%A8Webpack%E5%BC%80%E5%8F%91JS-Sdk.html"/>
    <id>https://cloudycity.me/post/%E4%BD%BF%E7%94%A8Webpack%E5%BC%80%E5%8F%91JS-Sdk.html</id>
    <published>2019-07-17T05:55:32.000Z</published>
    <updated>2021-06-21T10:35:56.784Z</updated>
    
    <content type="html"><![CDATA[<p>最近项目需要开发一个JS Sdk，为了保证可读性与可维护性，决定按模块开发，最后使用webpack打包。</p><span id="more"></span><h3 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">|-- config|   |-- webpack.base.js|   |-- webpack.development.js|   |-- webpack.production.js|-- dist|   |-- mars_minigame_sdk.js|   |-- mars_minigame_sdk.min.js|-- node_modules|-- package-lock.json|-- package.json|-- src|   |-- index.js      # SDK入口|   |-- lib|   |   &#96;-- util.js   # 工具函数|   |-- sdk           # 各渠道SDK|       |-- qq.js |       |-- wechat.js|-- webpack.config.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">npm install -g webpack webpack-clinpm install --save-dev webpack webpack-cli webpack-merge uglifyjs-webpack-plugin babel-loader<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="配置webpack"><a href="#配置webpack" class="headerlink" title="配置webpack"></a>配置webpack</h3><p><code>config\webpack.base.js</code></p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">const path &#x3D; require(&#39;path&#39;)module.exports &#x3D; &#123;    entry: &#123;        &#39;mars_minigame_sdk&#39;: &#39;@&#x2F;index.js&#39;    &#125;,    output: &#123;        path: path.resolve(__dirname, &#39;..&#x2F;dist&#39;),        filename: &#39;[name].min.js&#39;,        library: &#39;mars_mg_sdk&#39;,        libraryTarget: &quot;umd&quot;    &#125;,    module: &#123;        rules: [            &#123;                 test: &#x2F;\.js$&#x2F;,                 exclude: &#x2F;node_modules&#x2F;,                 use: &#123;                    loader: &quot;babel-loader&quot;                 &#125;            &#125;        ]    &#125;,    resolve: &#123;        alias: &#123;            &#39;@&#39;: path.resolve(&#39;src&#39;)        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>config\webpack.development.js</code></p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">const merge &#x3D; require(&quot;webpack-merge&quot;);module.exports &#x3D; &#123;    devtool: &#39;source-map&#39;,    output: &#123;        filename: &#39;[name].js&#39;,    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>config\webpack.production.js</code></p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">const merge &#x3D; require(&quot;webpack-merge&quot;);module.exports &#x3D; &#123;    output: &#123;        filename: &#39;[name].min.js&#39;,    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>webpack.config.js</code></p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">const merge &#x3D; require(&#39;webpack-merge&#39;);const baseConfig &#x3D; require(&#39;.&#x2F;config&#x2F;webpack.base&#39;);const developmentConfig &#x3D; require(&#39;.&#x2F;config&#x2F;webpack.development&#39;);const productionConfig &#x3D; require(&#39;.&#x2F;config&#x2F;webpack.production&#39;);module.exports &#x3D; mode &#x3D;&gt; &#123;    if (mode &#x3D;&#x3D;&#x3D; &quot;production&quot;) &#123;        return merge(baseConfig, productionConfig, &#123; mode &#125;);    &#125;    return merge(baseConfig, developmentConfig, &#123; mode &#125;);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>package.json</code></p><pre class="line-numbers language-Json" data-language="Json"><code class="language-Json">&#123;  &quot;name&quot;: &quot;mars_mg_sdk&quot;,  &quot;version&quot;: &quot;1.0.0&quot;,  &quot;description&quot;: &quot;火星救援小游戏SDK&quot;,  &quot;private&quot;: true,  &quot;scripts&quot;: &#123;    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,    &quot;start&quot;: &quot;npm run dev&quot;,    &quot;dev&quot;: &quot;webpack --watch --env development&quot;,    &quot;build&quot;: &quot;webpack --env production&quot;,    &quot;server&quot;: &quot;webpack-dev-server --open --env development&quot;  &#125;,  &quot;repository&quot;: &#123;    &quot;type&quot;: &quot;git&quot;,    &quot;url&quot;: &quot;ssh:&#x2F;&#x2F;git@gitlab.mars.com&#x2F;lcpd&#x2F;mars_mg_sdk.git&quot;  &#125;,  &quot;keywords&quot;: [    &quot;火星救援&quot;,    &quot;小游戏&quot;,    &quot;SDK&quot;  ],  &quot;author&quot;: &quot;Mars Developer&quot;,  &quot;license&quot;: &quot;MIT&quot;,  &quot;dependencies&quot;: &#123;&#125;,  &quot;devDependencies&quot;: &#123;    &quot;@babel&#x2F;core&quot;: &quot;^7.5.4&quot;,    &quot;babel-loader&quot;: &quot;^8.0.6&quot;,    &quot;uglifyjs-webpack-plugin&quot;: &quot;^2.1.3&quot;,    &quot;webpack&quot;: &quot;^4.35.3&quot;,    &quot;webpack-cli&quot;: &quot;^3.3.5&quot;,    &quot;webpack-dev-server&quot;: &quot;^3.7.2&quot;,    &quot;webpack-merge&quot;: &quot;^4.2.1&quot;  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="业务代码"><a href="#业务代码" class="headerlink" title="业务代码"></a>业务代码</h3><p><code>index.js</code></p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">const qqSdk &#x3D; require(&#39;.&#x2F;sdk&#x2F;qq&#39;);const wechatSdk &#x3D; require(&#39;.&#x2F;sdk&#x2F;wechat&#39;);const util &#x3D; require(&#39;.&#x2F;lib&#x2F;util&#39;);window.apiHost &#x3D; &#39;https:&#x2F;&#x2F;api.mp.mars.com&#x2F;&#39;;module.exports &#x3D; &#123;    init: function (e) &#123;&#125;,    login: function (e) &#123;&#125;,    pay: function (e) &#123;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>sdk\wechat.js</code></p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">const util &#x3D; require(&#39;..&#x2F;lib&#x2F;util&#39;);module.exports &#x3D; &#123;    init: function (e) &#123;&#125;,    login: function (e) &#123;&#125;,    pay: function (e) &#123;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p>打包开发环境文件，即打包成<code>mars_minigame_sdk.js</code>。启动命令参数加了<code>--watch</code>，文件改动时会自动打包。</p><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">npm run dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://user-images.githubusercontent.com/17662451/61350182-57528800-a899-11e9-84b5-4aed02fcb550.png" alt="image"></p><p>打包生产环境文件，即<code>mars_minigame_sdk.min.js</code></p><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">npm run build<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://user-images.githubusercontent.com/17662451/61350264-8a951700-a899-11e9-8c48-34209c8a14b7.png" alt="image"></p><h3 id="使用SDK"><a href="#使用SDK" class="headerlink" title="使用SDK"></a>使用SDK</h3><p>以微信开发工具为例</p><p><img src="https://user-images.githubusercontent.com/17662451/61350545-77367b80-a89a-11e9-94b0-f18ac26bcc3d.png" alt="image"></p><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><p><a href="https://www.baidu.com/link?url=4DZ9UT62RPwYlUbKHWxePeWuWZHGMpRXPSctLMLJSj3Sze_Qwndoshs_6frPE3cnjbm47ZCT2Cp3SvenusCws_&wd=&eqid=ccfe98200005b7d8000000065d37ff52">用 webpack 写一个简单的 JS SDK</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近项目需要开发一个JS Sdk，为了保证可读性与可维护性，决定按模块开发，最后使用webpack打包。&lt;/p&gt;</summary>
    
    
    
    <category term="前端" scheme="https://cloudycity.me/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="webpack" scheme="https://cloudycity.me/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>Laravel5.8+Dingo+JWT+Swagger 开发API</title>
    <link href="https://cloudycity.me/post/Laravel5-8-Dingo-JWT-Swagger-%E5%BC%80%E5%8F%91API.html"/>
    <id>https://cloudycity.me/post/Laravel5-8-Dingo-JWT-Swagger-%E5%BC%80%E5%8F%91API.html</id>
    <published>2019-06-03T06:03:45.000Z</published>
    <updated>2021-06-21T10:35:56.782Z</updated>
    
    <content type="html"><![CDATA[<p>在Laravel5.8中使用“Laravel必知必会”的两个轮子<code>dingo/api</code>和<code>tymon/jwt-auth</code>以及文档系统<code>swagger-api/swagger-ui</code>开发一个规范优雅的API。</p><span id="more"></span><h1 id="Dingo"><a href="#Dingo" class="headerlink" title="Dingo"></a>Dingo</h1><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">composer require dingo&#x2F;api<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://user-images.githubusercontent.com/17662451/61279083-05055e80-a7e8-11e9-9e5e-81d4cc8baec1.png" alt="image"><br>组件包含自动包发现配置，无需手动注册Provider</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">php artisan vendor:publish --provider&#x3D;&quot;Dingo\Api\Provider\LaravelServiceProvider&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>无特殊需求直接通过<code>.env</code>文件配置</p><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell"># Dingo Api API_STANDARDS_TREE&#x3D;xAPI_SUBTYPE&#x3D;mp_adminAPI_PREFIX&#x3D;api # 前缀API_VERSION&#x3D;v1 # 默认版本API_NAME&#x3D;&quot;Mp Admin API&quot; # 名称API_CONDITIONAL_REQUEST&#x3D;false # 条件请求API_STRICT&#x3D;false # 严格模式，开启时请求头必要带标准的Accept信息API_DEFAULT_FORMAT&#x3D;jsonAPI_DEBUG&#x3D;true # 调试<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于子域已被占用，这里采用前缀的格式。接口地址格式为：<a href="https://admin.mp.example.com/api">https://admin.mp.example.com/api</a></p><h3 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h3><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&#x2F;* @var \Dingo\Api\Routing\Router $api *&#x2F;$api &#x3D; app(&#39;Dingo\Api\Routing\Router&#39;);$api-&gt;version(&#39;v1&#39;, function () use ($api) &#123;    $api-&gt;group([&#39;middleware&#39; &#x3D;&gt; [&#39;api&#39;, &#39;bindings&#39;]], function () use ($api) &#123;        &#x2F;&#x2F; 系统调试日志        $api-&gt;get(&#39;dev-logs&#39;, [&#39;as&#39; &#x3D;&gt; &#39;dev-logs&#39;, &#39;uses&#39; &#x3D;&gt; &#39;\Rap2hpoutre\LaravelLogViewer\LogViewerController@index&#39;, &#39;middleware&#39; &#x3D;&gt; [&#39;auth&#39;]]);        &#x2F;&#x2F; 验证        $api-&gt;group([&#39;prefix&#39; &#x3D;&gt; &#39;auth&#39;], function () use ($api) &#123;            $api-&gt;post(&#39;login&#39;, [&#39;as&#39; &#x3D;&gt; &#39;auth.login&#39;, &#39;uses&#39; &#x3D;&gt; &#39;App\Http\Controllers\AuthController@login&#39;]);            $api-&gt;get(&#39;me&#39;, [&#39;as&#39; &#x3D;&gt; &#39;auth.me&#39;, &#39;uses&#39; &#x3D;&gt; &#39;App\Http\Controllers\AuthController@me&#39;]);            $api-&gt;post(&#39;refresh&#39;, [&#39;as&#39; &#x3D;&gt; &#39;auth.refresh&#39;, &#39;uses&#39; &#x3D;&gt; &#39;App\Http\Controllers\AuthController@refresh&#39;]);            $api-&gt;post(&#39;logout&#39;, [&#39;as&#39; &#x3D;&gt; &#39;auth.logout&#39;, &#39;uses&#39; &#x3D;&gt; &#39;App\Http\Controllers\AuthController@logout&#39;]);            $api-&gt;put(&#39;reset-pwd&#39;, [&#39;as&#39; &#x3D;&gt; &#39;auth.reset-pwd&#39;, &#39;uses&#39; &#x3D;&gt; &#39;App\Http\Controllers\AuthController@resetPwd&#39;]);        &#125;);        &#x2F;&#x2F; 系统        $api-&gt;group([&#39;prefix&#39; &#x3D;&gt; &#39;sys&#39;], function () use ($api) &#123;            &#x2F;&#x2F; 当前用户能看到的菜单与拥有的权限(别名)            $api-&gt;get(&#39;menu&#39;, [&#39;as&#39; &#x3D;&gt; &#39;sys.menu&#39;, &#39;uses&#39; &#x3D;&gt; &#39;App\Http\Controllers\System\AdminController@menu&#39;]);            &#x2F;&#x2F; 系统资源            $api-&gt;resource(&#39;permissions&#39;, &#39;App\Http\Controllers\System\PermissionController&#39;, [&#39;names&#39; &#x3D;&gt; &#39;sys.permissions&#39;]);            $api-&gt;resource(&#39;roles&#39;, &#39;App\Http\Controllers\System\RoleController&#39;, [&#39;names&#39; &#x3D;&gt; &#39;sys.roles&#39;]);            $api-&gt;resource(&#39;admins&#39;, &#39;App\Http\Controllers\System\AdminController&#39;, [&#39;names&#39; &#x3D;&gt; &#39;sys.admins&#39;]);        &#125;);        ...    &#125;);&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="custom-quote warning"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 8V13"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 15.99V16.01"></path></svg></span><p class="custom-quote-title">注意</p><p>所有控制器都需要完整的命名空间，不支持为群组配置命名空间</p></div><h3 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h3><h4 id="定义异常"><a href="#定义异常" class="headerlink" title="定义异常"></a>定义异常</h4><p>Dingo已经定义了接口场景下常用的异常，所以相关异常可以继承<code>\Dingo\Api\Exception\</code>下的异常。例如：</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">class UpdateResourceFailedException extends \Dingo\Api\Exception\UpdateResourceFailedException&#123;    protected $message &#x3D; &#39;更新失败&#39;;    public function __construct($message &#x3D; null, $errors &#x3D; null, \Exception $previous &#x3D; null, $headers &#x3D; [], $code &#x3D; 0) &#123;        $message &#x3D; $message ?? $this-&gt;getMessage();        parent::__construct($message, $errors, $previous, $headers, $code);    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="自定义异常响应"><a href="#自定义异常响应" class="headerlink" title="自定义异常响应"></a>自定义异常响应</h4><p>Dingo会先于Laravel自带的Handle获取<code>Symfony\Component\HttpKernel\Exception</code>，所以在系统Handle::render()中处理不了这些异常。需要这样：</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">class AppServiceProvider extends ServiceProvider&#123;    &#x2F;**     * Register any application services.     *     * @return void     *&#x2F;    public function register()    &#123;        &#x2F;&#x2F; 优化显示验证异常        app(&#39;Dingo\Api\Exception\Handler&#39;)-&gt;register(function (ValidationException $exception) &#123;            $error &#x3D; $exception-&gt;validator-&gt;errors()-&gt;first();            throw new ValidationHttpException($error);        &#125;);    &#125;    ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Transformers"><a href="#Transformers" class="headerlink" title="Transformers"></a>Transformers</h3><p>目前通过Eloquent ORM的$casts属性来自动转化字段类型，还没复杂的需求需要用到Transformers。</p><h1 id="JWT"><a href="#JWT" class="headerlink" title="JWT"></a>JWT</h1><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>Laravel 5.5以上需要使用1.0.0版本</p><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">composer require &quot;tymon&#x2F;jwt-auth:1.0.0-rc.4.1&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在<code>config/app.php</code>中手动注册Provider</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&#39;providers&#39; &#x3D;&gt; [    ...    Tymon\JWTAuth\Providers\LaravelServiceProvider::class,]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><p>发布配置</p><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">php artisan vendor:publish --provider&#x3D;&quot;Tymon\JWTAuth\Providers\LaravelServiceProvider&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成密钥(可选)</p><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">php artisan jwt:secret<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置ENV</p><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell"># JWT OauthJWT_SECRET&#x3D;F5C5Qodnaa78PGFTFGhWgt7cNaHCOcXTI6SdtfuCfjHpotu7uwmlTy8HlbvsXeNt #64位密钥JWT_TTL&#x3D;1440 #Token过期时间<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="使用验证"><a href="#使用验证" class="headerlink" title="使用验证"></a>使用验证</h3><p>定义一个控制器基类，在构造函数中指定验证中间件即可。</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">class Controller extends BaseController&#123;    use AuthorizesRequests, DispatchesJobs, ValidatesRequests, Helpers;    &#x2F;**     * Create a new AuthController instance.     *     * @return void     *&#x2F;    public function __construct()    &#123;        if (needAuth()) &#123; &#x2F;&#x2F; 助手函数，开发环境不验证Token            $this-&gt;middleware(&#39;auth:api&#39;, [&#39;except&#39; &#x3D;&gt; [&#39;login&#39;]]);        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后所有路由到此控制器子类的请求必须带有Authorization头，值为<code>Bearer $token</code>才能通过检验。</p><div class="custom-quote warning"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 8V13"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 15.99V16.01"></path></svg></span><p class="custom-quote-title">注意</p><p>只有继承这个基类的控制器才会进行检验，如果不是其子类需要在路由中指定中间件，例如上面路由中<code>dev-logs</code>的例子。</p></div><h3 id="验证控制器"><a href="#验证控制器" class="headerlink" title="验证控制器"></a>验证控制器</h3><details class="custom-details"><summary>Click to see more</summary><p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">class AuthController extends Controller&#123;    public function login(LoginRequest $request)    &#123;        $credentials &#x3D; $request-&gt;only([&#39;email&#39;, &#39;password&#39;]);        $auth &#x3D; auth();        if (!$token &#x3D; $auth-&gt;attempt($credentials)) &#123;            return response()-&gt;json([&#39;error&#39; &#x3D;&gt; &#39;Unauthorized&#39;, &#39;status_code&#39; &#x3D;&gt; 401], 401);        &#125;        return $this-&gt;respondWithToken($token);    &#125;    public function me()    &#123;        return response()-&gt;json(auth()-&gt;user());    &#125;    public function logout()    &#123;        auth()-&gt;logout();        return response()-&gt;json([&#39;message&#39; &#x3D;&gt; &#39;Successfully logged out&#39;]);    &#125;        public function refresh()    &#123;        &#x2F;** @noinspection PhpUndefinedMethodInspection *&#x2F;        return $this-&gt;respondWithToken(auth()-&gt;refresh());    &#125;    public function resetPwd(ResetPwdRequest $request)    &#123;        $oldPassword &#x3D; $request-&gt;get(&#39;old_password&#39;);        $newPassword &#x3D; $request-&gt;get(&#39;new_password&#39;);        &#x2F;&#x2F; 检查旧密码        $admin &#x3D; auth()-&gt;user();        if (!password_verify($oldPassword, $admin-&gt;password)) &#123;            throw new AuthenticationException(&#39;密码错误&#39;);        &#125;        &#x2F;&#x2F; 更新密码        $admin-&gt;update([            &#39;password&#39; &#x3D;&gt; password_hash($newPassword, PASSWORD_DEFAULT)        ]);        return success();    &#125;        protected function respondWithToken($token)    &#123;        &#x2F;** @noinspection PhpUndefinedMethodInspection *&#x2F;        return $this-&gt;response-&gt;array([            &#39;access_token&#39; &#x3D;&gt; $token,            &#39;token_type&#39; &#x3D;&gt; &#39;bearer&#39;,            &#39;expires_in&#39; &#x3D;&gt; auth()-&gt;factory()-&gt;getTTL() * 60        ])-&gt;withHeader(&#39;Authorization&#39;, $token);    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></details><h1 id="Swagger"><a href="#Swagger" class="headerlink" title="Swagger"></a>Swagger</h1><p>这里采用<code>l5-swagger</code>扩展，集成了<code>swagger-ui</code>（使用json配置的文档系统）和<code>php-swagger</code>(使用代码注释生成json配置)。</p><h3 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">composer require &quot;darkaonline&#x2F;l5-swagger:5.8.*&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在<code>config/app.php</code>中手动注册Provider</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&#39;providers&#39; &#x3D;&gt; [    ...    L5Swagger\L5SwaggerServiceProvider::class,]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h3><p>发布配置与视图模板</p><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">php artisan vendor:publish --provider &quot;L5Swagger\L5SwaggerServiceProvider&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改配置<code>config/l5-swagger.php</code></p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">return [    &#39;api&#39; &#x3D;&gt; [        &#x2F;*        |--------------------------------------------------------------------------        | Edit to set the api&#39;s title        |--------------------------------------------------------------------------        *&#x2F;        &#39;title&#39; &#x3D;&gt; &#39;后台Api文档&#39;, # 文档页面的标题    ],    &#39;routes&#39; &#x3D;&gt; [        &#x2F;*        |--------------------------------------------------------------------------        | Route for accessing api documentation interface        |--------------------------------------------------------------------------        *&#x2F;        &#39;api&#39; &#x3D;&gt; &#39;api&#x2F;docs&#39;, # 文档页面的路由        &#x2F;*        |--------------------------------------------------------------------------        | Route for accessing parsed swagger annotations.        |--------------------------------------------------------------------------        *&#x2F;        &#39;docs&#39; &#x3D;&gt; &#39;docs&#39;, # 路由别名        ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>.env</code>中添加</p><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell"># SwaggerSWAGGER_VERSION&#x3D;3.0 # php-swagger的版本，不同版本注释写法不同！L5_SWAGGER_GENERATE_ALWAYS&#x3D;true # 自动生成文档json，不要在生产环境打开此项<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>最后记得将文档的json配置加入<code>.gitignore</code></p><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">...&#x2F;storage&#x2F;api-docs&#x2F;api-docs.json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="编写Swagger注释"><a href="#编写Swagger注释" class="headerlink" title="编写Swagger注释"></a>编写Swagger注释</h3><p>这里不详细介绍<code>php-swagger</code>的注释语法，只放出几个例子：</p><ul><li><p><code>swagger.php</code> </p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&lt;?php&#x2F;** * * @OA\OpenApi( *     security&#x3D;&#123; *         &#123; *             &quot;Bearer&quot;:&#123;&#125; *         &#125; *     &#125;, *     @OA\Server( *         url&#x3D;L5_SWAGGER_CONST_HOST *     ) * ) * * @OA\Info( *     version&#x3D;&quot;1.0&quot;, *     title&#x3D;&quot;小程序后台Api文档&quot;, *     @OA\Contact( *         name&#x3D;&quot;火星救援网络科技有限公司&quot;, *         url&#x3D;&quot;http:&#x2F;&#x2F;www.example.com&#x2F;&quot; *     ) * ) * * @OA\SecurityScheme( *     securityScheme&#x3D;&quot;Bearer&quot;, *     type&#x3D;&quot;apiKey&quot;, *     name&#x3D;&quot;Authorization&quot;, *     in&#x3D;&quot;header&quot;, * ) * *&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>swagger-tags.php</code></p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&#x2F;** * @OA\Tag( *     name&#x3D;&quot;Auth&quot;, *     description&#x3D;&quot;验证模块&quot; * ) * * @OA\Tag( *     name&#x3D;&quot;System.Permission&quot;, *     description&#x3D;&quot;系统模块中的权限管理&quot; * ) * * @OA\Tag( *     name&#x3D;&quot;System.Role&quot;, *     description&#x3D;&quot;系统模块中的角色管理&quot; * ) * * @OA\Tag( *     name&#x3D;&quot;System.Admin&quot;, *     description&#x3D;&quot;系统模块中的用户管理&quot; * ) *&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>AuthController.php</code></p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">class AuthController extends Controller&#123;    &#x2F;**     * @OA\Post(     *     path&#x3D;&quot;&#x2F;auth&#x2F;login&quot;,     *     summary&#x3D;&quot;获取凭证&quot;,     *     tags&#x3D;&#123;&quot;Auth&quot;&#125;,     *     description&#x3D;&quot;通过账号密码获取Access Token&quot;,     *     @OA\Parameter(     *         name&#x3D;&quot;email&quot;,     *         in&#x3D;&quot;query&quot;,     *         required&#x3D;true,     *         @OA\Schema(     *             type&#x3D;&quot;string&quot;     *         ),     *         example&#x3D;&quot;test@example.com&quot;,     *         description&#x3D;&quot;邮箱&quot;     *     ),     *     @OA\Parameter(     *         name&#x3D;&quot;password&quot;,     *         in&#x3D;&quot;query&quot;,     *         required&#x3D;true,     *         @OA\Schema(     *             type&#x3D;&quot;string&quot;     *         ),     *         description&#x3D;&quot;密码&quot;     *     ),     *     @OA\Response(     *         response&#x3D;200,     *         description&#x3D;&quot;返回凭证&quot;,     *         ref&#x3D;&quot;#&#x2F;components&#x2F;schemas&#x2F;Token&quot;     *     ),     *     @OA\Response(     *         response&#x3D;401,     *         description&#x3D;&quot;账号不存在或密码错误&quot;     *     )     * )     *     * @param LoginRequest $request     * @return \Illuminate\Http\JsonResponse     *&#x2F;    public function login(LoginRequest $request) &#123;         ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><div class="custom-quote tip"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06"></path><path stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M11.99 18H12.01"></path></svg></span><p class="custom-quote-title">提示</p><p>注释可以写在项目任意php文件中，建议是有归属语义的注释写在归属代码上（例如接口注释写在控制器中，模型注释写在模型中），公共语义的注释一样单独写在一个php文件中。</p></div><h3 id="生成文档json"><a href="#生成文档json" class="headerlink" title="生成文档json"></a>生成文档json</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">php artisan l5-swagger:generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p>访问上面配置的路由地址</p><p><img src="https://user-images.githubusercontent.com/17662451/61341803-77268380-a87a-11e9-87f4-26e373c36a0d.png" alt="image"></p><p>点击<code>Authorize</code>按钮，<code>value</code>填入<code>Authorization</code>头的值即可在生产环境的文档页面请求接口。</p><p><img src="https://user-images.githubusercontent.com/17662451/61342163-d6d15e80-a87b-11e9-9700-3174aa069b6b.png" alt="image"></p><div class="custom-quote tip"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06"></path><path stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M11.99 18H12.01"></path></svg></span><p class="custom-quote-title">提示</p><p>注释可以写在项目任意php文件中，建议是有归属语义的注释写在归属代码上（例如接口注释写在控制器中，模型注释写在模型中），公共语义的注释一样单独写在一个php文件中。</p></div><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>至此，三个轮子在入门应用就介绍完了，这些轮子可以让你更快速的搭建API，专注于业务逻辑。</p><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><p>[0] <a href="https://packagist.org/packages/dingo/api">dingo/api</a><br>[1] <a href="https://packagist.org/packages/tymon/jwt-auth">tymon/jwt-auth</a><br>[2] <a href="https://packagist.org/packages/swagger-api/swagger-ui">swagger-api/swagger-ui</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在Laravel5.8中使用“Laravel必知必会”的两个轮子&lt;code&gt;dingo/api&lt;/code&gt;和&lt;code&gt;tymon/jwt-auth&lt;/code&gt;以及文档系统&lt;code&gt;swagger-api/swagger-ui&lt;/code&gt;开发一个规范优雅的API。&lt;/p&gt;</summary>
    
    
    
    <category term="php" scheme="https://cloudycity.me/categories/php/"/>
    
    
    <category term="laravel" scheme="https://cloudycity.me/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>Hexo提高加载速度</title>
    <link href="https://cloudycity.me/post/Hexo%E6%8F%90%E9%AB%98%E5%8A%A0%E8%BD%BD%E9%80%9F%E5%BA%A6.html"/>
    <id>https://cloudycity.me/post/Hexo%E6%8F%90%E9%AB%98%E5%8A%A0%E8%BD%BD%E9%80%9F%E5%BA%A6.html</id>
    <published>2019-05-01T18:46:17.000Z</published>
    <updated>2021-06-21T10:35:56.782Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo作为纯静态博客最大的优点就是快，但要真正的快起来你可能需要做这些事情。</p><span id="more"></span><h2 id="托管平台（可选）"><a href="#托管平台（可选）" class="headerlink" title="托管平台（可选）"></a>托管平台（可选）</h2><p>直接在<a href="https://coding.net/">Coding</a>等国内平台托管<code>Page</code>项目，修改国内线路解析。(可参照<a href="https://cloudycity.me/p/c283.html#%E5%88%86%E7%BA%BF%E8%B7%AF%E8%A7%A3%E6%9E%90">Github Hexo的百度收录问题</a>)<br>Coding绑定了域名需定期申请SSL证书，所以本博放弃此项。</p><h2 id="CDN加速"><a href="#CDN加速" class="headerlink" title="CDN加速"></a>CDN加速</h2><p>这里只是针对第三方静态文件的加速，修改<code>Next</code>主题配置文件<code>_config.yml</code>如下：</p><details class="custom-details"><summary>Click to see more</summary><p><pre class="line-numbers language-none"><code class="language-none">vendors:  # Internal path prefix. Please do not edit it.  _internal: lib  # Internal version: 2.1.3  jquery: https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;jquery&#x2F;2.1.3&#x2F;jquery.min.js  # Internal version: 2.1.5  # See: http:&#x2F;&#x2F;fancyapps.com&#x2F;fancybox&#x2F;  fancybox: https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;fancybox&#x2F;2.1.5&#x2F;jquery.fancybox.min.js # https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;fancybox&#x2F;2.1.5&#x2F;jquery.fancybox.pack.js  fancybox_css: https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;fancybox&#x2F;2.1.5&#x2F;jquery.fancybox.min.css  # Internal version: 1.0.6  # See: https:&#x2F;&#x2F;github.com&#x2F;ftlabs&#x2F;fastclick  fastclick: https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;fastclick&#x2F;1.0.6&#x2F;fastclick.min.js  # Internal version: 1.9.7  # See: https:&#x2F;&#x2F;github.com&#x2F;tuupola&#x2F;jquery_lazyload  lazyload: https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;jquery_lazyload&#x2F;1.9.7&#x2F;jquery.lazyload.min.js  # Internal version: 1.2.1  # See: http:&#x2F;&#x2F;VelocityJS.org  velocity: https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;velocity&#x2F;1.2.1&#x2F;velocity.min.js  # Internal version: 1.2.1  # See: http:&#x2F;&#x2F;VelocityJS.org  velocity_ui: https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;velocity&#x2F;1.2.1&#x2F;velocity.ui.min.js  # Internal version: 0.7.9  # See: https:&#x2F;&#x2F;faisalman.github.io&#x2F;ua-parser-js&#x2F;  ua_parser:  # Internal version: 4.6.2  # See: http:&#x2F;&#x2F;fontawesome.io&#x2F;  fontawesome: https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;font-awesome&#x2F;4.6.2&#x2F;css&#x2F;font-awesome.min.css  # Internal version: 1  # https:&#x2F;&#x2F;www.algolia.com  algolia_instant_js:  algolia_instant_css:  # Internal version: 1.0.2  # See: https:&#x2F;&#x2F;github.com&#x2F;HubSpot&#x2F;pace  # Or use direct links below:  # pace: &#x2F;&#x2F;cdn.bootcss.com&#x2F;pace&#x2F;1.0.2&#x2F;pace.min.js  # pace_css: &#x2F;&#x2F;cdn.bootcss.com&#x2F;pace&#x2F;1.0.2&#x2F;themes&#x2F;blue&#x2F;pace-theme-flash.min.css  pace: https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;pace&#x2F;1.0.2&#x2F;pace.min.js  pace_css: https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;pace&#x2F;1.0.2&#x2F;themes&#x2F;blue&#x2F;pace-theme-flash.min.css<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></details><div class="custom-quote warning"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 8V13"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 15.99V16.01"></path></svg></span><p class="custom-quote-title">注意</p><p>针对自定义的静态文件(main.min.js和main.min.css)需要自行使用融合CDN，国内都需要备案域名，本博的<code>.me</code>域名没有备案资质，但我不太想将静态文件放到其他域名，所以放弃加速这类文件。</p></div><h2 id="压缩文件"><a href="#压缩文件" class="headerlink" title="压缩文件"></a>压缩文件</h2><h3 id="hexo-neat"><a href="#hexo-neat" class="headerlink" title="hexo-neat"></a>hexo-neat</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-neat --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>修改项目<code>_config.yml</code>。</p><pre class="line-numbers language-none"><code class="language-none">neat_enable: trueneat_html:  enable: true  exclude:neat_css:  enable: false  exclude:    - &#39;**&#x2F;*.min.css&#39;neat_js:  enable: false  mangle: true  output:  compress:  exclude:    - &#39;**&#x2F;*.min.js&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="custom-quote tip"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06"></path><path stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M11.99 18H12.01"></path></svg></span><p class="custom-quote-title">后面会使用<code>gulp</code>合并与压缩js与css，所以此处只用<code>neat</code>压缩了html。如果你不想使用合并js与css，此处可以打开<code>neat_js</code>、<code>neat_css</code>。</p><p>:::</p><h3 id="gulp"><a href="#gulp" class="headerlink" title="gulp"></a>gulp</h3><p><code>gulp</code>是自动化构建工具，这里主要是用来合并、压缩js与css。</p><h4 id="构建配置"><a href="#构建配置" class="headerlink" title="构建配置"></a>构建配置</h4><p><code>Next</code>主题目录自带了<code>gulpfile.coffee</code>，这里直接修改：</p><p>:::details Click to see more</p><pre class="line-numbers language-none"><code class="language-none">fs &#x3D; require(&#39;fs&#39;)path &#x3D; require(&#39;path&#39;)gulp &#x3D; require(&#39;gulp&#39;)jshint &#x3D; require(&#39;gulp-jshint&#39;) # js语法检查jslish &#x3D; require(&#39;jshint-stylish&#39;) # js语法检查输出美化stylint &#x3D; require(&#39;gulp-stylint&#39;) # stylus语法检查stylish &#x3D; require(&#39;stylint-stylish&#39;) # stylus语法检查输出美化yaml &#x3D; require(&#39;js-yaml&#39;)concat &#x3D; require(&#39;gulp-concat&#39;) # js合并uglify &#x3D; require(&quot;gulp-uglify&quot;) # js压缩concatCss &#x3D; require(&#39;gulp-concat-css&#39;) # css合并cleanCss &#x3D; require(&#39;gulp-clean-css&#39;) # css压缩# js语法检查 https:&#x2F;&#x2F;jshint.com&#x2F;docs&#x2F;options&#x2F;gulp.task &#39;lint:js&#39;, -&gt;  return gulp.src path.join(__dirname, &#39;.&#x2F;source&#x2F;js&#x2F;**&#x2F;*.js&#39;)    .pipe jshint()    .pipe jshint.reporter()# stylus语法检查 https:&#x2F;&#x2F;github.com&#x2F;SimenB&#x2F;stylintgulp.task &#39;lint:stylus&#39;, -&gt;  return gulp.src path.join(__dirname, &#39;&#x2F;source&#x2F;css&#x2F;**&#x2F;*.styl&#39;)    .pipe stylint(&#123;config: path.join(__dirname, &#39;.stylintrc&#39;)&#125;)    .pipe stylint.reporter(stylish)# 配置文件检验gulp.task &#39;validate:config&#39;, (cb) -&gt;  themeConfig &#x3D; fs.readFileSync path.join(__dirname, &#39;_config.yml&#39;)  try    yaml.safeLoad(themeConfig)    cb()  catch error    cb new Error(error)# 语言文件检验gulp.task &#39;validate:languages&#39;, (cb) -&gt;  languagesPath &#x3D; path.join __dirname, &#39;languages&#39;  languages &#x3D; fs.readdirSync languagesPath  errors &#x3D; []  for lang in languages    languagePath &#x3D; path.join languagesPath, lang    try      yaml.safeLoad fs.readFileSync(languagePath), &#123;        filename: path.relative(__dirname, languagePath)      &#125;    catch error      errors.push error  if errors.length &#x3D;&#x3D; 0    cb()  else    cb(errors)# 合并压缩js# gulp.task &#39;minify:js&#39;, [&#39;lint:js&#39;], (cb) -&gt;gulp.task &#39;minify:js&#39;, (cb) -&gt;  return gulp.src([    path.join(__dirname, &#39;source&#x2F;js&#x2F;src&#x2F;utils.js&#39;),    path.join(__dirname, &#39;source&#x2F;js&#x2F;src&#x2F;motion.js&#39;),    path.join(__dirname, &#39;source&#x2F;js&#x2F;src&#x2F;gitment.browser.js&#39;),    path.join(__dirname, &#39;source&#x2F;js&#x2F;src&#x2F;bootstrap.js&#39;),    path.join(__dirname, &#39;source&#x2F;js&#x2F;src&#x2F;scrollspy.js&#39;),    path.join(__dirname, &#39;source&#x2F;js&#x2F;src&#x2F;post-details.js&#39;),  ]).pipe concat(&#39;main.min.js&#39;)    .pipe uglify()    .pipe gulp.dest path.join __dirname, &#39;..&#x2F;..&#x2F;public&#x2F;js&#39;# 合并压缩js# gulp.task &#39;minify:css&#39;, [&#39;lint:stylus&#39;], (cb) -&gt;gulp.task &#39;minify:css&#39;, (cb) -&gt;  return gulp.src([    path.join(__dirname, &#39;..&#x2F;..&#x2F;public&#x2F;css&#x2F;main.css&#39;),    path.join(__dirname, &#39;source&#x2F;css&#x2F;src&#x2F;gitment.css&#39;),  ]).pipe concat(&#39;main.min.css&#39;)    .pipe cleanCss()    .pipe gulp.dest path.join __dirname, &#39;..&#x2F;..&#x2F;public&#x2F;css&#39;# 执行gulp.task &#39;default&#39;, [  &#39;validate:config&#39;,  &#39;validate:languages&#39;  &#39;minify:js&#39;,  &#39;minify:css&#39;,]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></div><div class="custom-quote tip"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06"></path><path stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M11.99 18H12.01"></path></svg></span><p class="custom-quote-title">提示</p><p><code>Next</code>主题默认的<code>gulpfile.coffee</code>只是进行规范检查，不过此处修改后默认关闭，按需开启。</p></div><div class="custom-quote warning"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 8V13"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 15.99V16.01"></path></svg></span><p class="custom-quote-title">注意</p><p>合并js时尽量保持模板中引入的顺序，避免不必要错误。</p></div><p>在项目根目录下新建<code>gulpfile.js</code>：</p><pre class="line-numbers language-none"><code class="language-none">require(&#39;coffeescript&#x2F;register&#39;)require(&#39;.&#x2F;themes&#x2F;next&#x2F;gulpfile.coffee&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="安装相关依赖"><a href="#安装相关依赖" class="headerlink" title="安装相关依赖"></a>安装相关依赖</h4><p>安装构建任务用到的依赖。</p><pre class="line-numbers language-none"><code class="language-none">npm install gulp -gnpm install coffeescript --save-dev # 用于在gulpfile.js中引入gulpfile.coffeenpm install gulp-clean-css --save-dev # css压缩npm install gulp-concat --save-dev # js合并npm install gulp-concat-css --save-dev # css合并npm install gulp-jshint --save-dev # js语法检查npm install gulp-stylint --save-dev # css语法检查npm install gulp-uglify --save-dev # js压缩npm install jshint --save-dev # js压缩核心npm install jshint-stylish --save-dev # js语法检查输出美化npm install stylint-stylish --save-dev # css语法检查输出美化<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="执行构建"><a href="#执行构建" class="headerlink" title="执行构建"></a>执行构建</h4><p>项目根目录执行<code>gulp</code>：</p><p><img src="https://user-images.githubusercontent.com/17662451/57032007-d1507900-6c7b-11e9-8c4f-22be1b05c910.png" alt="image"></p><p>构建输出合并与压缩后的文件：</p><p><img src="https://user-images.githubusercontent.com/17662451/57032110-23919a00-6c7c-11e9-8999-a24577e5296e.png" alt="image"></p><h4 id="更新模板"><a href="#更新模板" class="headerlink" title="更新模板"></a>更新模板</h4><p>修改<code>themes/next/layout/_partials/head.swig</code>:</p><pre class="line-numbers language-none"><code class="language-none">&lt;link href&#x3D;&quot;&#123;&#123; font_awesome_uri &#125;&#125;&quot; rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; &#x2F;&gt; &lt;link href&#x3D;&quot;&#123;&#123; url_for(theme.css) &#125;&#125;&#x2F;main.css?v&#x3D;&#123;&#123; theme.version &#125;&#125;&quot; rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; &#x2F;&gt;&lt;link href&#x3D;&quot;&#123;&#123; url_for(theme.css) &#125;&#125;&#x2F;main.min.css?v&#x3D;&#123;&#123; theme.version &#125;&#125;&quot; rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; &#x2F;&gt; &#123;% if theme.favicon.apple_touch_icon %&#125;&#123;% if theme.favicon.apple_touch_icon %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改<code>themes/next/layout/_layout.swig</code>:</p><pre class="line-numbers language-none"><code class="language-none">&#123;% include &#39;_scripts&#x2F;vendors.swig&#39; %&#125;  &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#123;&#123; url_for(theme.js) &#125;&#125;&#x2F;main.min.js?v&#x3D;&#123;&#123; theme.version &#125;&#125;&quot;&gt;&lt;&#x2F;script&gt;  &#123;% include &#39;_scripts&#x2F;commons.swig&#39; %&#125;  &#123;% include &#39;_scripts&#x2F;commons.swig&#39; %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后在各模板中将引入合并前静态文件的部分注释掉，这里不详细列出，只放出一个例子：</p><p><img src="https://user-images.githubusercontent.com/17662451/57033148-b92e2900-6c7e-11e9-88f9-c86d8bd93e11.png" alt="image"></p><p>完成后重新部署：</p><pre class="line-numbers language-none"><code class="language-none">hexo g &amp;&amp; gulp &amp;&amp; hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>引用效果：</p><p><img src="https://user-images.githubusercontent.com/17662451/57033361-52f5d600-6c7f-11e9-8857-167b5a80eccf.png" alt="image"></p><h2 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h2><p>可以显著加速文章页。</p><p>安装插件:</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-lazyload-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改项目配置文件<code>_config.yml</code>:</p><pre class="line-numbers language-none"><code class="language-none"># 图片懒加载lazyload:  enable: true   onlypost: false  loadingImg: &#x2F;images&#x2F;loading&#x2F;loading.gif #如果不填写图片则使用默认的图片<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="精简功能"><a href="#精简功能" class="headerlink" title="精简功能"></a>精简功能</h2><p>功能涉及多个请求时会比较明显得拖慢加载速度，例如<code>不蒜子</code>、<code>DaoVice</code>，要考量这些功能是否真(hua)的(er)需(bu)要(shi)。（像我已经关掉了<code>DaoVice</code>，只留着<code>不蒜子</code>计算站点UV）</p><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p>首页</p><p><img src="https://user-images.githubusercontent.com/17662451/57033434-7caefd00-6c7f-11e9-9b23-fb7f0b8b4d5d.png" alt="image"></p><p>文章页</p><p><img src="https://user-images.githubusercontent.com/17662451/57034951-6f940d00-6c83-11e9-8ae7-836267fff2b4.png" alt="image"></p><p>剩下的瓶颈主要是<code>Gitment</code>、<code>不蒜子</code>。</p><div class="custom-quote tip"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06"></path><path stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M11.99 18H12.01"></path></svg></span><p class="custom-quote-title">提示</p><p>不同网络环境下的加速效果也会不同，以上效果是我在家中的加速效果。在公司的加速效果就差了很多。</p></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;Hexo作为纯静态博客最大的优点就是快，但要真正的快起来你可能需要做这些事情。&lt;/p&gt;</summary>
    
    
    
    <category term="新手村" scheme="https://cloudycity.me/categories/%E6%96%B0%E6%89%8B%E6%9D%91/"/>
    
    
    <category term="hexo" scheme="https://cloudycity.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Github Hexo的百度收录问题</title>
    <link href="https://cloudycity.me/post/Github-Hexo%E7%9A%84%E7%99%BE%E5%BA%A6%E6%94%B6%E5%BD%95%E9%97%AE%E9%A2%98.html"/>
    <id>https://cloudycity.me/post/Github-Hexo%E7%9A%84%E7%99%BE%E5%BA%A6%E6%94%B6%E5%BD%95%E9%97%AE%E9%A2%98.html</id>
    <published>2019-04-28T09:54:27.000Z</published>
    <updated>2021-06-21T10:35:56.782Z</updated>
    
    <content type="html"><![CDATA[<p><code>Github</code>屏蔽了百度的爬虫，所以部署在<code>Github Page</code>的<code>Hexo</code>无法被百度收录，如果你绑定了自定义域名的话，这里有几个曲线救国方案。</p><span id="more"></span><h2 id="私有主机"><a href="#私有主机" class="headerlink" title="私有主机"></a>私有主机</h2><p>将博客部署到自己的机器上。</p><h2 id="对象存储"><a href="#对象存储" class="headerlink" title="对象存储"></a>对象存储</h2><p>将博客上传到对象存储。</p><h2 id="国内托管"><a href="#国内托管" class="headerlink" title="国内托管"></a>国内托管</h2><p>在国内的代码托管平台部署<code>Hexo</code>，这里推荐<a href="https://coding.net/">Coding</a>，流程与部署到<code>Github</code>基本一致。</p><h2 id="分线路解析"><a href="#分线路解析" class="headerlink" title="分线路解析"></a>分线路解析</h2><p>以<code>Github Page</code> + <code>Coding Page</code> 为例。</p><h3 id="部署多项目"><a href="#部署多项目" class="headerlink" title="部署多项目"></a>部署多项目</h3><p><code>Coding</code>的项目只需要<code>master</code>分支，<code>Hexo</code>的<code>_config.yml</code>增加仓库地址，然后执行<code>hexo d</code>便可以同时部署到两个项目。</p><p><img src="https://user-images.githubusercontent.com/17662451/56861989-f7a2ba00-69d8-11e9-85cc-9fe3e16646a0.png" alt="image"></p><h3 id="DNS解析"><a href="#DNS解析" class="headerlink" title="DNS解析"></a>DNS解析</h3><p>注意：如果要开启HTTPS，解析之前要先确保<code>Coding Page</code>的SSL证书已经申请通过，后面会说明原因。</p><p>默认解析到<code>coding.me</code>，境外解析到<code>github.io</code>。</p><p><img src="https://user-images.githubusercontent.com/17662451/56861869-cc6b9b00-69d7-11e9-9b60-236b5d6c0a6a.png" alt="image"></p><p>然后百度的爬虫在大陆就会访问到<code>Coding Page</code>，就能正常收录了。</p><div class="custom-quote warning"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 8V13"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 15.99V16.01"></path></svg></span><p class="custom-quote-title">注意</p><p><code>Coding Page</code>的一大缺点是SSL证书每三个月需要手动申请一次，并且每次申请时需要先将境外指向<code>Github Page</code>的规则先暂停（因为<code>Coding</code>的认证服务器在境外）。</p></div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>多线路解析</strong>看上去是比较优雅的解决方案。但是如果要开启HTTPS的话，相对于<code>GitHub Page</code>的自动延期SSL证书，<code>Coding Page</code>需要定期手动申请确实比较麻烦。至于其他国内的托管平台，<code>Gitcafe</code>目前无法访问，<code>Gitee Page</code>没有开启HTTPS的选项。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;code&gt;Github&lt;/code&gt;屏蔽了百度的爬虫，所以部署在&lt;code&gt;Github Page&lt;/code&gt;的&lt;code&gt;Hexo&lt;/code&gt;无法被百度收录，如果你绑定了自定义域名的话，这里有几个曲线救国方案。&lt;/p&gt;</summary>
    
    
    
    <category term="新手村" scheme="https://cloudycity.me/categories/%E6%96%B0%E6%89%8B%E6%9D%91/"/>
    
    
    <category term="hexo" scheme="https://cloudycity.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>GitHub Hexo绑定域名</title>
    <link href="https://cloudycity.me/post/GitHub-Hexo%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D.html"/>
    <id>https://cloudycity.me/post/GitHub-Hexo%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D.html</id>
    <published>2019-04-28T08:55:14.000Z</published>
    <updated>2021-06-21T10:35:56.783Z</updated>
    
    <content type="html"><![CDATA[<p>火星救援，刻不容缓！</p><span id="more"></span><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>比较流行的是<code>.me</code>顶级域名，简洁直观，不过没有备案资质。<br>这里我用的就是<code>cloudycity.me</code>。</p><h3 id="购买"><a href="#购买" class="headerlink" title="购买"></a>购买</h3><p>关于购买，这里有个非常赞的域名注册商比价网站<a href="https://www.nazhumi.com/domain/.me">哪煮迷</a>。我是在西部数码注册的，首年20续费98。</p><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><p>添加两条CNAME规则将<code>@</code>与<code>www</code>都指向<code>Github page</code>地址：</p><p><img src="https://user-images.githubusercontent.com/17662451/56861303-3123f700-69d2-11e9-8904-9dca87181e2c.png" alt="image"></p><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><h3 id="添加CNAME文件"><a href="#添加CNAME文件" class="headerlink" title="添加CNAME文件"></a>添加CNAME文件</h3><p>在<code>source</code>分支中的<code>source</code>目录下新建一个<code>CNAME</code>文件，内容为绑定的域名：</p><p><img src="https://user-images.githubusercontent.com/17662451/56861431-40577480-69d3-11e9-8c30-e23c3ac7652b.png" alt="image"></p><p>然后重新部署博客。</p><h3 id="申请HTTPS"><a href="#申请HTTPS" class="headerlink" title="申请HTTPS"></a>申请HTTPS</h3><p>到仓库设置中的<code>Github Page</code>子项中勾选<code>Enforce HTTPS</code></p><p><img src="https://user-images.githubusercontent.com/17662451/56861662-739b0300-69d5-11e9-8918-6e383f93f3da.png" alt="image"></p><div class="custom-quote warning"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 8V13"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12 15.99V16.01"></path></svg></span><p class="custom-quote-title">注意</p><p>添加<code>CNAME</code>文件之后，项目设置中会自动识别域名。刚识别完域名的1分钟内还无法勾选<code>Enforce HTTPS</code>，勾选之后要等几个小时才能生效。</p></div><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><h3 id="更新相关配置"><a href="#更新相关配置" class="headerlink" title="更新相关配置"></a>更新相关配置</h3><p>如果你的博客有插件涉及域名要记得修改，例如：</p><ol><li><p><code>gitment</code>插件用到的授权应用需要重新创建，详见<a href="https://cloudycity.me/p/9414.html#%E5%88%9B%E5%BB%BA%E6%8E%88%E6%9D%83%E5%BA%94%E7%94%A8">hexo使用github issue存放文章与评论</a></p></li><li><p><code>Next</code>主题的文章访问计数需要去<a href="https://leancloud.cn/">leancloud</a>的项目添加<code>安全域名</code></p></li></ol><p><img src="https://user-images.githubusercontent.com/17662451/56861535-48fc7a80-69d4-11e9-8431-f619a5feb8e6.png" alt="image"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;火星救援，刻不容缓！&lt;/p&gt;</summary>
    
    
    
    <category term="新手村" scheme="https://cloudycity.me/categories/%E6%96%B0%E6%89%8B%E6%9D%91/"/>
    
    
    <category term="hexo" scheme="https://cloudycity.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>使用satis搭建私有Composer库</title>
    <link href="https://cloudycity.me/post/%E4%BD%BF%E7%94%A8satis%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89Composer%E5%BA%93.html"/>
    <id>https://cloudycity.me/post/%E4%BD%BF%E7%94%A8satis%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89Composer%E5%BA%93.html</id>
    <published>2019-04-16T08:05:33.000Z</published>
    <updated>2021-06-21T10:35:56.783Z</updated>
    
    <content type="html"><![CDATA[<p>人类的本质是复读机。</p><span id="more"></span><p>最近整理项目，将一些复用的轮子封装成Composer组件，但不便于放在<a href="https://packagist.org/">packgist.org</a>，所以需要搭建私有的Composer库。</p><h2 id="开发composer组件"><a href="#开发composer组件" class="headerlink" title="开发composer组件"></a>开发composer组件</h2><p>以之前的一遍文章 <a href="/p/1734.html">Laravel/Lumen 扩展DB Builder语法</a> 的功能为例。</p><p><img src="https://user-images.githubusercontent.com/17662451/56190404-badfd600-605c-11e9-8f58-94713d61cd99.png" alt="image"></p><p>在组件项目（这里称为A项目）根目录创建<code>composer.json</code>。</p><pre class="line-numbers language-JSON" data-language="JSON"><code class="language-JSON">&#123;    &quot;name&quot;: &quot;xuyang&#x2F;laravel-builder-ext&quot;,    &quot;type&quot;: &quot;library&quot;,    &quot;description&quot;: &quot;扩展Laravel DB Builder的查询语法&quot;,    &quot;keywords&quot;: [&quot;laravel&quot;, &quot;db&quot;, &quot;builder&quot;, &quot;extend&quot;],    &quot;license&quot;: &quot;MIT&quot;,    &quot;authors&quot;: [        &#123;            &quot;name&quot;: &quot;cloudycity&quot;,            &quot;email&quot;: &quot;cloudycity@foxmail.com&quot;        &#125;    ],    &quot;minimum-stability&quot;: &quot;dev&quot;,    &quot;require&quot;: &#123;        &quot;php&quot;: &quot;&gt;&#x3D;5.4.0&quot;,        &quot;laravel&#x2F;framework&quot; : &quot;^5.2&quot;    &#125;,    &quot;require-dev&quot;: &#123;        &quot;phpunit&#x2F;phpunit&quot;: &quot;4.*&quot;    &#125;,    &quot;autoload&quot;: &#123;        &quot;psr-4&quot;: &#123; &quot;Xuyang\\LaravelBuilderExt\\&quot;: &quot;src&#x2F;&quot; &#125;    &#125;,    &quot;extra&quot;: &#123;        &quot;branch-alias&quot;: &#123;            &quot;dev-master&quot;: &quot;1.0.0-dev&quot;        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后传上<code>gitlab</code>。</p><h2 id="搭建satis并索引组件"><a href="#搭建satis并索引组件" class="headerlink" title="搭建satis并索引组件"></a>搭建satis并索引组件</h2><h3 id="安装satis"><a href="#安装satis" class="headerlink" title="安装satis"></a>安装satis</h3><h4 id="使用composer-方法一"><a href="#使用composer-方法一" class="headerlink" title="使用composer (方法一)"></a>使用composer (方法一)</h4><pre class="line-numbers language-SHELL" data-language="SHELL"><code class="language-SHELL">$ cd &#x2F;data&#x2F;www&#x2F;$ composer create-project composer&#x2F;satis --keep-vcs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://user-images.githubusercontent.com/17662451/56189758-54a68380-605b-11e9-9ddc-1e6d97c65172.png" alt="image"></p><h4 id="使用docker-方法二"><a href="#使用docker-方法二" class="headerlink" title="使用docker (方法二)"></a>使用docker (方法二)</h4><pre class="line-numbers language-SHELL" data-language="SHELL"><code class="language-SHELL">$ docker pull composer&#x2F;satis<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="配置satis"><a href="#配置satis" class="headerlink" title="配置satis"></a>配置satis</h3><p>进入到satis项目根目录下创建<code>satis.json</code>。</p><pre class="line-numbers language-JSON" data-language="JSON"><code class="language-JSON">&#123;    &quot;name&quot;: &quot;私有Composer库&quot;,    &quot;homepage&quot;: &quot;http:&#x2F;&#x2F;satis.example.com&quot;,    &quot;repositories&quot;: [        &#123; &quot;type&quot;: &quot;git&quot;, &quot;url&quot;: &quot;ssh:&#x2F;&#x2F;git@gitlab.example.com&#x2F;sub&#x2F;laravel-builder-ext.git&quot; &#125;    ],    &quot;require&quot;: &#123;        &quot;company&#x2F;package&quot;: &quot;dev-master&quot;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h3><h4 id="使用composer-方法一-1"><a href="#使用composer-方法一-1" class="headerlink" title="使用composer (方法一)"></a>使用composer (方法一)</h4><pre class="line-numbers language-SHELL" data-language="SHELL"><code class="language-SHELL">$ php bin&#x2F;satis build satis.json .&#x2F;web-v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://user-images.githubusercontent.com/17662451/56189642-06918000-605b-11e9-9d9e-fe163f210cd9.png" alt="image"></p><p>这里的<code>web</code>就是索引输出目录。</p><h4 id="使用docker-方法二-1"><a href="#使用docker-方法二-1" class="headerlink" title="使用docker (方法二)"></a>使用docker (方法二)</h4><pre class="line-numbers language-SHELL" data-language="SHELL"><code class="language-SHELL">$ docker run --rm -it -v &#x2F;build:&#x2F;build composer&#x2F;satis<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="自动索引"><a href="#自动索引" class="headerlink" title="自动索引"></a>自动索引</h4><p>最简单粗暴的方法是用<code>crontab</code>，但这里推荐使用<code>GitLab Web Hook</code>:</p><ol><li>在satis项目创建一个接口执行创建索引的操作。</li></ol><p><img src="https://user-images.githubusercontent.com/17662451/56270290-5c802980-6128-11e9-9354-9ff765d80059.png" alt="image"></p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&lt;?php$valid_token &#x3D; &#39;3.1415926535857&#39;; &#x2F;&#x2F; GitLab web hook的token$valid_ip &#x3D; [&#39;127.0.0.1&#39;]; &#x2F;&#x2F; GitLab服务器IP$client_token &#x3D; $_SERVER[&#39;HTTP_X_GITLAB_TOKEN&#39;];$client_ip &#x3D; $_SERVER[&#39;REMOTE_ADDR&#39;];if ($client_token !&#x3D;&#x3D; $valid_token) die(&#39;Token mismatch!&#39;);if (!in_array($client_ip, $valid_ip)) die(&#39;Ip mismatch!&#39;);$ouptut &#x3D; [];exec(&quot;cd &#x2F;data&#x2F;www&#x2F;satis&#x2F;; php bin&#x2F;satis build satis.json .&#x2F;web -v 2&gt;&amp;1&quot;, $output); &#x2F;&#x2F; 创建索引的命令var_dump($output);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>在组件的<code>GitLab</code>仓库中增加<code>Web Hook</code></li></ol><p><img src="https://user-images.githubusercontent.com/17662451/56270713-5dfe2180-6129-11e9-9e65-69ab50affed9.png" alt="image"></p><p>每次组件推送新提交之后都会触发钩子请求satis创建索引。</p><h3 id="配置Nginx-可选"><a href="#配置Nginx-可选" class="headerlink" title="配置Nginx (可选)"></a>配置Nginx (可选)</h3><p>将<code>satis.json</code>中的<code>homepage</code>指向索引输出目录，然后就可以访问satis的界面。</p><p><img src="https://user-images.githubusercontent.com/17662451/56188680-b9141380-6058-11e9-9611-aca18f7ded14.png" alt="image"></p><h3 id="添加部署密钥-可选"><a href="#添加部署密钥-可选" class="headerlink" title="添加部署密钥 (可选)"></a>添加部署密钥 (可选)</h3><p>如果<code>satis</code>所在机器没有权限拉取<code>gitlab</code>仓库，需要生成key并加入到<code>gitlab</code>的<code>Deploy Keys</code>(只读)中。</p><p><img src="https://user-images.githubusercontent.com/17662451/56188612-8cf89280-6058-11e9-93c9-856247fee03c.png" alt="image"></p><h2 id="从satis引入composer组件"><a href="#从satis引入composer组件" class="headerlink" title="从satis引入composer组件"></a>从satis引入composer组件</h2><p>修改使用A项目组件的项目（这里称B项目）的<code>composer.json</code>，加上私有库源：</p><pre class="line-numbers language-JSON" data-language="JSON"><code class="language-JSON">    ...    &quot;config&quot;: &#123;        &quot;preferred-install&quot;: &quot;dist&quot;,        &quot;secure-http&quot;: false     &#125;,    &quot;repositories&quot;: [&#123;        &quot;type&quot;: &quot;composer&quot;,        &quot;url&quot;: &quot;http:&#x2F;&#x2F;satis.example.com&quot;    &#125;]&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="custom-quote tip"><span class="custom-quote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06"></path><path stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M11.99 18H12.01"></path></svg></span><p class="custom-quote-title">提示</p><p><code>&quot;secure-http&quot;: false</code>是可选项，当你的私有库地址不支持https时才需要加上。</p></div><p>然后正常引入即可：</p><p><img src="https://user-images.githubusercontent.com/17662451/56192258-94bc3500-6060-11e9-89b7-e29004dd2df5.png" alt="image"></p><p><img src="https://user-images.githubusercontent.com/17662451/56192137-57f03e00-6060-11e9-8934-5a8d98178846.png" alt="image"></p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p><a href="https://segmentfault.com/a/1190000008509463#articleHeader8">使用satis自建私有镜像</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;人类的本质是复读机。&lt;/p&gt;</summary>
    
    
    
    <category term="php" scheme="https://cloudycity.me/categories/php/"/>
    
    
    <category term="composer" scheme="https://cloudycity.me/tags/composer/"/>
    
  </entry>
  
  <entry>
    <title>如何更好的通过IDE代码检查</title>
    <link href="https://cloudycity.me/post/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%9A%84%E9%80%9A%E8%BF%87IDE%E4%BB%A3%E7%A0%81%E6%A3%80%E6%9F%A5.html"/>
    <id>https://cloudycity.me/post/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%9A%84%E9%80%9A%E8%BF%87IDE%E4%BB%A3%E7%A0%81%E6%A3%80%E6%9F%A5.html</id>
    <published>2019-04-12T10:14:54.000Z</published>
    <updated>2021-06-21T10:35:56.783Z</updated>
    
    <content type="html"><![CDATA[<p>我身边有很多同事都没有重视代码检查，每次看他们IDE右侧都是一边红黄棕交错的“线谱”，特别难受。让自己的代码通过IDE的检查，可以避免很多低级的错误。下面分享下如何更好地通过Intellij系列IDE的代码检查。</p><span id="more"></span><h2 id="目标是什么"><a href="#目标是什么" class="headerlink" title="目标是什么"></a>目标是什么</h2><p>目标是无任何notice，包括英文的拼写检查。</p><p><img src="https://user-images.githubusercontent.com/17662451/56026151-2b79b080-5d46-11e9-942a-cf3a6e2f1251.png" alt="image"></p><h2 id="为什么要达成目标"><a href="#为什么要达成目标" class="headerlink" title="为什么要达成目标"></a>为什么要达成目标</h2><p>通过代码检查可以：</p><ol><li>一定程度上规范开发</li><li>更容易发现bug，避免低级错误</li></ol><h2 id="如何达成目标"><a href="#如何达成目标" class="headerlink" title="如何达成目标"></a>如何达成目标</h2><h3 id="遵守必要规则"><a href="#遵守必要规则" class="headerlink" title="遵守必要规则"></a>遵守必要规则</h3><p>至于判断【规则是否必要】的标准因人而异，但确定是【必要规则】就必须遵守，这是代码检查的意义。</p><h3 id="关闭不必要规则"><a href="#关闭不必要规则" class="headerlink" title="关闭不必要规则"></a>关闭不必要规则</h3><h4 id="全局关闭"><a href="#全局关闭" class="headerlink" title="全局关闭"></a>全局关闭</h4><p>不必要的检查规则，例如<code>No data sources configured</code>、<code>SQL dialect detection</code>等等，可以将其关闭。</p><p>在<code>Inspection Notice</code>处按<code>Alt+Enter</code>打开<code>Inspection setting</code>：</p><p><img src="https://user-images.githubusercontent.com/17662451/56027292-5bc24e80-5d48-11e9-971b-5287659b78b2.png" alt="image"></p><p>去掉勾：</p><p><img src="https://user-images.githubusercontent.com/17662451/56027516-c7a4b700-5d48-11e9-8f69-378e1813e4c0.png" alt="image"></p><p>效果：</p><p><img src="https://user-images.githubusercontent.com/17662451/56027837-66311800-5d49-11e9-988b-3e62fc334866.png" alt="image"></p><h4 id="单次忽略"><a href="#单次忽略" class="headerlink" title="单次忽略"></a>单次忽略</h4><p>有些规则是必要的，但因为某些原因我们无法遵守。可以选择<code>Suppress for statement</code>，将会自动在Notice前加入一行注释告诉IDE忽略掉此处的检查。</p><h3 id="引导IDE"><a href="#引导IDE" class="headerlink" title="引导IDE"></a>引导IDE</h3><p>某些场景规则是必要的，我们也遵守了，只是IDE没有get到仍标出Notice，这时候就需要想办法引导IDE去get到。</p><h4 id="添加注释"><a href="#添加注释" class="headerlink" title="添加注释"></a>添加注释</h4><p>以常见的闭包Notice为例，内部都会报warning：</p><p><img src="https://user-images.githubusercontent.com/17662451/56028531-ed32c000-5d4a-11e9-9366-9f4317722243.png" alt="image"></p><p>使用<code>/** @var 变量类型 $var */</code>声明</p><p><img src="https://user-images.githubusercontent.com/17662451/56028596-15222380-5d4b-11e9-9708-fcc929688472.png" alt="image"></p><h4 id="添加助手文件"><a href="#添加助手文件" class="headerlink" title="添加助手文件"></a>添加助手文件</h4><p>IDE无法识别<code>Laravel</code>的<code>Facade</code>的静态调用方式</p><p><img src="https://user-images.githubusercontent.com/17662451/56030055-7eeffc80-5d4e-11e9-948d-ca0babc090ec.png" alt="image"></p><p>这时候需要创建额外的助手文件<code>ide-helper.php</code>，里面存放类声明：</p><p><img src="https://user-images.githubusercontent.com/17662451/56029813-dd68ab00-5d4d-11e9-943b-b6ba5ba3fed2.png" alt="image"></p><p>IDE识别后：</p><p><img src="https://user-images.githubusercontent.com/17662451/56030160-c2e30180-5d4e-11e9-9c1d-ec7520ddf42d.png" alt="image"></p><p>P.S. 助手文件本身是可以忽略检查，即选择<code>suppress all for file</code>项。</p><h3 id="拼写检查"><a href="#拼写检查" class="headerlink" title="拼写检查"></a>拼写检查</h3><p>英文拼写检查的优先级比较低，但能遵守的话可以避免一些奇怪的命名</p><h4 id="使用下划线或驼峰通过检查"><a href="#使用下划线或驼峰通过检查" class="headerlink" title="使用下划线或驼峰通过检查"></a>使用下划线或驼峰通过检查</h4><p><img src="https://user-images.githubusercontent.com/17662451/56073778-c6709a00-5ddb-11e9-81ea-45060bd96408.png" alt="image"></p><h4 id="将专有名词加入字典"><a href="#将专有名词加入字典" class="headerlink" title="将专有名词加入字典"></a>将专有名词加入字典</h4><p><img src="https://user-images.githubusercontent.com/17662451/56073788-e607c280-5ddb-11e9-97b4-5c613d17658e.png" alt="image"></p><p><img src="https://user-images.githubusercontent.com/17662451/56073791-ed2ed080-5ddb-11e9-951f-01978e085219.png" alt="image"></p><h4 id="给随机字符串添加忽略注释"><a href="#给随机字符串添加忽略注释" class="headerlink" title="给随机字符串添加忽略注释"></a>给随机字符串添加忽略注释</h4><p><img src="https://user-images.githubusercontent.com/17662451/56073816-439c0f00-5ddc-11e9-8547-e9c518f623f3.png" alt="image"></p><p><img src="https://user-images.githubusercontent.com/17662451/56073819-4ac31d00-5ddc-11e9-8cd4-9272251938f7.png" alt="image"></p><p><img src="https://user-images.githubusercontent.com/17662451/56073831-5878a280-5ddc-11e9-990f-36b9b6d5a8ae.png" alt="image"></p><h3 id="导出-导入配置"><a href="#导出-导入配置" class="headerlink" title="导出/导入配置"></a>导出/导入配置</h3><p>导出配置以备份、与团队成员共享</p><p><img src="https://user-images.githubusercontent.com/17662451/56073885-befdc080-5ddc-11e9-80d8-a320054ccdc0.png" alt="image"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;我身边有很多同事都没有重视代码检查，每次看他们IDE右侧都是一边红黄棕交错的“线谱”，特别难受。让自己的代码通过IDE的检查，可以避免很多低级的错误。下面分享下如何更好地通过Intellij系列IDE的代码检查。&lt;/p&gt;</summary>
    
    
    
    <category term="新手村" scheme="https://cloudycity.me/categories/%E6%96%B0%E6%89%8B%E6%9D%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Laravel/Lumen 扩展DB Builder语法</title>
    <link href="https://cloudycity.me/post/Laravel-Lumen-%E6%89%A9%E5%B1%95DB-Builder%E8%AF%AD%E6%B3%95.html"/>
    <id>https://cloudycity.me/post/Laravel-Lumen-%E6%89%A9%E5%B1%95DB-Builder%E8%AF%AD%E6%B3%95.html</id>
    <published>2019-04-12T08:24:51.000Z</published>
    <updated>2021-06-21T10:35:56.783Z</updated>
    
    <content type="html"><![CDATA[<p>截至<code>5.6</code>版本，<code>Laravel</code>的DB Builder都没有方法实现<code>忽略插入</code>与<code>插入或更新</code>（<code>5.7</code>版本新增<code>updateOrInsert()</code>）。除了自己封装多一层之外，还有一个更优雅的解决方案是对Builder语法进行扩展。</p><span id="more"></span><h2 id="扩展支持的语法"><a href="#扩展支持的语法" class="headerlink" title="扩展支持的语法"></a>扩展支持的语法</h2><p>这里要扩展的是三个常用的语法: </p><ol><li><code>INSERT IGNORE INTO</code></li><li><code>REPLACE INTO</code></li><li><code>INSERT INTO ... ON DUPLICATE KEY UPDATE</code></li></ol><h2 id="扩展Builder类"><a href="#扩展Builder类" class="headerlink" title="扩展Builder类"></a>扩展Builder类</h2><p><code>Laravel</code>官方已经在<code>Illuminate\Database</code>包中提供了扩展实例，需要创建自定义的<code>Grammar</code>、<code>Builder</code>、<code>Connection</code>类，然后由服务提供者注册。</p><h3 id="自定义Grammar"><a href="#自定义Grammar" class="headerlink" title="自定义Grammar"></a>自定义Grammar</h3><details class="custom-details"><summary>Click to see more</summary><p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&lt;?phpnamespace App\Library\Database\Query\Grammars;use Illuminate\Database\Query\Grammars\MySqlGrammar as Grammar;use App\Library\Database\Query\MySqlBuilder as Builder;class MySqlGrammar extends Grammar&#123;    &#x2F;**     * Compile a replace into statement into SQL.     *     * @link https:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;5.5&#x2F;en&#x2F;replace.html     *     * @param  \App\Library\Database\Query\MySqlBuilder $query     * @param  array $values     * @return string     *&#x2F;    public function compileReplace(Builder $query, array $values)    &#123;        &#x2F;&#x2F; Essentially we will force every insert to be treated as a batch insert which        &#x2F;&#x2F; simply makes creating the SQL easier for us since we can utilize the same        &#x2F;&#x2F; basic routine regardless of an amount of records given to us to insert.        $table &#x3D; $this-&gt;wrapTable($query-&gt;from);        if (!is_array(reset($values))) &#123;            $values &#x3D; [$values];        &#125;        $columns &#x3D; $this-&gt;columnize(array_keys(reset($values)));        &#x2F;&#x2F; We need to build a list of parameter place-holders of values that are bound        &#x2F;&#x2F; to the query. Each insert should have the exact same amount of parameter        &#x2F;&#x2F; bindings so we will loop through the record and parameterize them all.        $parameters &#x3D; [];        foreach ($values as $record) &#123;            $parameters[] &#x3D; &#39;(&#39; . $this-&gt;parameterize($record) . &#39;)&#39;;        &#125;        $parameters &#x3D; implode(&#39;, &#39;, $parameters);        return &quot;REPLACE INTO $table ($columns) VALUES $parameters&quot;;    &#125;    &#x2F;**     * Compile an insert ignore statement into SQL.     *     * @link https:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;5.5&#x2F;en&#x2F;insert.html     *     * @param  \App\Library\Database\Query\MySqlBuilder $query     * @param  array $values     * @return string     *&#x2F;    public function compileInsertIgnore(Builder $query, array $values)    &#123;        &#x2F;&#x2F; Essentially we will force every insert to be treated as a batch insert which        &#x2F;&#x2F; simply makes creating the SQL easier for us since we can utilize the same        &#x2F;&#x2F; basic routine regardless of an amount of records given to us to insert.        $table &#x3D; $this-&gt;wrapTable($query-&gt;from);        if (!is_array(reset($values))) &#123;            $values &#x3D; [$values];        &#125;        $columns &#x3D; $this-&gt;columnize(array_keys(reset($values)));        &#x2F;&#x2F; We need to build a list of parameter place-holders of values that are bound        &#x2F;&#x2F; to the query. Each insert should have the exact same amount of parameter        &#x2F;&#x2F; bindings so we will loop through the record and parameterize them all.        $parameters &#x3D; [];        foreach ($values as $record) &#123;            $parameters[] &#x3D; &#39;(&#39; . $this-&gt;parameterize($record) . &#39;)&#39;;        &#125;        $parameters &#x3D; implode(&#39;, &#39;, $parameters);        return &quot;INSERT IGNORE INTO $table ($columns) VALUES $parameters&quot;;    &#125;    &#x2F;**     * Compile an insert update statement into SQL.     *     * @link https:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;8.0&#x2F;en&#x2F;insert-on-duplicate.html     * @link https:&#x2F;&#x2F;gist.github.com&#x2F;RuGa&#x2F;5354e44883c7651fd15c     *     * @param  \App\Library\Database\Query\MySqlBuilder $query     * @param  array $values     * @return string     *&#x2F;    public function compileInsertUpdate(Builder $query, array $values)    &#123;        &#x2F;&#x2F; Essentially we will force every insert to be treated as a batch insert which        &#x2F;&#x2F; simply makes creating the SQL easier for us since we can utilize the same        &#x2F;&#x2F; basic routine regardless of an amount of records given to us to insert.        $table &#x3D; $this-&gt;wrapTable($query-&gt;from);        $columnNames &#x3D; array_keys(reset($values));        $columns &#x3D; $this-&gt;columnize($columnNames);        $parameters &#x3D; implode(&#39;,&#39;, array_map(function ($row) &#123;            return &#39;(&#39; . $this-&gt;parameterize($row) . &#39;)&#39;;        &#125;, $values));        $updates &#x3D; implode(&#39;,&#39;, array_map(function ($columnName) &#123;            return $this-&gt;wrap($columnName) . &#39; &#x3D; VALUES(&#39; . $this-&gt;wrap($columnName) . &#39;)&#39;;        &#125;, $columnNames));        return &quot;INSERT INTO $table ($columns) VALUES $parameters ON DUPLICATE KEY UPDATE $updates&quot;;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></details><h3 id="自定义Builder"><a href="#自定义Builder" class="headerlink" title="自定义Builder"></a>自定义Builder</h3><p>:::details Click to see more</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&lt;?phpnamespace App\Library\Database\Query;use Illuminate\Database\Query\Builder as QueryBuilder;class MySqlBuilder extends QueryBuilder&#123;    &#x2F;**     * The database query grammar instance.     *     * @var Grammars\MySqlGrammar     *&#x2F;    public $grammar;    &#x2F;**     * Insert a new record into the database, replace on primary key conflict.     *     * @param  array $values     * @return bool     *&#x2F;    public function replace(array $values)    &#123;        if (empty($values)) &#123;            return true;        &#125;        &#x2F;&#x2F; Since every insert gets treated like a batch insert, we will make sure the        &#x2F;&#x2F; bindings are structured in a way that is convenient for building these        &#x2F;&#x2F; inserts statements by verifying the elements are actually an array.        if (!is_array(reset($values))) &#123;            $values &#x3D; [$values];        &#125;        &#x2F;&#x2F; Since every insert gets treated like a batch insert, we will make sure the        &#x2F;&#x2F; bindings are structured in a way that is convenient for building these        &#x2F;&#x2F; inserts statements by verifying the elements are actually an array.        else &#123;            foreach ($values as $key &#x3D;&gt; $value) &#123;                ksort($value);                $values[$key] &#x3D; $value;            &#125;        &#125;        &#x2F;&#x2F; We&#39;ll treat every insert like a batch insert so we can easily insert each        &#x2F;&#x2F; of the records into the database consistently. This will make it much        &#x2F;&#x2F; easier on the grammars to just handle one type of record insertion.        $bindings &#x3D; [];        foreach ($values as $record) &#123;            foreach ($record as $value) &#123;                $bindings[] &#x3D; $value;            &#125;        &#125;        $sql &#x3D; $this-&gt;grammar-&gt;compileReplace($this, $values);        &#x2F;&#x2F; Once we have compiled the insert statement&#39;s SQL we can execute it on the        &#x2F;&#x2F; connection and return a result as a boolean success indicator as that        &#x2F;&#x2F; is the same type of result returned by the raw connection instance.        $bindings &#x3D; $this-&gt;cleanBindings($bindings);        return $this-&gt;connection-&gt;insert($sql, $bindings);    &#125;    &#x2F;**     * Insert a new record into the database, update on primary key conflict.     *     * @param  array $values     * @return bool     *&#x2F;    public function insertUpdate(array $values)    &#123;        if (empty($values)) &#123;            return true;        &#125;        &#x2F;&#x2F; Since every insert gets treated like a batch insert, we will make sure the        &#x2F;&#x2F; bindings are structured in a way that is convenient for building these        &#x2F;&#x2F; inserts statements by verifying the elements are actually an array.        if (!is_array(reset($values))) &#123;            $values &#x3D; [$values];        &#125; &#x2F;&#x2F; Sort the keys in each row alphabetically for consistency        else &#123;            foreach ($values as $key &#x3D;&gt; $value) &#123;                ksort($value);                $values[$key] &#x3D; $value;            &#125;        &#125;        &#x2F;&#x2F; We&#39;ll treat every insert like a batch insert so we can easily insert each        &#x2F;&#x2F; of the records into the database consistently. This will make it much        &#x2F;&#x2F; easier on the grammars to just handle one type of record insertion.        $bindings &#x3D; [];        foreach ($values as $record) &#123;            foreach ($record as $value) &#123;                $bindings[] &#x3D; $value;            &#125;        &#125;        $sql &#x3D; $this-&gt;grammar-&gt;compileInsertUpdate($this, $values);        &#x2F;&#x2F; Once we have compiled the insert statement&#39;s SQL we can execute it on the        &#x2F;&#x2F; connection and return a result as a boolean success indicator as that        &#x2F;&#x2F; is the same type of result returned by the raw connection instance.        $bindings &#x3D; $this-&gt;cleanBindings($bindings);        return $this-&gt;connection-&gt;insert($sql, $bindings);    &#125;    &#x2F;**     * Insert a new record into the database, discard on primary key conflict.     *     * @param  array $values     * @return bool     *&#x2F;    public function insertIgnore(array $values)    &#123;        if (empty($values)) &#123;            return true;        &#125;        &#x2F;&#x2F; Since every insert gets treated like a batch insert, we will make sure the        &#x2F;&#x2F; bindings are structured in a way that is convenient for building these        &#x2F;&#x2F; inserts statements by verifying the elements are actually an array.        if (!is_array(reset($values))) &#123;            $values &#x3D; [$values];        &#125;        &#x2F;&#x2F; Since every insert gets treated like a batch insert, we will make sure the        &#x2F;&#x2F; bindings are structured in a way that is convenient for building these        &#x2F;&#x2F; inserts statements by verifying the elements are actually an array.        else &#123;            foreach ($values as $key &#x3D;&gt; $value) &#123;                ksort($value);                $values[$key] &#x3D; $value;            &#125;        &#125;                &#x2F;&#x2F; We&#39;ll treat every insert like a batch insert so we can easily insert each        &#x2F;&#x2F; of the records into the database consistently. This will make it much        &#x2F;&#x2F; easier on the grammars to just handle one type of record insertion.        $bindings &#x3D; [];        foreach ($values as $record) &#123;            foreach ($record as $value) &#123;                $bindings[] &#x3D; $value;            &#125;        &#125;        $sql &#x3D; $this-&gt;grammar-&gt;compileInsertIgnore($this, $values);        &#x2F;&#x2F; Once we have compiled the insert statement&#39;s SQL we can execute it on the        &#x2F;&#x2F; connection and return a result as a boolean success indicator as that        &#x2F;&#x2F; is the same type of result returned by the raw connection instance.        $bindings &#x3D; $this-&gt;cleanBindings($bindings);        return $this-&gt;connection-&gt;insert($sql, $bindings);    &#125;&#125;:::<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="自定义Connection"><a href="#自定义Connection" class="headerlink" title="自定义Connection"></a>自定义Connection</h3><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&lt;?phpnamespace App\Library\Database;use App\Library\Database\Query\MySqlBuilder as Builder;use App\Library\Database\Query\Grammars\MySqlGrammar as QueryGrammar;use Illuminate\Database\MySqlConnection as Connection;class MySqlConnection extends Connection&#123;    &#x2F;**     * Get the default query grammar instance.     *     * @return \Illuminate\Database\Grammar|\Illuminate\Database\Query\Grammars\MySqlGrammar     *&#x2F;    protected function getDefaultQueryGrammar()    &#123;        return $this-&gt;withTablePrefix(new QueryGrammar);    &#125;    &#x2F;**     * Get a new query builder instance.     *     * @return \App\Library\Database\Query\MySqlBuilder     *&#x2F;    public function query()    &#123;        return new Builder(            $this, $this-&gt;getQueryGrammar(), $this-&gt;getPostProcessor()        );    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="自定义Provider"><a href="#自定义Provider" class="headerlink" title="自定义Provider"></a>自定义Provider</h3><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&lt;?phpnamespace App\Providers;use App\Library\Database\MySqlConnection;use Illuminate\Support\ServiceProvider;class DatabaseServiceProvider extends ServiceProvider&#123;    &#x2F;**     * Override the default connection for MySQL. This allows us to use &#96;replace&#96; etc.     *     * @link https:&#x2F;&#x2F;stidges.com&#x2F;extending-the-connection-class-in-laravel     * @link https:&#x2F;&#x2F;gist.github.com&#x2F;VinceG&#x2F;0fb570925748ab35bc53f2a798cb517c     *     * @return void     *&#x2F;    public function boot()    &#123;        Connection::resolverFor(&#39;mysql&#39;, function ($connection, $database, $prefix, $config) &#123;            return new MySqlConnection($connection, $database, $prefix, $config);        &#125;); &#x2F;&#x2F; 5.4及以上版本使用此方式绑定    &#125;    &#x2F;**     * Register the service provider.     *     * @return void     *&#x2F;    public function register()    &#123;        $this-&gt;app-&gt;bind(&#39;db.connection.mysql&#39;, MySqlConnection::class); &#x2F;&#x2F; 5.4版本以下使用此方式绑定    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="注册Provider"><a href="#注册Provider" class="headerlink" title="注册Provider"></a>注册Provider</h3><h4 id="Laravel"><a href="#Laravel" class="headerlink" title="Laravel"></a>Laravel</h4><p>在<code>config/app.php</code>里的<code>providers</code>中添加新的Provider类:</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&#39;providers&#39; &#x3D;&gt; [    &#x2F;&#x2F; 其他的服务提供者    App\Providers\AppServiceProvider::class,],<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Lumen"><a href="#Lumen" class="headerlink" title="Lumen"></a>Lumen</h4><p>在<code>bootstrap/app.php</code>中手动绑定:</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&#x2F;&#x2F; 扩展的查询语法：Replace、InsertIgnore、InsertUpdate$app-&gt;register(App\Providers\DatabaseServiceProvider::class);return $app;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用Demo"><a href="#使用Demo" class="headerlink" title="使用Demo"></a>使用Demo</h2><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">$data &#x3D; [    &#39;name&#39; &#x3D;&gt; &#39;soap&#39;,    &#39;status&#39; &#x3D;&gt; &#39;kia&#39;];\DB::connection(&#39;cod8&#39;)-&gt;table(&#39;141_members&#39;)-&gt;insertUpdate($data);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意这里输入<code>\DB::connection()-&gt;table()-&gt;</code>之后IDE不会提示扩展的方法，只能在封装类中声明是自定义的Builder以获得提示。<br><img src="https://user-images.githubusercontent.com/17662451/56022322-f701f680-5d3d-11e9-9c71-c588d54f13bb.png" alt="image"><br><img src="https://user-images.githubusercontent.com/17662451/56022249-d5a10a80-5d3d-11e9-8a57-66fabfaa03b3.png" alt="QQ截图20190412161418"></p><h2 id="封装成组件"><a href="#封装成组件" class="headerlink" title="封装成组件"></a>封装成组件</h2><p>参照<a href="https://cloudycity.me/p/eee3.html">使用satis搭建私有Composer库</a></p><h2 id="Refrences"><a href="#Refrences" class="headerlink" title="Refrences"></a>Refrences</h2><p><a href="https://stidges.com/extending-the-connection-class-in-laravel">https://stidges.com/extending-the-connection-class-in-laravel</a><br><a href="https://gist.github.com/VinceG/0fb570925748ab35bc53f2a798cb517c">https://gist.github.com/VinceG/0fb570925748ab35bc53f2a798cb517c</a><br><a href="https://github.com/art-institute-of-chicago/data-service-images">https://github.com/art-institute-of-chicago/data-service-images</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;截至&lt;code&gt;5.6&lt;/code&gt;版本，&lt;code&gt;Laravel&lt;/code&gt;的DB Builder都没有方法实现&lt;code&gt;忽略插入&lt;/code&gt;与&lt;code&gt;插入或更新&lt;/code&gt;（&lt;code&gt;5.7&lt;/code&gt;版本新增&lt;code&gt;updateOrInsert()&lt;/code&gt;）。除了自己封装多一层之外，还有一个更优雅的解决方案是对Builder语法进行扩展。&lt;/p&gt;</summary>
    
    
    
    <category term="php" scheme="https://cloudycity.me/categories/php/"/>
    
    
    <category term="laravel" scheme="https://cloudycity.me/tags/laravel/"/>
    
  </entry>
  
</feed>
