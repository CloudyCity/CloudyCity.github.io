{"title":"使用satis搭建私有Composer库","uid":"ad23f6f0a2b244ea9443c9602b422b7a","slug":"使用satis搭建私有Composer库","date":"2019-04-16T08:05:33.000Z","updated":"2021-06-22T01:56:47.317Z","comments":true,"path":"api/articles/使用satis搭建私有Composer库.json","cover":"https://magently.com/app/uploads/2019/08/satis-1.jpg","content":"<p>人类的本质是复读机。</p>\n<span id=\"more\"></span>\n<p>最近整理项目，将一些复用的轮子封装成Composer组件，但不便于放在<a href=\"https://packagist.org/\">packgist.org</a>，所以需要搭建私有的Composer库。</p>\n<h2 id=\"开发composer组件\"><a href=\"#开发composer组件\" class=\"headerlink\" title=\"开发composer组件\"></a>开发composer组件</h2><p>以之前的一遍文章 <a href=\"/p/1734.html\">Laravel/Lumen 扩展DB Builder语法</a> 的功能为例。</p>\n<p><img src=\"https://user-images.githubusercontent.com/17662451/56190404-badfd600-605c-11e9-8f58-94713d61cd99.png\" alt=\"image\"></p>\n<p>在组件项目（这里称为A项目）根目录创建<code>composer.json</code>。</p>\n<pre class=\"line-numbers language-JSON\" data-language=\"JSON\"><code class=\"language-JSON\">&#123;\n    &quot;name&quot;: &quot;xuyang&#x2F;laravel-builder-ext&quot;,\n    &quot;type&quot;: &quot;library&quot;,\n    &quot;description&quot;: &quot;扩展Laravel DB Builder的查询语法&quot;,\n    &quot;keywords&quot;: [&quot;laravel&quot;, &quot;db&quot;, &quot;builder&quot;, &quot;extend&quot;],\n    &quot;license&quot;: &quot;MIT&quot;,\n    &quot;authors&quot;: [\n        &#123;\n            &quot;name&quot;: &quot;cloudycity&quot;,\n            &quot;email&quot;: &quot;cloudycity@foxmail.com&quot;\n        &#125;\n    ],\n    &quot;minimum-stability&quot;: &quot;dev&quot;,\n    &quot;require&quot;: &#123;\n        &quot;php&quot;: &quot;&gt;&#x3D;5.4.0&quot;,\n        &quot;laravel&#x2F;framework&quot; : &quot;^5.2&quot;\n    &#125;,\n    &quot;require-dev&quot;: &#123;\n        &quot;phpunit&#x2F;phpunit&quot;: &quot;4.*&quot;\n    &#125;,\n    &quot;autoload&quot;: &#123;\n        &quot;psr-4&quot;: &#123; &quot;Xuyang\\\\LaravelBuilderExt\\\\&quot;: &quot;src&#x2F;&quot; &#125;\n    &#125;,\n    &quot;extra&quot;: &#123;\n        &quot;branch-alias&quot;: &#123;\n            &quot;dev-master&quot;: &quot;1.0.0-dev&quot;\n        &#125;\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>最后传上<code>gitlab</code>。</p>\n<h2 id=\"搭建satis并索引组件\"><a href=\"#搭建satis并索引组件\" class=\"headerlink\" title=\"搭建satis并索引组件\"></a>搭建satis并索引组件</h2><h3 id=\"安装satis\"><a href=\"#安装satis\" class=\"headerlink\" title=\"安装satis\"></a>安装satis</h3><h4 id=\"使用composer-方法一\"><a href=\"#使用composer-方法一\" class=\"headerlink\" title=\"使用composer (方法一)\"></a>使用composer (方法一)</h4><pre class=\"line-numbers language-SHELL\" data-language=\"SHELL\"><code class=\"language-SHELL\">$ cd &#x2F;data&#x2F;www&#x2F;\n$ composer create-project composer&#x2F;satis --keep-vcs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://user-images.githubusercontent.com/17662451/56189758-54a68380-605b-11e9-9ddc-1e6d97c65172.png\" alt=\"image\"></p>\n<h4 id=\"使用docker-方法二\"><a href=\"#使用docker-方法二\" class=\"headerlink\" title=\"使用docker (方法二)\"></a>使用docker (方法二)</h4><pre class=\"line-numbers language-SHELL\" data-language=\"SHELL\"><code class=\"language-SHELL\">$ docker pull composer&#x2F;satis<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"配置satis\"><a href=\"#配置satis\" class=\"headerlink\" title=\"配置satis\"></a>配置satis</h3><p>进入到satis项目根目录下创建<code>satis.json</code>。</p>\n<pre class=\"line-numbers language-JSON\" data-language=\"JSON\"><code class=\"language-JSON\">&#123;\n    &quot;name&quot;: &quot;私有Composer库&quot;,\n    &quot;homepage&quot;: &quot;http:&#x2F;&#x2F;satis.example.com&quot;,\n    &quot;repositories&quot;: [\n        &#123; &quot;type&quot;: &quot;git&quot;, &quot;url&quot;: &quot;ssh:&#x2F;&#x2F;git@gitlab.example.com&#x2F;sub&#x2F;laravel-builder-ext.git&quot; &#125;\n    ],\n    &quot;require&quot;: &#123;\n        &quot;company&#x2F;package&quot;: &quot;dev-master&quot;\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"创建索引\"><a href=\"#创建索引\" class=\"headerlink\" title=\"创建索引\"></a>创建索引</h3><h4 id=\"使用composer-方法一-1\"><a href=\"#使用composer-方法一-1\" class=\"headerlink\" title=\"使用composer (方法一)\"></a>使用composer (方法一)</h4><pre class=\"line-numbers language-SHELL\" data-language=\"SHELL\"><code class=\"language-SHELL\">$ php bin&#x2F;satis build satis.json .&#x2F;web-v<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://user-images.githubusercontent.com/17662451/56189642-06918000-605b-11e9-9d9e-fe163f210cd9.png\" alt=\"image\"></p>\n<p>这里的<code>web</code>就是索引输出目录。</p>\n<h4 id=\"使用docker-方法二-1\"><a href=\"#使用docker-方法二-1\" class=\"headerlink\" title=\"使用docker (方法二)\"></a>使用docker (方法二)</h4><pre class=\"line-numbers language-SHELL\" data-language=\"SHELL\"><code class=\"language-SHELL\">$ docker run --rm -it -v &#x2F;build:&#x2F;build composer&#x2F;satis<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"自动索引\"><a href=\"#自动索引\" class=\"headerlink\" title=\"自动索引\"></a>自动索引</h4><p>最简单粗暴的方法是用<code>crontab</code>，但这里推荐使用<code>GitLab Web Hook</code>:</p>\n<ol>\n<li>在satis项目创建一个接口执行创建索引的操作。</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/17662451/56270290-5c802980-6128-11e9-9354-9ff765d80059.png\" alt=\"image\"></p>\n<pre class=\"line-numbers language-PHP\" data-language=\"PHP\"><code class=\"language-PHP\">&lt;?php\n\n$valid_token &#x3D; &#39;3.1415926535857&#39;; &#x2F;&#x2F; GitLab web hook的token\n$valid_ip &#x3D; [&#39;127.0.0.1&#39;]; &#x2F;&#x2F; GitLab服务器IP\n\n$client_token &#x3D; $_SERVER[&#39;HTTP_X_GITLAB_TOKEN&#39;];\n$client_ip &#x3D; $_SERVER[&#39;REMOTE_ADDR&#39;];\n\nif ($client_token !&#x3D;&#x3D; $valid_token) die(&#39;Token mismatch!&#39;);\nif (!in_array($client_ip, $valid_ip)) die(&#39;Ip mismatch!&#39;);\n\n$ouptut &#x3D; [];\nexec(&quot;cd &#x2F;data&#x2F;www&#x2F;satis&#x2F;; php bin&#x2F;satis build satis.json .&#x2F;web -v 2&gt;&amp;1&quot;, $output); &#x2F;&#x2F; 创建索引的命令\nvar_dump($output);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>在组件的<code>GitLab</code>仓库中增加<code>Web Hook</code></li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/17662451/56270713-5dfe2180-6129-11e9-9e65-69ab50affed9.png\" alt=\"image\"></p>\n<p>每次组件推送新提交之后都会触发钩子请求satis创建索引。</p>\n<h3 id=\"配置Nginx-可选\"><a href=\"#配置Nginx-可选\" class=\"headerlink\" title=\"配置Nginx (可选)\"></a>配置Nginx (可选)</h3><p>将<code>satis.json</code>中的<code>homepage</code>指向索引输出目录，然后就可以访问satis的界面。</p>\n<p><img src=\"https://user-images.githubusercontent.com/17662451/56188680-b9141380-6058-11e9-9611-aca18f7ded14.png\" alt=\"image\"></p>\n<h3 id=\"添加部署密钥-可选\"><a href=\"#添加部署密钥-可选\" class=\"headerlink\" title=\"添加部署密钥 (可选)\"></a>添加部署密钥 (可选)</h3><p>如果<code>satis</code>所在机器没有权限拉取<code>gitlab</code>仓库，需要生成key并加入到<code>gitlab</code>的<code>Deploy Keys</code>(只读)中。</p>\n<p><img src=\"https://user-images.githubusercontent.com/17662451/56188612-8cf89280-6058-11e9-93c9-856247fee03c.png\" alt=\"image\"></p>\n<h2 id=\"从satis引入composer组件\"><a href=\"#从satis引入composer组件\" class=\"headerlink\" title=\"从satis引入composer组件\"></a>从satis引入composer组件</h2><p>修改使用A项目组件的项目（这里称B项目）的<code>composer.json</code>，加上私有库源：</p>\n<pre class=\"line-numbers language-JSON\" data-language=\"JSON\"><code class=\"language-JSON\">    ...\n    &quot;config&quot;: &#123;\n        &quot;preferred-install&quot;: &quot;dist&quot;,\n        &quot;secure-http&quot;: false \n    &#125;,\n    &quot;repositories&quot;: [&#123;\n        &quot;type&quot;: &quot;composer&quot;,\n        &quot;url&quot;: &quot;http:&#x2F;&#x2F;satis.example.com&quot;\n    &#125;]\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p><code>&quot;secure-http&quot;: false</code>是可选项，当你的私有库地址不支持https时才需要加上。</p>\n</div>\n<p>然后正常引入即可：</p>\n<p><img src=\"https://user-images.githubusercontent.com/17662451/56192258-94bc3500-6060-11e9-89b7-e29004dd2df5.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/17662451/56192137-57f03e00-6060-11e9-8934-5a8d98178846.png\" alt=\"image\"></p>\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><p><a href=\"https://segmentfault.com/a/1190000008509463#articleHeader8\">使用satis自建私有镜像</a></p>\n","text":"人类的本质是复读机。 最近整理项目，将一些复用的轮子封装成Composer组件，但不便于放在packgist.org，所以需要搭建私有的Composer库。 开发composer组件以之前的一遍文章 Laravel/Lumen 扩展DB Builder语法 的功能为例。 在组件项...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"php","slug":"php","count":13,"path":"api/categories/php.json"}],"tags":[{"name":"composer","slug":"composer","count":1,"path":"api/tags/composer.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%8F%91composer%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">开发composer组件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%90%AD%E5%BB%BAsatis%E5%B9%B6%E7%B4%A2%E5%BC%95%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">搭建satis并索引组件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85satis\"><span class=\"toc-text\">安装satis</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8composer-%E6%96%B9%E6%B3%95%E4%B8%80\"><span class=\"toc-text\">使用composer (方法一)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8docker-%E6%96%B9%E6%B3%95%E4%BA%8C\"><span class=\"toc-text\">使用docker (方法二)</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AEsatis\"><span class=\"toc-text\">配置satis</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95\"><span class=\"toc-text\">创建索引</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8composer-%E6%96%B9%E6%B3%95%E4%B8%80-1\"><span class=\"toc-text\">使用composer (方法一)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8docker-%E6%96%B9%E6%B3%95%E4%BA%8C-1\"><span class=\"toc-text\">使用docker (方法二)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%8A%A8%E7%B4%A2%E5%BC%95\"><span class=\"toc-text\">自动索引</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AENginx-%E5%8F%AF%E9%80%89\"><span class=\"toc-text\">配置Nginx (可选)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E9%83%A8%E7%BD%B2%E5%AF%86%E9%92%A5-%E5%8F%AF%E9%80%89\"><span class=\"toc-text\">添加部署密钥 (可选)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%8Esatis%E5%BC%95%E5%85%A5composer%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">从satis引入composer组件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#References\"><span class=\"toc-text\">References</span></a></li></ol>","author":{"name":"CloudyCity","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17662451?s=400&u=643d94296b79c5e8424a2177fc4609a5e0ebeae0&v=4","link":"/","description":"拖延并发强迫症懒癌晚期患者","socials":{"github":"https://github.com/CloudyCity","twitter":"","stackoverflow":"https://stackoverflow.com/users/9827779/cloudycity","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://b23.tv/MK4nKb"},"steam":{"icon":"/svg/steam.svg","link":"https://steamcommunity.com/id/cloudycity"}}}},"mapped":true,"prev_post":{"title":"GitHub Hexo绑定域名","uid":"e5beee7d760d79952b7d1c5a76907b4e","slug":"GitHub-Hexo绑定域名","date":"2019-04-28T08:55:14.000Z","updated":"2021-06-22T01:56:47.318Z","comments":true,"path":"api/articles/GitHub-Hexo绑定域名.json","cover":"https://cdn.searchenginejournal.com/wp-content/uploads/2018/10/shutterstock_781493554.png","text":"火星救援，刻不容缓！ 域名比较流行的是.me顶级域名，简洁直观，不过没有备案资质。这里我用的就是cloudycity.me。 购买关于购买，这里有个非常赞的域名注册商比价网站哪煮迷。我是在西部数码注册的，首年20续费98。 解析添加两条CNAME规则将@与www都指向Github...","link":"","photos":[],"count_time":{"symbolsCount":469,"symbolsTime":"1 mins."},"categories":[{"name":"新手村","slug":"新手村","count":7,"path":"api/categories/新手村.json"}],"tags":[{"name":"hexo","slug":"hexo","count":5,"path":"api/tags/hexo.json"}],"author":{"name":"CloudyCity","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17662451?s=400&u=643d94296b79c5e8424a2177fc4609a5e0ebeae0&v=4","link":"/","description":"拖延并发强迫症懒癌晚期患者","socials":{"github":"https://github.com/CloudyCity","twitter":"","stackoverflow":"https://stackoverflow.com/users/9827779/cloudycity","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://b23.tv/MK4nKb"},"steam":{"icon":"/svg/steam.svg","link":"https://steamcommunity.com/id/cloudycity"}}}}},"next_post":{"title":"如何更好的通过IDE代码检查","uid":"16ed07eb79eb4256778e578efa799c1a","slug":"如何更好的通过IDE代码检查","date":"2019-04-12T10:14:54.000Z","updated":"2021-06-22T01:56:47.317Z","comments":true,"path":"api/articles/如何更好的通过IDE代码检查.json","cover":"https://reinteractive.com/assets/services/inspect/reinteractive-code-inspect-c5d765882bb6372e935ed243f658df90f04b84e62000c9887be744db44933ca3.jpg","text":"我身边有很多同事都没有重视代码检查，每次看他们IDE右侧都是一边红黄棕交错的“线谱”，特别难受。让自己的代码通过IDE的检查，可以避免很多低级的错误。下面分享下如何更好地通过Intellij系列IDE的代码检查。 目标是什么目标是无任何notice，包括英文的拼写检查。 为什么要...","link":"","photos":[],"count_time":{"symbolsCount":830,"symbolsTime":"1 mins."},"categories":[{"name":"新手村","slug":"新手村","count":7,"path":"api/categories/新手村.json"}],"tags":[],"author":{"name":"CloudyCity","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17662451?s=400&u=643d94296b79c5e8424a2177fc4609a5e0ebeae0&v=4","link":"/","description":"拖延并发强迫症懒癌晚期患者","socials":{"github":"https://github.com/CloudyCity","twitter":"","stackoverflow":"https://stackoverflow.com/users/9827779/cloudycity","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://b23.tv/MK4nKb"},"steam":{"icon":"/svg/steam.svg","link":"https://steamcommunity.com/id/cloudycity"}}}}}}