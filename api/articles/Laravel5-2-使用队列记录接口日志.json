{"title":"Laravel5.2 使用队列记录接口日志","uid":"1a45ddc03757a70a484320eec02b084f","slug":"Laravel5-2-使用队列记录接口日志","date":"2019-03-12T07:45:50.000Z","updated":"2021-06-22T01:56:47.317Z","comments":true,"path":"api/articles/Laravel5-2-使用队列记录接口日志.json","cover":"https://hackthestuff.com/uploads/posts/laravel-queue.jpg","content":"<p>最近在开发一个新接口时，需要记录请求与响应的日志。为了提高接口响应速度，记录日志这个环节就由异步队列来完成。项目采用Laravel5.2，队列驱动使用Redis。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p><img src=\"https://user-images.githubusercontent.com/17662451/54182083-7308e480-44db-11e9-9202-f82761510185.png\" alt=\"QQ截图20190312152843\"><br>Laravel 5.2自带的redis队列驱动中会用到<code>watch</code>命令，所以没办法直接使用集群。要么自己写驱动，要么队列单独使用另外的主备redis。我这边是采用后者。</p>\n<h3 id=\"增加redis连接配置\"><a href=\"#增加redis连接配置\" class=\"headerlink\" title=\"增加redis连接配置\"></a>增加redis连接配置</h3><p><code>.env</code></p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">// 队列驱动\n<span class=\"token assign-left variable\">QUEUE_DRIVER</span><span class=\"token operator\">=</span>redis\n\n// 集群\n<span class=\"token assign-left variable\">REDIS_HOST</span><span class=\"token operator\">=</span>xxx.xxx.xxx.xxx\n<span class=\"token assign-left variable\">REDIS_PASSWORD</span><span class=\"token operator\">=</span>xxx\n<span class=\"token assign-left variable\">REDIS_PORT</span><span class=\"token operator\">=</span>xxxx\n\n// 主备\n<span class=\"token assign-left variable\">QUEUE_REDIS_HOST</span><span class=\"token operator\">=</span>xxx.xxx.xxx.xxx\n<span class=\"token assign-left variable\">QUEUE_REDIS_PASSWORD</span><span class=\"token operator\">=</span>xxx\n<span class=\"token assign-left variable\">QUEUE_REDIS_PORT</span><span class=\"token operator\">=</span>xxxx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>config/database.php</code></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token string single-quoted-string\">'redis'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n\n    <span class=\"token string single-quoted-string\">'cluster'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token string single-quoted-string\">'default'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'host'</span> <span class=\"token operator\">=></span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'REDIS_HOST'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'localhost'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'password'</span> <span class=\"token operator\">=></span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'REDIS_PASSWORD'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'port'</span> <span class=\"token operator\">=></span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'REDIS_PORT'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6379</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'database'</span> <span class=\"token operator\">=></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token string single-quoted-string\">'queue'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'host'</span> <span class=\"token operator\">=></span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'QUEUE_REDIS_HOST'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'localhost'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'password'</span> <span class=\"token operator\">=></span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'QUEUE_REDIS_PASSWORD'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'port'</span> <span class=\"token operator\">=></span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'QUEUE_REDIS_PORT'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6379</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'database'</span> <span class=\"token operator\">=></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"指定队列使用的redis连接\"><a href=\"#指定队列使用的redis连接\" class=\"headerlink\" title=\"指定队列使用的redis连接\"></a>指定队列使用的redis连接</h3><p><code>config/queue.php</code></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token string single-quoted-string\">'default'</span> <span class=\"token operator\">=></span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'QUEUE_DRIVER'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'sync'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token operator\">...</span>\n<span class=\"token string single-quoted-string\">'connections'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'redis'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string single-quoted-string\">'driver'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'redis'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'connection'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'queue'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'queue'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'default'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'expire'</span> <span class=\"token operator\">=></span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token operator\">...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"创建Worker\"><a href=\"#创建Worker\" class=\"headerlink\" title=\"创建Worker\"></a>创建Worker</h2><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">php artisan make:job SaveMatchLog<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>与自动计划的<code>Command</code>类一样，在<code>handle()</code>中编写具体业务代码。</p>\n<details class=\"custom-details\">\n<summary>Click to see more</summary>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> SaveMatchLog <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Job</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ShouldQueue</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">use</span> <span class=\"token package\">InteractsWithQueue</span><span class=\"token punctuation\">,</span> SerializesModels<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 请求的订单号\n     * @var string\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$orderNo</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 请求时间\n     * @var array\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$time</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 请求IP\n     * @var array\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$ip</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 客户端系统信息\n     * @var array\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$userAgent</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 响应信息\n     * @var array\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * saveMatchLog constructor.\n     * @param Request $req\n     * @param \\Illuminate\\Http\\JsonResponse $res\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$req</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">orderNo</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$req</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'order_no'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">time</span> <span class=\"token operator\">=</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Y-m-d H:i:s'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$req</span><span class=\"token operator\">-></span><span class=\"token property\">server</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'REQUEST_TIME'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">ip</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$req</span><span class=\"token operator\">-></span><span class=\"token function\">getClientIp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">userAgent</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$req</span><span class=\"token operator\">-></span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'user-agent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$res</span><span class=\"token operator\">-></span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * Execute the job.\n     *\n     * @return void\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 日志内容</span>\n        <span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">getLogContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 输出日志</span>\n        <span class=\"token variable\">$logWriter</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Writer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'match'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$logWriter</span><span class=\"token operator\">-></span><span class=\"token function\">useDailyFiles</span><span class=\"token punctuation\">(</span><span class=\"token function\">storage_path</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'logs/match/match.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$logWriter</span><span class=\"token operator\">-></span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">failed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">getLogContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name class-name-fully-qualified static-context\"><span class=\"token punctuation\">\\</span>Log</span><span class=\"token operator\">::</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'记录请求响应日志到logs/match.log失败，日志将记录在系统日志logs/laravel.log中'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name class-name-fully-qualified static-context\"><span class=\"token punctuation\">\\</span>Log</span><span class=\"token operator\">::</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @return string\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getLogContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n            <span class=\"token string single-quoted-string\">'orderNo'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">orderNo</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'time'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">time</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'ip'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">ip</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'userAgent'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">userAgent</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'msg'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON_UNESCAPED_UNICODE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</p>\n</details>\n<h2 id=\"添加到队列\"><a href=\"#添加到队列\" class=\"headerlink\" title=\"添加到队列\"></a>添加到队列</h2><p>接口的<code>Controller</code>如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">/**\n * 接口入口\n * @param Request $request\n * @return \\Illuminate\\Http\\JsonResponse\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token keyword\">match</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Request</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">_match</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$job</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SaveMatchLog</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$response</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$job</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 使用队列存储日志，提高接口响应速度</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$response</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/**\n * @param Request $request\n * @return \\Illuminate\\Http\\JsonResponse\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">_match</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Request</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// do sth</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"监听队列\"><a href=\"#监听队列\" class=\"headerlink\" title=\"监听队列\"></a>监听队列</h2><p>采用<code>supervisor</code>来管理监听进程</p>\n<h3 id=\"进程配置\"><a href=\"#进程配置\" class=\"headerlink\" title=\"进程配置\"></a>进程配置</h3><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ <span class=\"token function\">cat</span> /etc/supervisor/conf.d/laravel-worker.conf\n<span class=\"token punctuation\">[</span>program:laravel-worker<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">process_name</span><span class=\"token operator\">=</span>%<span class=\"token punctuation\">(</span>program_name<span class=\"token punctuation\">)</span>s_%<span class=\"token punctuation\">(</span>process_num<span class=\"token punctuation\">)</span>02d\n<span class=\"token assign-left variable\">command</span><span class=\"token operator\">=</span>php /data/www/newadminpk/artisan queue:work redis --sleep<span class=\"token operator\">=</span><span class=\"token number\">3</span> --tries<span class=\"token operator\">=</span><span class=\"token number\">3</span> --daemon\n<span class=\"token assign-left variable\">autostart</span><span class=\"token operator\">=</span>true\n<span class=\"token assign-left variable\">autorestart</span><span class=\"token operator\">=</span>true\n<span class=\"token assign-left variable\">user</span><span class=\"token operator\">=</span>www\n<span class=\"token assign-left variable\">numprocs</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token assign-left variable\">redirect_stderr</span><span class=\"token operator\">=</span>true\n<span class=\"token assign-left variable\">stdout_logfile</span><span class=\"token operator\">=</span>/data/www/newadminpk/storage/logs/worker.out.log\n<span class=\"token assign-left variable\">stderr_logfile</span><span class=\"token operator\">=</span>/data/www/newadminpk/storage/logs/worker.err.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"引入配置\"><a href=\"#引入配置\" class=\"headerlink\" title=\"引入配置\"></a>引入配置</h3><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ <span class=\"token function\">tail</span> /etc/supervisord/supervisord.conf\n<span class=\"token punctuation\">[</span>include<span class=\"token punctuation\">]</span>\nfiles <span class=\"token operator\">=</span> ./conf.d/*.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"启动supervisor\"><a href=\"#启动supervisor\" class=\"headerlink\" title=\"启动supervisor\"></a>启动supervisor</h3><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> supervisord -c supervisor.conf  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"启动队列监听器\"><a href=\"#启动队列监听器\" class=\"headerlink\" title=\"启动队列监听器\"></a>启动队列监听器</h3><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> supervisorctl reread\n<span class=\"token function\">sudo</span> supervisorctl update\n<span class=\"token function\">sudo</span> supervisorctl start laravel-worker:*<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ <span class=\"token function\">ps</span> -ef <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> artisan <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -v <span class=\"token function\">grep</span>\nwww      <span class=\"token number\">21064</span>  <span class=\"token number\">3186</span>  <span class=\"token number\">0</span> <span class=\"token number\">14</span>:49 ?        00:00:01 php /data/www/newadminpk/artisan queue:work redis --sleep<span class=\"token operator\">=</span><span class=\"token number\">3</span> --tries<span class=\"token operator\">=</span><span class=\"token number\">3</span> --daemon<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"Walle配置\"><a href=\"#Walle配置\" class=\"headerlink\" title=\"Walle配置\"></a>Walle配置</h3><p>这个项目通过<code>Walle</code>部署，需要在项目配置的<code>post-release</code>中配置以下</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> supervisorctl restart laravel-worker:*<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>否则每次发布新版本后，Worker还是会将日志保存到上一个版本的路径下，导致日志丢失（这一点只要熟悉Walle的原理就知道原因了）。</p>\n<h3 id=\"ELK优化\"><a href=\"#ELK优化\" class=\"headerlink\" title=\"ELK优化\"></a>ELK优化</h3><p>目前日志处理与检索还属于低频需求，后期可以考虑采用ELK改进写入日志之后的流程。</p>\n","text":"最近在开发一个新接口时，需要记录请求与响应的日志。为了提高接口响应速度，记录日志这个环节就由异步队列来完成。项目采用Laravel5.2，队列驱动使用Redis。 配置Laravel 5.2自带的redis队列驱动中会用到watch命令，所以没办法直接使用集群。要么自己写驱动，要...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"php","slug":"php","count":13,"path":"api/categories/php.json"}],"tags":[{"name":"laravel","slug":"laravel","count":10,"path":"api/tags/laravel.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A2%9E%E5%8A%A0redis%E8%BF%9E%E6%8E%A5%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">增加redis连接配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8C%87%E5%AE%9A%E9%98%9F%E5%88%97%E4%BD%BF%E7%94%A8%E7%9A%84redis%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">指定队列使用的redis连接</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BAWorker\"><span class=\"toc-text\">创建Worker</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E5%88%B0%E9%98%9F%E5%88%97\"><span class=\"toc-text\">添加到队列</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%91%E5%90%AC%E9%98%9F%E5%88%97\"><span class=\"toc-text\">监听队列</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">进程配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%95%E5%85%A5%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">引入配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8A%A8supervisor\"><span class=\"toc-text\">启动supervisor</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8A%A8%E9%98%9F%E5%88%97%E7%9B%91%E5%90%AC%E5%99%A8\"><span class=\"toc-text\">启动队列监听器</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96\"><span class=\"toc-text\">其他</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Walle%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">Walle配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ELK%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">ELK优化</span></a></li></ol></li></ol>","author":{"name":"CloudyCity","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17662451?s=400&u=643d94296b79c5e8424a2177fc4609a5e0ebeae0&v=4","link":"/","description":"拖延并发强迫症懒癌晚期患者","socials":{"github":"https://github.com/CloudyCity","twitter":"","stackoverflow":"https://stackoverflow.com/users/9827779/cloudycity","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://b23.tv/MK4nKb"},"steam":{"icon":"/svg/steam.svg","link":"https://steamcommunity.com/id/cloudycity"}}}},"mapped":true,"prev_post":{"title":"Laravel 接收PUT/PATCH/DELETE请求的值","uid":"409c5fa3f2aea2d9921180b4b25a34b1","slug":"Laravel-接收PUT-PATCH-DELETE请求的值","date":"2019-04-01T08:30:22.000Z","updated":"2021-06-22T01:56:47.318Z","comments":true,"path":"api/articles/Laravel-接收PUT-PATCH-DELETE请求的值.json","cover":"https://img-medianova.mncdn.com/wp-content/uploads/sites/8/2020/01/laravel-1130x356.png","text":"最近在调试PUT接口时，控制器中Request对象无法正常获取表单内容，发现这是Symfony组件的经典问题。 What当时的场景是前端ajax使用PUT方式提交了一个multipart/form-data的请求，但是Request对象无法使用get()获取到数据。 WhyLar...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"php","slug":"php","count":13,"path":"api/categories/php.json"}],"tags":[{"name":"laravel","slug":"laravel","count":10,"path":"api/tags/laravel.json"}],"author":{"name":"CloudyCity","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17662451?s=400&u=643d94296b79c5e8424a2177fc4609a5e0ebeae0&v=4","link":"/","description":"拖延并发强迫症懒癌晚期患者","socials":{"github":"https://github.com/CloudyCity","twitter":"","stackoverflow":"https://stackoverflow.com/users/9827779/cloudycity","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://b23.tv/MK4nKb"},"steam":{"icon":"/svg/steam.svg","link":"https://steamcommunity.com/id/cloudycity"}}}}},"next_post":{"title":"VSCode FTP与SSH插件推荐","uid":"53af487a07bcb20aa882173eb16518f3","slug":"VSCode-FTP与SSH插件推荐","date":"2019-02-28T08:13:43.000Z","updated":"2021-06-22T01:56:47.317Z","comments":true,"path":"api/articles/VSCode-FTP与SSH插件推荐.json","cover":"https://miro.medium.com/max/1200/1*YkgFq4CT5rRyz46K3uxHtQ.png","text":"因为一些不可抗力因素，我偶尔要直接在线上改文件，这时就要在几个工具间反复切换（xftp下载，sublime编辑，xftp上传，xshell执行），比较繁琐。最近刚好改用VSCode，在市场找到两个比较合适的插件，在一个编辑器内即可完成上述流程，非常顺滑。 SSH FS如果你直接在...","link":"","photos":[],"count_time":{"symbolsCount":357,"symbolsTime":"1 mins."},"categories":[{"name":"新手村","slug":"新手村","count":7,"path":"api/categories/新手村.json"}],"tags":[{"name":"工具","slug":"工具","count":1,"path":"api/tags/工具.json"}],"author":{"name":"CloudyCity","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17662451?s=400&u=643d94296b79c5e8424a2177fc4609a5e0ebeae0&v=4","link":"/","description":"拖延并发强迫症懒癌晚期患者","socials":{"github":"https://github.com/CloudyCity","twitter":"","stackoverflow":"https://stackoverflow.com/users/9827779/cloudycity","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://b23.tv/MK4nKb"},"steam":{"icon":"/svg/steam.svg","link":"https://steamcommunity.com/id/cloudycity"}}}}}}